[{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"the-tidysem-workflow","dir":"Articles","previous_headings":"","what":"The tidySEM workflow","title":"Generating syntax for structural equation models","text":"workflow underlying syntax generation tidySEM follows: Give variables data object short, informative names, easily machine readable Convert data tidy_sem object running model <- tidy_sem(data) E.g., measurement(model) Optionally, access dictionary, data, syntax elements tidy_sem object calling dictionary(model), get_data(model), syntax(model) Optionally, modify dictionary, data, syntax elements tidy_sem object dictionary(model) <- ..., get_data(model) <- ..., syntax(model) <- ... Converting tidy_sem object lavaan syntax using as_lavaan(model) using input lavaan functions sem, lavaan, cfa Converting tidy_sem object OpenMx using as_ram(model), using input mxRun `run_mx`` Converting tidy_sem object Mplus using as_mplus(model), using input MplusAutomation::mplusObject() Using functions estimate_lavaan(model), estimate_mx(model), estimate_mplus(model) elements tidy_sem object “tidy” data, .e., tabular data.frames, can modified using familiar suite functions ‘tidyverse’. Thus, data, dictionary, syntax represented data.frames.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"step-1-check-the-variable-names","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Step 1: Check the variable names","title":"Generating syntax for structural equation models","text":"example, let’s make graph classic lavaan tutorial example CFA. First, check data names: names informative, items named x.. indicators three different latent variables. rename accordingly:","code":"df <- HolzingerSwineford1939 names(df) #>  [1] \"id\"     \"sex\"    \"ageyr\"  \"agemo\"  \"school\" \"grade\"  \"x1\"     \"x2\"     #>  [9] \"x3\"     \"x4\"     \"x5\"     \"x6\"     \"x7\"     \"x8\"     \"x9\" names(df)[grepl(\"^x\", names(df))] <- c(\"vis_1\", \"vis_2\", \"vis_3\", \"tex_1\", \"tex_2\", \"tex_3\", \"spe_1\", \"spe_2\", \"spe_3\")"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"guidelines-for-naming-variables","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Guidelines for naming variables","title":"Generating syntax for structural equation models","text":"general, good practice name variables using following information: Scale name (variable part scale, observed variable name) Measurement occasion (longitudinal) Respondent id (multiple respondents completed scales) Scale item number, tidySEM expects separated remainder variable name splitting character (e.g., scale_item) Roughly speaking, elements variable name ordered “slow-changing” “fast-changing”; .e.; scales, possibly several measurement occasions respondents, many items.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"step-2-generate-a-dictionary","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Step 2: Generate a dictionary","title":"Generating syntax for structural equation models","text":"dictionary indicates variables data belong , example, scale. data informative names, possible construct data dictionary automatically:","code":"model <- tidy_sem(df) model #> A tidy_sem object #> v    $dictionary #> v    $data #> o    $syntax"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"step-3-generate-syntax","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Step 3: Generate syntax","title":"Generating syntax for structural equation models","text":"can automatically add basic syntax sem_syntax object, passing syntax-generating function like measurement(), adds measurement model scales object:","code":"model |>   measurement() -> model model #> A tidy_sem object #> v    $dictionary #> v    $data #> v    $syntax"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"step-4-run-the-model","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Step 4: Run the model","title":"Generating syntax for structural equation models","text":"resulting model can evaluated ‘lavaan’ syntax, ‘OpenMx’ syntax, ‘Mplus’ syntax, using as_lavaan, as_ram, as_mplus functions. example, using lavaan: model can estimated ‘OpenMx’ R-package OpenMx. model can estimated ‘Mplus’ R-package MplusAutomation. requires ‘Mplus’ installed.","code":"model |>   estimate_lavaan() #> lavaan 0.6-19 ended normally after 35 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        30 #>  #>   Number of observations                           301 #>  #> Model Test User Model: #>                                                        #>   Test statistic                                85.306 #>   Degrees of freedom                                24 #>   P-value (Chi-square)                           0.000 model |>   estimate_mx() library(MplusAutomation) model |>   estimate_mplus()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"optional-step-5-access-the-dictionary-data-and-syntax","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Optional step 5: Access the dictionary, data, and syntax","title":"Generating syntax for structural equation models","text":"dictionary syntax can examined using dictionary(model) syntax(model):","code":"dictionary(model) #>      name scale      type  label #> 1      id  <NA>  observed     id #> 2     sex  <NA>  observed    sex #> 3   ageyr  <NA>  observed  ageyr #> 4   agemo  <NA>  observed  agemo #> 5  school  <NA>  observed school #> 6   grade  <NA>  observed  grade #> 7   vis_1   vis indicator  vis_1 #> 8   vis_2   vis indicator  vis_2 #> 9   vis_3   vis indicator  vis_3 #> 10  tex_1   tex indicator  tex_1 #> 11  tex_2   tex indicator  tex_2 #> 12  tex_3   tex indicator  tex_3 #> 13  spe_1   spe indicator  spe_1 #> 14  spe_2   spe indicator  spe_2 #> 15  spe_3   spe indicator  spe_3 #> 16    vis  <NA>    latent    vis #> 17    tex  <NA>    latent    tex #> 18    spe  <NA>    latent    spe syntax(model) #>      lhs op   rhs block group free label ustart plabel #> 1    vis =~ vis_1     1     1    0            1   .p1. #> 2    vis =~ vis_2     1     1    1           NA   .p2. #> 3    vis =~ vis_3     1     1    1           NA   .p3. #> 4    tex =~ tex_1     1     1    0            1   .p4. #> 5    tex =~ tex_2     1     1    1           NA   .p5. #> 6    tex =~ tex_3     1     1    1           NA   .p6. #> 7    spe =~ spe_1     1     1    0            1   .p7. #> 8    spe =~ spe_2     1     1    1           NA   .p8. #> 9    spe =~ spe_3     1     1    1           NA   .p9. #> 10 vis_1 ~~ vis_1     1     1    1           NA  .p10. #> 11 vis_2 ~~ vis_2     1     1    1           NA  .p11. #> 12 vis_3 ~~ vis_3     1     1    1           NA  .p12. #> 13 tex_1 ~~ tex_1     1     1    1           NA  .p13. #> 14 tex_2 ~~ tex_2     1     1    1           NA  .p14. #> 15 tex_3 ~~ tex_3     1     1    1           NA  .p15. #> 16 spe_1 ~~ spe_1     1     1    1           NA  .p16. #> 17 spe_2 ~~ spe_2     1     1    1           NA  .p17. #> 18 spe_3 ~~ spe_3     1     1    1           NA  .p18. #> 19   vis ~~   vis     1     1    1           NA  .p19. #> 20   tex ~~   tex     1     1    1           NA  .p20. #> 21   spe ~~   spe     1     1    1           NA  .p21. #> 22   vis ~~   tex     1     1    1           NA  .p22. #> 23   vis ~~   spe     1     1    1           NA  .p23. #> 24   tex ~~   spe     1     1    1           NA  .p24. #> 25 vis_1 ~1           1     1    1           NA  .p25. #> 26 vis_2 ~1           1     1    1           NA  .p26. #> 27 vis_3 ~1           1     1    1           NA  .p27. #> 28 tex_1 ~1           1     1    1           NA  .p28. #> 29 tex_2 ~1           1     1    1           NA  .p29. #> 30 tex_3 ~1           1     1    1           NA  .p30. #> 31 spe_1 ~1           1     1    1           NA  .p31. #> 32 spe_2 ~1           1     1    1           NA  .p32. #> 33 spe_3 ~1           1     1    1           NA  .p33. #> 34   vis ~1           1     1    0            0  .p34. #> 35   tex ~1           1     1    0            0  .p35. #> 36   spe ~1           1     1    0            0  .p36."},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"optional-step-6-modify-the-dictionary-and-syntax","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Optional step 6: Modify the dictionary and syntax","title":"Generating syntax for structural equation models","text":"stage, may want modify basic syntax slightly. functions dictionary(model) <- ... syntax(model) <- ... can used modify dictionary syntax: example, imagine want change model, items “spe” subscale load “tex” latent variable. first replace latent variable “spe” “tex”, secondly remove mention “spe” latent variable: Remember original latent variables identified fixing one indicator equal 1, free one : modified model run:","code":"dictionary(model) |>   mutate(label = ifelse(label == \"vis\", \"Visual\", label)) #>      name scale      type  label #> 1      id  <NA>  observed     id #> 2     sex  <NA>  observed    sex #> 3   ageyr  <NA>  observed  ageyr #> 4   agemo  <NA>  observed  agemo #> 5  school  <NA>  observed school #> 6   grade  <NA>  observed  grade #> 7   vis_1   vis indicator  vis_1 #> 8   vis_2   vis indicator  vis_2 #> 9   vis_3   vis indicator  vis_3 #> 10  tex_1   tex indicator  tex_1 #> 11  tex_2   tex indicator  tex_2 #> 12  tex_3   tex indicator  tex_3 #> 13  spe_1   spe indicator  spe_1 #> 14  spe_2   spe indicator  spe_2 #> 15  spe_3   spe indicator  spe_3 #> 16    vis  <NA>    latent Visual #> 17    tex  <NA>    latent    tex #> 18    spe  <NA>    latent    spe syntax(model) |>   mutate(lhs = ifelse(lhs == \"spe\" & op == \"=~\", \"tex\", lhs)) |>   filter(!(lhs == \"spe\" | rhs == \"spe\")) -> syntax(model) syntax(model) |>   mutate(free = ifelse(rhs == \"spe_1\", 1, free),   ustart = ifelse(rhs == \"spe_1\", NA, ustart)) -> syntax(model) estimate_lavaan(model) #> lavaan 0.6-19 ended normally after 28 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        28 #>  #>   Number of observations                           301 #>  #> Model Test User Model: #>                                                        #>   Test statistic                               236.091 #>   Degrees of freedom                                26 #>   P-value (Chi-square)                           0.000"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Generating_syntax.html","id":"optional-step-7-adding-paths","dir":"Articles","previous_headings":"Example: Running a CFA","what":"Optional step 7: Adding paths","title":"Generating syntax for structural equation models","text":"addition way editing data.frame model syntax described Step 6, also possible add (modify) paths adding lavaan syntax. example, imagine - instead “vis” “tex” correlate, want add regression path : function accepts quoted (character) unquoted arguments. , example, want add cross-loading “spe_1” “vis”, addition regression path , use following code:","code":"model |>   add_paths(\"vis ~ tex\") |>   estimate_lavaan() |>   summary(estimates = TRUE) #> lavaan 0.6-19 ended normally after 25 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        28 #>  #>   Number of observations                           301 #>  #> Model Test User Model: #>                                                        #>   Test statistic                               236.091 #>   Degrees of freedom                                26 #>   P-value (Chi-square)                           0.000 #>  #> Parameter Estimates: #>  #>   Standard errors                             Standard #>   Information                                 Expected #>   Information saturated (h1) model          Structured #>  #> Latent Variables: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   vis =~                                               #>     vis_1             1.000                            #>     vis_2             0.551    0.103    5.335    0.000 #>     vis_3             0.700    0.115    6.110    0.000 #>   tex =~                                               #>     tex_1             1.000                            #>     tex_2             1.109    0.066   16.892    0.000 #>     tex_3             0.927    0.056   16.636    0.000 #>     spe_1             0.198    0.067    2.969    0.003 #>     spe_2             0.198    0.062    3.192    0.001 #>     spe_3             0.299    0.061    4.907    0.000 #>  #> Regressions: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   vis ~                                                #>     tex               0.447    0.068    6.569    0.000 #>  #> Intercepts: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .vis_1             4.936    0.067   73.473    0.000 #>    .vis_2             6.088    0.068   89.855    0.000 #>    .vis_3             2.250    0.065   34.579    0.000 #>    .tex_1             3.061    0.067   45.694    0.000 #>    .tex_2             4.341    0.074   58.452    0.000 #>    .tex_3             2.186    0.063   34.667    0.000 #>    .spe_1             4.186    0.063   66.766    0.000 #>    .spe_2             5.527    0.058   94.854    0.000 #>    .spe_3             5.374    0.058   92.546    0.000 #>    .vis               0.000                            #>     tex               0.000                            #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .vis_1             0.526    0.127    4.136    0.000 #>    .vis_2             1.129    0.102   11.030    0.000 #>    .vis_3             0.867    0.094    9.237    0.000 #>    .tex_1             0.376    0.048    7.885    0.000 #>    .tex_2             0.461    0.059    7.871    0.000 #>    .tex_3             0.358    0.043    8.334    0.000 #>    .spe_1             1.145    0.094   12.216    0.000 #>    .spe_2             0.984    0.081   12.207    0.000 #>    .spe_3             0.928    0.077   12.121    0.000 #>    .vis               0.638    0.136    4.692    0.000 #>     tex               0.975    0.112    8.714    0.000 model |>   add_paths(\"vis ~ tex\", vis =~ spe_1) |>   estimate_lavaan() #> lavaan 0.6-19 ended normally after 31 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        28 #>  #>   Number of observations                           301 #>  #> Model Test User Model: #>                                                        #>   Test statistic                               288.451 #>   Degrees of freedom                                26 #>   P-value (Chi-square)                           0.000"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"the-tidysem-workflow","dir":"Articles","previous_headings":"","what":"The tidySEM workflow","title":"Plotting graphs for structural equation models","text":"workflow underlying graphing tidySEM follows: Run analysis, e.g., using lavaan::sem() MplusAutomation::mplusModeler(), passing output object, e.g., fit Plot graph using function graph(fit), customize graph following optional steps . Optionally Examine nodes edges can extracted fit model object, running get_nodes(fit) get_edges(fit) Optionally Specify layout graph using get_layout() Optionally, prepare graph data plotting, running prepare_graph(fit, layout). Store resulting graph data object, e.g., graph_data Optionally, access nodes edges graph_data using nodes(graph_data) edges(graph_data) Optionally, modify nodes edges graph_data using nodes(graph_data) <- ...edges(graph_data) <- ... workflow ensures high degree transparency customizability. Objects returned functions “tidy” data, .e., tabular data.frames, can modified using familiar suite functions ‘tidyverse’.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"step-1-run-an-analysis","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Step 1: Run an analysis","title":"Plotting graphs for structural equation models","text":"example, let’s make graph classic lavaan tutorial example CFA. First, conduct SEM analysis:","code":"library(lavaan) HS.model <- ' visual  =~ x1 + x2 + x3               textual =~ x4 + x5 + x6               speed   =~ x7 + x8 + x9 ' fit <- cfa(HS.model, data=HolzingerSwineford1939)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"step-2-plot-the-graph","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Step 2: Plot the graph","title":"Plotting graphs for structural equation models","text":"point, simply plot graph:  uses default layout, provided igraph package. However, node placement aesthetically pleasing. One areas tidySEM really excels customization. every aspect graph represented tidy data (basically, spreadsheet), easy move nodes around create custom layout.","code":"graph_sem(model = fit)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"optional-step-3-customizing-the-layout","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Optional step 3: Customizing the layout","title":"Plotting graphs for structural equation models","text":"tidySEM, layout specified matrix (grid) node names empty spaces (NA \"\"). essentially three ways specify layout: Automatically, fit model Manually R spreadsheet program","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"automatically-generate-layout-for-a-model","dir":"Articles","previous_headings":"Example: Graphing a CFA > Optional step 3: Customizing the layout","what":"Automatically generate layout for a model","title":"Plotting graphs for structural equation models","text":"example used automatically generated layout fit model (lavaan Mplus). open help file function running ?graph_sem, can see default argument layout = get_layout(x = model), model refers model argument function. get_layout() function automatically generates layout fit model object. get layout matrix, can run: get_layout() function relies igraph::layout_as_tree() place nodes. layout functions igraph package can used specifying layout_algorithm = ... argument:","code":"get_layout(fit) #>      [,1] [,2]      [,3] [,4] [,5]    [,6]     [,7] [,8] #> [1,] NA   NA        NA   NA   NA      \"visual\" NA   NA   #> [2,] NA   \"textual\" NA   NA   \"speed\" \"x1\"     \"x2\" \"x3\" #> [3,] \"x4\" \"x5\"      \"x6\" \"x7\" \"x8\"    \"x9\"     NA   NA   #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\" get_layout(fit, layout_algorithm = \"layout_in_circle\") #>      [,1] [,2]      [,3] [,4] [,5]    [,6]     [,7] [,8] #> [1,] NA   NA        NA   NA   NA      \"visual\" NA   NA   #> [2,] NA   \"textual\" NA   NA   \"speed\" \"x1\"     \"x2\" \"x3\" #> [3,] \"x4\" \"x5\"      \"x6\" \"x7\" \"x8\"    \"x9\"     NA   NA   #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\" get_layout(fit, layout_algorithm = \"layout_on_grid\") #>      [,1] [,2]      [,3] [,4] [,5]    [,6]     [,7] [,8] #> [1,] NA   NA        NA   NA   NA      \"visual\" NA   NA   #> [2,] NA   \"textual\" NA   NA   \"speed\" \"x1\"     \"x2\" \"x3\" #> [3,] \"x4\" \"x5\"      \"x6\" \"x7\" \"x8\"    \"x9\"     NA   NA   #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"specifying-layout-manually-in-r","dir":"Articles","previous_headings":"Example: Graphing a CFA > Optional step 3: Customizing the layout","what":"Specifying layout manually in R","title":"Plotting graphs for structural equation models","text":"Manually specifying layout can done providing node names empty spaces (NA \"\"), number rows desired layout matrix. example: course, also possible simply define matrix using matrix().","code":"get_layout(\"c\", NA,  \"d\",            NA,  \"e\", NA, rows = 2) #>      [,1] [,2] [,3] #> [1,] \"c\"  NA   \"d\"  #> [2,] NA   \"e\"  NA   #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"specifying-layout-in-a-spreadsheet-program","dir":"Articles","previous_headings":"Example: Graphing a CFA > Optional step 3: Customizing the layout","what":"Specifying layout in a spreadsheet program","title":"Plotting graphs for structural equation models","text":"Specifying layout spreadsheet program user-friendly, one can visually position nodes, e.g.:  obtain layout matrix, one can save spreadsheet .csv file load R like : Alternatively, one can select layout image , copy clipboard, read R clipboard. works differently Windows Mac. Windows, run: Mac, run:","code":"read.csv(\"example.csv\") read.table(\"clipboard\", sep = \"\\t\") read.table(pipe(\"pbpaste\"), sep=\"\\t\") #>   V1     V2 V3 #> 1 x1     x2 x3 #> 2    visual"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"examples-of-user-defined-layout","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Examples of user-defined layout","title":"Plotting graphs for structural equation models","text":"can specify simple layout two hypothetical nodes x y generated follows: mediation model, one might specify layout like : three-item CFA model, one might specify: CFA model estimated : plot CFA model custom layout follows:","code":"get_layout(\"x\", \"y\", rows = 1) #>      [,1] [,2] #> [1,] \"x\"  \"y\"  #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\" get_layout(\"\", \"m\", \"\",            \"x\", \"\", \"y\", rows = 2) #>      [,1] [,2] [,3] #> [1,] \"\"   \"m\"  \"\"   #> [2,] \"x\"  \"\"   \"y\"  #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\" get_layout(\"\", \"F\", \"\",            \"y1\", \"y2\", \"y3\", rows = 2) #>      [,1] [,2] [,3] #> [1,] \"\"   \"F\"  \"\"   #> [2,] \"y1\" \"y2\" \"y3\" #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\" lay <- get_layout(\"\", \"\", \"visual\",\"\",\"textual\",\"\",\"speed\",\"\", \"\",                   \"x1\", \"x2\", \"x3\", \"x4\", \"x5\", \"x6\", \"x7\", \"x8\", \"x9\", rows = 2) graph_sem(fit, layout = lay)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"step-4-customize-nodes-and-edges","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Step 4: Customize nodes and edges","title":"Plotting graphs for structural equation models","text":"simple model , easy verify names nodes edges syntax : nodes consist three latent variables (visual, textual, speed), nine observed variables (x1-x9). edges nine factor loadings - three latent variable correlations, included default. can confirm nodes available running get_nodes(): edges: Note first columns used plotting (specifically, , , arrow, label, connect_from, connect_to, curvature). remaining columns correspond output table_results(fit). auxiliary columns can used conditionally customize graph (e.g., changing color linetype significant paths ).","code":"get_nodes(fit) #>       name shape   label #> 1   visual  oval  visual #> 2  textual  oval textual #> 3    speed  oval   speed #> 4       x1  rect      x1 #> 5       x2  rect      x2 #> 6       x3  rect      x3 #> 7       x4  rect      x4 #> 8       x5  rect      x5 #> 9       x6  rect      x6 #> 10      x7  rect      x7 #> 11      x8  rect      x8 #> 12      x9  rect      x9 get_edges(fit) #>       from      to arrow   label connect_from connect_to curvature linetype #> 1   visual      x1  last    1.00           NA         NA        NA        1 #> 2   visual      x2  last 0.55***           NA         NA        NA        1 #> 3   visual      x3  last 0.73***           NA         NA        NA        1 #> 4  textual      x4  last    1.00           NA         NA        NA        1 #> 5  textual      x5  last 1.11***           NA         NA        NA        1 #> 6  textual      x6  last 0.93***           NA         NA        NA        1 #> 7    speed      x7  last    1.00           NA         NA        NA        1 #> 8    speed      x8  last 1.18***           NA         NA        NA        1 #> 9    speed      x9  last 1.08***           NA         NA        NA        1 #> 10      x1      x1  both 0.55***           NA         NA        NA        1 #> 11      x2      x2  both 1.13***           NA         NA        NA        1 #> 12      x3      x3  both 0.84***           NA         NA        NA        1 #> 13      x4      x4  both 0.37***           NA         NA        NA        1 #> 14      x5      x5  both 0.45***           NA         NA        NA        1 #> 15      x6      x6  both 0.36***           NA         NA        NA        1 #> 16      x7      x7  both 0.80***           NA         NA        NA        1 #> 17      x8      x8  both 0.49***           NA         NA        NA        1 #> 18      x9      x9  both 0.57***           NA         NA        NA        1 #> 19  visual  visual  both 0.81***           NA         NA        NA        1 #> 20 textual textual  both 0.98***           NA         NA        NA        1 #> 21   speed   speed  both 0.38***           NA         NA        NA        1 #> 22  visual textual  none 0.41***           NA         NA        60        2 #> 23  visual   speed  none 0.26***           NA         NA        60        2 #> 24 textual   speed  none 0.17***           NA         NA        60        2 #>        lhs op     rhs  est   se pval      confint est_sig est_std se_std #> 1   visual =~      x1 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.77   0.05 #> 2   visual =~      x2 0.55 0.10 0.00 [0.36, 0.75] 0.55***    0.42   0.06 #> 3   visual =~      x3 0.73 0.11 0.00 [0.52, 0.94] 0.73***    0.58   0.06 #> 4  textual =~      x4 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.85   0.02 #> 5  textual =~      x5 1.11 0.07 0.00 [0.98, 1.24] 1.11***    0.86   0.02 #> 6  textual =~      x6 0.93 0.06 0.00 [0.82, 1.03] 0.93***    0.84   0.02 #> 7    speed =~      x7 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.57   0.05 #> 8    speed =~      x8 1.18 0.16 0.00 [0.86, 1.50] 1.18***    0.72   0.05 #> 9    speed =~      x9 1.08 0.15 0.00 [0.79, 1.38] 1.08***    0.67   0.05 #> 10      x1 ~~      x1 0.55 0.11 0.00 [0.33, 0.77] 0.55***    0.40   0.08 #> 11      x2 ~~      x2 1.13 0.10 0.00 [0.93, 1.33] 1.13***    0.82   0.05 #> 12      x3 ~~      x3 0.84 0.09 0.00 [0.67, 1.02] 0.84***    0.66   0.06 #> 13      x4 ~~      x4 0.37 0.05 0.00 [0.28, 0.46] 0.37***    0.27   0.04 #> 14      x5 ~~      x5 0.45 0.06 0.00 [0.33, 0.56] 0.45***    0.27   0.04 #> 15      x6 ~~      x6 0.36 0.04 0.00 [0.27, 0.44] 0.36***    0.30   0.04 #> 16      x7 ~~      x7 0.80 0.08 0.00 [0.64, 0.96] 0.80***    0.68   0.06 #> 17      x8 ~~      x8 0.49 0.07 0.00 [0.34, 0.63] 0.49***    0.48   0.07 #> 18      x9 ~~      x9 0.57 0.07 0.00 [0.43, 0.70] 0.57***    0.56   0.07 #> 19  visual ~~  visual 0.81 0.15 0.00 [0.52, 1.09] 0.81***    1.00   0.00 #> 20 textual ~~ textual 0.98 0.11 0.00 [0.76, 1.20] 0.98***    1.00   0.00 #> 21   speed ~~   speed 0.38 0.09 0.00 [0.21, 0.55] 0.38***    1.00   0.00 #> 22  visual ~~ textual 0.41 0.07 0.00 [0.26, 0.55] 0.41***    0.46   0.06 #> 23  visual ~~   speed 0.26 0.06 0.00 [0.15, 0.37] 0.26***    0.47   0.07 #> 24 textual ~~   speed 0.17 0.05 0.00 [0.08, 0.27] 0.17***    0.28   0.07 #>    pval_std  confint_std est_sig_std       label_results show #> 1      0.00 [0.66, 0.88]     0.77***        visual.BY.x1 TRUE #> 2      0.00 [0.31, 0.54]     0.42***        visual.BY.x2 TRUE #> 3      0.00 [0.47, 0.69]     0.58***        visual.BY.x3 TRUE #> 4      0.00 [0.81, 0.90]     0.85***       textual.BY.x4 TRUE #> 5      0.00 [0.81, 0.90]     0.86***       textual.BY.x5 TRUE #> 6      0.00 [0.79, 0.88]     0.84***       textual.BY.x6 TRUE #> 7      0.00 [0.47, 0.67]     0.57***         speed.BY.x7 TRUE #> 8      0.00 [0.62, 0.82]     0.72***         speed.BY.x8 TRUE #> 9      0.00 [0.56, 0.77]     0.67***         speed.BY.x9 TRUE #> 10     0.00 [0.24, 0.57]     0.40***        Variances.x1 TRUE #> 11     0.00 [0.72, 0.92]     0.82***        Variances.x2 TRUE #> 12     0.00 [0.54, 0.79]     0.66***        Variances.x3 TRUE #> 13     0.00 [0.20, 0.35]     0.27***        Variances.x4 TRUE #> 14     0.00 [0.19, 0.34]     0.27***        Variances.x5 TRUE #> 15     0.00 [0.22, 0.37]     0.30***        Variances.x6 TRUE #> 16     0.00 [0.56, 0.79]     0.68***        Variances.x7 TRUE #> 17     0.00 [0.33, 0.62]     0.48***        Variances.x8 TRUE #> 18     0.00 [0.42, 0.69]     0.56***        Variances.x9 TRUE #> 19     <NA> [1.00, 1.00]        1.00    Variances.visual TRUE #> 20     <NA> [1.00, 1.00]        1.00   Variances.textual TRUE #> 21     <NA> [1.00, 1.00]        1.00     Variances.speed TRUE #> 22     0.00 [0.33, 0.58]     0.46*** visual.WITH.textual TRUE #> 23     0.00 [0.33, 0.61]     0.47***   visual.WITH.speed TRUE #> 24     0.00 [0.15, 0.42]     0.28***  textual.WITH.speed TRUE"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"customizing-node-and-edge-labels","dir":"Articles","previous_headings":"Example: Graphing a CFA > Step 4: Customize nodes and edges","what":"Customizing node and edge labels","title":"Plotting graphs for structural equation models","text":"get_nodes() get_edges() functions call table_results() fit model object get information nodes edges. functions label argument can either character string referencing column output table_results(), expression evaluated context output. allows customize node edge labels. example, maybe want combine parameter estimate confidence interval edge label: can nodes, note previous lavaan model, mean structure part model. nodes represent means intercepts, table_results() retrieve parameter estimates nodes mean structure part model. absence additional information nodes, get_nodes() use node name label.remove node labels, specify label = NULL. can re-run model mean structure get information nodes: Running get_nodes() now uses estimated means label: labels can customized shown :","code":"get_edges(fit, label = paste(est, confint)) #>       from      to arrow             label connect_from connect_to curvature #> 1   visual      x1  last 1.00 [1.00, 1.00]           NA         NA        NA #> 2   visual      x2  last 0.55 [0.36, 0.75]           NA         NA        NA #> 3   visual      x3  last 0.73 [0.52, 0.94]           NA         NA        NA #> 4  textual      x4  last 1.00 [1.00, 1.00]           NA         NA        NA #> 5  textual      x5  last 1.11 [0.98, 1.24]           NA         NA        NA #> 6  textual      x6  last 0.93 [0.82, 1.03]           NA         NA        NA #> 7    speed      x7  last 1.00 [1.00, 1.00]           NA         NA        NA #> 8    speed      x8  last 1.18 [0.86, 1.50]           NA         NA        NA #> 9    speed      x9  last 1.08 [0.79, 1.38]           NA         NA        NA #> 10      x1      x1  both 0.55 [0.33, 0.77]           NA         NA        NA #> 11      x2      x2  both 1.13 [0.93, 1.33]           NA         NA        NA #> 12      x3      x3  both 0.84 [0.67, 1.02]           NA         NA        NA #> 13      x4      x4  both 0.37 [0.28, 0.46]           NA         NA        NA #> 14      x5      x5  both 0.45 [0.33, 0.56]           NA         NA        NA #> 15      x6      x6  both 0.36 [0.27, 0.44]           NA         NA        NA #> 16      x7      x7  both 0.80 [0.64, 0.96]           NA         NA        NA #> 17      x8      x8  both 0.49 [0.34, 0.63]           NA         NA        NA #> 18      x9      x9  both 0.57 [0.43, 0.70]           NA         NA        NA #> 19  visual  visual  both 0.81 [0.52, 1.09]           NA         NA        NA #> 20 textual textual  both 0.98 [0.76, 1.20]           NA         NA        NA #> 21   speed   speed  both 0.38 [0.21, 0.55]           NA         NA        NA #> 22  visual textual  none 0.41 [0.26, 0.55]           NA         NA        60 #> 23  visual   speed  none 0.26 [0.15, 0.37]           NA         NA        60 #> 24 textual   speed  none 0.17 [0.08, 0.27]           NA         NA        60 #>    linetype     lhs op     rhs  est   se pval      confint est_sig est_std #> 1         1  visual =~      x1 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.77 #> 2         1  visual =~      x2 0.55 0.10 0.00 [0.36, 0.75] 0.55***    0.42 #> 3         1  visual =~      x3 0.73 0.11 0.00 [0.52, 0.94] 0.73***    0.58 #> 4         1 textual =~      x4 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.85 #> 5         1 textual =~      x5 1.11 0.07 0.00 [0.98, 1.24] 1.11***    0.86 #> 6         1 textual =~      x6 0.93 0.06 0.00 [0.82, 1.03] 0.93***    0.84 #> 7         1   speed =~      x7 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.57 #> 8         1   speed =~      x8 1.18 0.16 0.00 [0.86, 1.50] 1.18***    0.72 #> 9         1   speed =~      x9 1.08 0.15 0.00 [0.79, 1.38] 1.08***    0.67 #> 10        1      x1 ~~      x1 0.55 0.11 0.00 [0.33, 0.77] 0.55***    0.40 #> 11        1      x2 ~~      x2 1.13 0.10 0.00 [0.93, 1.33] 1.13***    0.82 #> 12        1      x3 ~~      x3 0.84 0.09 0.00 [0.67, 1.02] 0.84***    0.66 #> 13        1      x4 ~~      x4 0.37 0.05 0.00 [0.28, 0.46] 0.37***    0.27 #> 14        1      x5 ~~      x5 0.45 0.06 0.00 [0.33, 0.56] 0.45***    0.27 #> 15        1      x6 ~~      x6 0.36 0.04 0.00 [0.27, 0.44] 0.36***    0.30 #> 16        1      x7 ~~      x7 0.80 0.08 0.00 [0.64, 0.96] 0.80***    0.68 #> 17        1      x8 ~~      x8 0.49 0.07 0.00 [0.34, 0.63] 0.49***    0.48 #> 18        1      x9 ~~      x9 0.57 0.07 0.00 [0.43, 0.70] 0.57***    0.56 #> 19        1  visual ~~  visual 0.81 0.15 0.00 [0.52, 1.09] 0.81***    1.00 #> 20        1 textual ~~ textual 0.98 0.11 0.00 [0.76, 1.20] 0.98***    1.00 #> 21        1   speed ~~   speed 0.38 0.09 0.00 [0.21, 0.55] 0.38***    1.00 #> 22        2  visual ~~ textual 0.41 0.07 0.00 [0.26, 0.55] 0.41***    0.46 #> 23        2  visual ~~   speed 0.26 0.06 0.00 [0.15, 0.37] 0.26***    0.47 #> 24        2 textual ~~   speed 0.17 0.05 0.00 [0.08, 0.27] 0.17***    0.28 #>    se_std pval_std  confint_std est_sig_std       label_results show #> 1    0.05     0.00 [0.66, 0.88]     0.77***        visual.BY.x1 TRUE #> 2    0.06     0.00 [0.31, 0.54]     0.42***        visual.BY.x2 TRUE #> 3    0.06     0.00 [0.47, 0.69]     0.58***        visual.BY.x3 TRUE #> 4    0.02     0.00 [0.81, 0.90]     0.85***       textual.BY.x4 TRUE #> 5    0.02     0.00 [0.81, 0.90]     0.86***       textual.BY.x5 TRUE #> 6    0.02     0.00 [0.79, 0.88]     0.84***       textual.BY.x6 TRUE #> 7    0.05     0.00 [0.47, 0.67]     0.57***         speed.BY.x7 TRUE #> 8    0.05     0.00 [0.62, 0.82]     0.72***         speed.BY.x8 TRUE #> 9    0.05     0.00 [0.56, 0.77]     0.67***         speed.BY.x9 TRUE #> 10   0.08     0.00 [0.24, 0.57]     0.40***        Variances.x1 TRUE #> 11   0.05     0.00 [0.72, 0.92]     0.82***        Variances.x2 TRUE #> 12   0.06     0.00 [0.54, 0.79]     0.66***        Variances.x3 TRUE #> 13   0.04     0.00 [0.20, 0.35]     0.27***        Variances.x4 TRUE #> 14   0.04     0.00 [0.19, 0.34]     0.27***        Variances.x5 TRUE #> 15   0.04     0.00 [0.22, 0.37]     0.30***        Variances.x6 TRUE #> 16   0.06     0.00 [0.56, 0.79]     0.68***        Variances.x7 TRUE #> 17   0.07     0.00 [0.33, 0.62]     0.48***        Variances.x8 TRUE #> 18   0.07     0.00 [0.42, 0.69]     0.56***        Variances.x9 TRUE #> 19   0.00     <NA> [1.00, 1.00]        1.00    Variances.visual TRUE #> 20   0.00     <NA> [1.00, 1.00]        1.00   Variances.textual TRUE #> 21   0.00     <NA> [1.00, 1.00]        1.00     Variances.speed TRUE #> 22   0.06     0.00 [0.33, 0.58]     0.46*** visual.WITH.textual TRUE #> 23   0.07     0.00 [0.33, 0.61]     0.47***   visual.WITH.speed TRUE #> 24   0.07     0.00 [0.15, 0.42]     0.28***  textual.WITH.speed TRUE fit <- cfa(HS.model, data=HolzingerSwineford1939, meanstructure = TRUE) get_nodes(fit) #>       name shape         label     lhs op rhs  est   se pval      confint #> 1    speed  oval   speed\\n0.00   speed ~1     0.00 0.00 <NA> [0.00, 0.00] #> 2  textual  oval textual\\n0.00 textual ~1     0.00 0.00 <NA> [0.00, 0.00] #> 3   visual  oval  visual\\n0.00  visual ~1     0.00 0.00 <NA> [0.00, 0.00] #> 4       x1  rect   x1\\n4.94***      x1 ~1     4.94 0.07 0.00 [4.80, 5.07] #> 5       x2  rect   x2\\n6.09***      x2 ~1     6.09 0.07 0.00 [5.96, 6.22] #> 6       x3  rect   x3\\n2.25***      x3 ~1     2.25 0.07 0.00 [2.12, 2.38] #> 7       x4  rect   x4\\n3.06***      x4 ~1     3.06 0.07 0.00 [2.93, 3.19] #> 8       x5  rect   x5\\n4.34***      x5 ~1     4.34 0.07 0.00 [4.19, 4.49] #> 9       x6  rect   x6\\n2.19***      x6 ~1     2.19 0.06 0.00 [2.06, 2.31] #> 10      x7  rect   x7\\n4.19***      x7 ~1     4.19 0.06 0.00 [4.06, 4.31] #> 11      x8  rect   x8\\n5.53***      x8 ~1     5.53 0.06 0.00 [5.41, 5.64] #> 12      x9  rect   x9\\n5.37***      x9 ~1     5.37 0.06 0.00 [5.26, 5.49] #>    est_sig est_std se_std pval_std  confint_std est_sig_std label_results #> 1     0.00    0.00   0.00     <NA> [0.00, 0.00]        0.00   Means.speed #> 2     0.00    0.00   0.00     <NA> [0.00, 0.00]        0.00 Means.textual #> 3     0.00    0.00   0.00     <NA> [0.00, 0.00]        0.00  Means.visual #> 4  4.94***    4.23   0.18     0.00 [3.88, 4.59]     4.23***      Means.x1 #> 5  6.09***    5.18   0.22     0.00 [4.75, 5.61]     5.18***      Means.x2 #> 6  2.25***    1.99   0.10     0.00 [1.80, 2.19]     1.99***      Means.x3 #> 7  3.06***    2.63   0.12     0.00 [2.39, 2.87]     2.63***      Means.x4 #> 8  4.34***    3.37   0.15     0.00 [3.08, 3.66]     3.37***      Means.x5 #> 9  2.19***    2.00   0.10     0.00 [1.80, 2.19]     2.00***      Means.x6 #> 10 4.19***    3.85   0.17     0.00 [3.52, 4.18]     3.85***      Means.x7 #> 11 5.53***    5.47   0.23     0.00 [5.02, 5.92]     5.47***      Means.x8 #> 12 5.37***    5.33   0.22     0.00 [4.89, 5.78]     5.33***      Means.x9 get_nodes(fit, label = paste0(name, \"\\n\", est, \" \", confint)) #>       name shape                      label     lhs op rhs  est   se pval #> 1    speed  oval   speed\\n0.00 [0.00, 0.00]   speed ~1     0.00 0.00 <NA> #> 2  textual  oval textual\\n0.00 [0.00, 0.00] textual ~1     0.00 0.00 <NA> #> 3   visual  oval  visual\\n0.00 [0.00, 0.00]  visual ~1     0.00 0.00 <NA> #> 4       x1  rect      x1\\n4.94 [4.80, 5.07]      x1 ~1     4.94 0.07 0.00 #> 5       x2  rect      x2\\n6.09 [5.96, 6.22]      x2 ~1     6.09 0.07 0.00 #> 6       x3  rect      x3\\n2.25 [2.12, 2.38]      x3 ~1     2.25 0.07 0.00 #> 7       x4  rect      x4\\n3.06 [2.93, 3.19]      x4 ~1     3.06 0.07 0.00 #> 8       x5  rect      x5\\n4.34 [4.19, 4.49]      x5 ~1     4.34 0.07 0.00 #> 9       x6  rect      x6\\n2.19 [2.06, 2.31]      x6 ~1     2.19 0.06 0.00 #> 10      x7  rect      x7\\n4.19 [4.06, 4.31]      x7 ~1     4.19 0.06 0.00 #> 11      x8  rect      x8\\n5.53 [5.41, 5.64]      x8 ~1     5.53 0.06 0.00 #> 12      x9  rect      x9\\n5.37 [5.26, 5.49]      x9 ~1     5.37 0.06 0.00 #>         confint est_sig est_std se_std pval_std  confint_std est_sig_std #> 1  [0.00, 0.00]    0.00    0.00   0.00     <NA> [0.00, 0.00]        0.00 #> 2  [0.00, 0.00]    0.00    0.00   0.00     <NA> [0.00, 0.00]        0.00 #> 3  [0.00, 0.00]    0.00    0.00   0.00     <NA> [0.00, 0.00]        0.00 #> 4  [4.80, 5.07] 4.94***    4.23   0.18     0.00 [3.88, 4.59]     4.23*** #> 5  [5.96, 6.22] 6.09***    5.18   0.22     0.00 [4.75, 5.61]     5.18*** #> 6  [2.12, 2.38] 2.25***    1.99   0.10     0.00 [1.80, 2.19]     1.99*** #> 7  [2.93, 3.19] 3.06***    2.63   0.12     0.00 [2.39, 2.87]     2.63*** #> 8  [4.19, 4.49] 4.34***    3.37   0.15     0.00 [3.08, 3.66]     3.37*** #> 9  [2.06, 2.31] 2.19***    2.00   0.10     0.00 [1.80, 2.19]     2.00*** #> 10 [4.06, 4.31] 4.19***    3.85   0.17     0.00 [3.52, 4.18]     3.85*** #> 11 [5.41, 5.64] 5.53***    5.47   0.23     0.00 [5.02, 5.92]     5.47*** #> 12 [5.26, 5.49] 5.37***    5.33   0.22     0.00 [4.89, 5.78]     5.33*** #>    label_results #> 1    Means.speed #> 2  Means.textual #> 3   Means.visual #> 4       Means.x1 #> 5       Means.x2 #> 6       Means.x3 #> 7       Means.x4 #> 8       Means.x5 #> 9       Means.x6 #> 10      Means.x7 #> 11      Means.x8 #> 12      Means.x9"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"customize-labels-of-a-sem_graph","dir":"Articles","previous_headings":"Example: Graphing a CFA > Step 4: Customize nodes and edges","what":"Customize labels of a sem_graph","title":"Plotting graphs for structural equation models","text":"Instead customizing node edge labels call get_nodes() get_edges(), also possible use auxiliary columns nodes edges elements sem_graph object customize labels (properties plot) later. First, let’s generate sem_graph object examine edges element: columns edges element can used manually construct labels, using edit_graph() function:  can done node labels:  Note , specifying \"nodes\" \"edges\"), nodes edges edited - preceding example, actually want different labels nodes edges (node labels shown). example, can change label color nodes edges:  section Visual aspects demonstrates use auxiliary columns customize visual properties graph.","code":"p <- prepare_graph(fit) edges(p) #>       from      to arrow   label connect_from connect_to curvature linetype #> 1   visual      x1  last    1.00       bottom        top        NA        1 #> 2   visual      x2  last 0.55***       bottom       left        NA        1 #> 3   visual      x3  last 0.73***        right       left        NA        1 #> 4  textual      x4  last    1.00       bottom      right        NA        1 #> 5  textual      x5  last 1.11***       bottom        top        NA        1 #> 6  textual      x6  last 0.93***       bottom       left        NA        1 #> 7    speed      x7  last    1.00       bottom      right        NA        1 #> 8    speed      x8  last 1.18***       bottom        top        NA        1 #> 9    speed      x9  last 1.08***       bottom       left        NA        1 #> 10      x1      x1  both 0.55***       bottom     bottom        NA        1 #> 11      x2      x2  both 1.13***        right      right        NA        1 #> 12      x3      x3  both 0.84***        right      right        NA        1 #> 13      x4      x4  both 0.37***         left       left        NA        1 #> 14      x5      x5  both 0.45***       bottom     bottom        NA        1 #> 15      x6      x6  both 0.36***        right      right        NA        1 #> 16      x7      x7  both 0.80***         left       left        NA        1 #> 17      x8      x8  both 0.49***       bottom     bottom        NA        1 #> 18      x9      x9  both 0.57***        right      right        NA        1 #> 19  visual  visual  both 0.81***          top        top        NA        1 #> 20 textual textual  both 0.98***          top        top        NA        1 #> 21   speed   speed  both 0.38***        right      right        NA        1 #> 22  visual textual  none 0.41***         left      right        60        2 #> 23  visual   speed  none 0.26***       bottom        top        60        2 #> 24 textual   speed  none 0.17***        right       left        60        2 #>        lhs op     rhs  est   se pval      confint est_sig est_std se_std #> 1   visual =~      x1 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.77   0.05 #> 2   visual =~      x2 0.55 0.10 0.00 [0.36, 0.75] 0.55***    0.42   0.06 #> 3   visual =~      x3 0.73 0.11 0.00 [0.52, 0.94] 0.73***    0.58   0.06 #> 4  textual =~      x4 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.85   0.02 #> 5  textual =~      x5 1.11 0.07 0.00 [0.98, 1.24] 1.11***    0.86   0.02 #> 6  textual =~      x6 0.93 0.06 0.00 [0.82, 1.03] 0.93***    0.84   0.02 #> 7    speed =~      x7 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.57   0.05 #> 8    speed =~      x8 1.18 0.16 0.00 [0.86, 1.50] 1.18***    0.72   0.05 #> 9    speed =~      x9 1.08 0.15 0.00 [0.79, 1.38] 1.08***    0.67   0.05 #> 10      x1 ~~      x1 0.55 0.11 0.00 [0.33, 0.77] 0.55***    0.40   0.08 #> 11      x2 ~~      x2 1.13 0.10 0.00 [0.93, 1.33] 1.13***    0.82   0.05 #> 12      x3 ~~      x3 0.84 0.09 0.00 [0.67, 1.02] 0.84***    0.66   0.06 #> 13      x4 ~~      x4 0.37 0.05 0.00 [0.28, 0.46] 0.37***    0.27   0.04 #> 14      x5 ~~      x5 0.45 0.06 0.00 [0.33, 0.56] 0.45***    0.27   0.04 #> 15      x6 ~~      x6 0.36 0.04 0.00 [0.27, 0.44] 0.36***    0.30   0.04 #> 16      x7 ~~      x7 0.80 0.08 0.00 [0.64, 0.96] 0.80***    0.68   0.06 #> 17      x8 ~~      x8 0.49 0.07 0.00 [0.34, 0.63] 0.49***    0.48   0.07 #> 18      x9 ~~      x9 0.57 0.07 0.00 [0.43, 0.70] 0.57***    0.56   0.07 #> 19  visual ~~  visual 0.81 0.15 0.00 [0.52, 1.09] 0.81***    1.00   0.00 #> 20 textual ~~ textual 0.98 0.11 0.00 [0.76, 1.20] 0.98***    1.00   0.00 #> 21   speed ~~   speed 0.38 0.09 0.00 [0.21, 0.55] 0.38***    1.00   0.00 #> 22  visual ~~ textual 0.41 0.07 0.00 [0.26, 0.55] 0.41***    0.46   0.06 #> 23  visual ~~   speed 0.26 0.06 0.00 [0.15, 0.37] 0.26***    0.47   0.07 #> 24 textual ~~   speed 0.17 0.05 0.00 [0.08, 0.27] 0.17***    0.28   0.07 #>    pval_std  confint_std est_sig_std       label_results show #> 1      0.00 [0.66, 0.88]     0.77***        visual.BY.x1 TRUE #> 2      0.00 [0.31, 0.54]     0.42***        visual.BY.x2 TRUE #> 3      0.00 [0.47, 0.69]     0.58***        visual.BY.x3 TRUE #> 4      0.00 [0.81, 0.90]     0.85***       textual.BY.x4 TRUE #> 5      0.00 [0.81, 0.90]     0.86***       textual.BY.x5 TRUE #> 6      0.00 [0.79, 0.88]     0.84***       textual.BY.x6 TRUE #> 7      0.00 [0.47, 0.67]     0.57***         speed.BY.x7 TRUE #> 8      0.00 [0.62, 0.82]     0.72***         speed.BY.x8 TRUE #> 9      0.00 [0.56, 0.77]     0.67***         speed.BY.x9 TRUE #> 10     0.00 [0.24, 0.57]     0.40***        Variances.x1 TRUE #> 11     0.00 [0.72, 0.92]     0.82***        Variances.x2 TRUE #> 12     0.00 [0.54, 0.79]     0.66***        Variances.x3 TRUE #> 13     0.00 [0.20, 0.35]     0.27***        Variances.x4 TRUE #> 14     0.00 [0.19, 0.34]     0.27***        Variances.x5 TRUE #> 15     0.00 [0.22, 0.37]     0.30***        Variances.x6 TRUE #> 16     0.00 [0.56, 0.79]     0.68***        Variances.x7 TRUE #> 17     0.00 [0.33, 0.62]     0.48***        Variances.x8 TRUE #> 18     0.00 [0.42, 0.69]     0.56***        Variances.x9 TRUE #> 19     <NA> [1.00, 1.00]        1.00    Variances.visual TRUE #> 20     <NA> [1.00, 1.00]        1.00   Variances.textual TRUE #> 21     <NA> [1.00, 1.00]        1.00     Variances.speed TRUE #> 22     0.00 [0.33, 0.58]     0.46*** visual.WITH.textual TRUE #> 23     0.00 [0.33, 0.61]     0.47***   visual.WITH.speed TRUE #> 24     0.00 [0.15, 0.42]     0.28***  textual.WITH.speed TRUE prepare_graph(fit) %>%   edit_graph({ label = paste(est_sig_std, \"\\n\", confint_std) }) %>%   plot() prepare_graph(fit) %>%   edit_graph({ label = paste(est_sig_std, \"\\n\", confint_std) }) %>%   edit_graph({ label = paste(name, \"\\n\", est_sig_std, \"\\n\", confint_std) }, element = \"nodes\") %>%   plot() prepare_graph(fit) %>%   edit_graph({ label_color = \"blue\" }) %>%   plot()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"optional-step-5-accessing-graph-data-before-plotting","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Optional step 5: accessing graph data before plotting","title":"Plotting graphs for structural equation models","text":"One important feature tidySEM graphing data used compose plot can conveniently accessed modified plotting. First, use prepare_graph() assign plot data object.","code":"graph_data <- prepare_graph(model = fit, layout = lay)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"optional-step-6-access-the-nodes-and-edges","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Optional step 6: Access the nodes and edges","title":"Plotting graphs for structural equation models","text":"nodes edges can examined using nodes(graph_data) edges(graph_data):","code":"nodes(graph_data) #>       name shape         label  x y node_xmin node_xmax node_ymin node_ymax #> 1    speed  oval   speed\\n0.00 14 4      13.5      14.5       3.5       4.5 #> 2  textual  oval textual\\n0.00 10 4       9.5      10.5       3.5       4.5 #> 3   visual  oval  visual\\n0.00  6 4       5.5       6.5       3.5       4.5 #> 4       x1  rect   x1\\n4.94***  2 2       1.4       2.6       1.6       2.4 #> 5       x2  rect   x2\\n6.09***  4 2       3.4       4.6       1.6       2.4 #> 6       x3  rect   x3\\n2.25***  6 2       5.4       6.6       1.6       2.4 #> 7       x4  rect   x4\\n3.06***  8 2       7.4       8.6       1.6       2.4 #> 8       x5  rect   x5\\n4.34*** 10 2       9.4      10.6       1.6       2.4 #> 9       x6  rect   x6\\n2.19*** 12 2      11.4      12.6       1.6       2.4 #> 10      x7  rect   x7\\n4.19*** 14 2      13.4      14.6       1.6       2.4 #> 11      x8  rect   x8\\n5.53*** 16 2      15.4      16.6       1.6       2.4 #> 12      x9  rect   x9\\n5.37*** 18 2      17.4      18.6       1.6       2.4 #>        lhs op rhs  est   se pval      confint est_sig est_std se_std pval_std #> 1    speed ~1     0.00 0.00 <NA> [0.00, 0.00]    0.00    0.00   0.00     <NA> #> 2  textual ~1     0.00 0.00 <NA> [0.00, 0.00]    0.00    0.00   0.00     <NA> #> 3   visual ~1     0.00 0.00 <NA> [0.00, 0.00]    0.00    0.00   0.00     <NA> #> 4       x1 ~1     4.94 0.07 0.00 [4.80, 5.07] 4.94***    4.23   0.18     0.00 #> 5       x2 ~1     6.09 0.07 0.00 [5.96, 6.22] 6.09***    5.18   0.22     0.00 #> 6       x3 ~1     2.25 0.07 0.00 [2.12, 2.38] 2.25***    1.99   0.10     0.00 #> 7       x4 ~1     3.06 0.07 0.00 [2.93, 3.19] 3.06***    2.63   0.12     0.00 #> 8       x5 ~1     4.34 0.07 0.00 [4.19, 4.49] 4.34***    3.37   0.15     0.00 #> 9       x6 ~1     2.19 0.06 0.00 [2.06, 2.31] 2.19***    2.00   0.10     0.00 #> 10      x7 ~1     4.19 0.06 0.00 [4.06, 4.31] 4.19***    3.85   0.17     0.00 #> 11      x8 ~1     5.53 0.06 0.00 [5.41, 5.64] 5.53***    5.47   0.23     0.00 #> 12      x9 ~1     5.37 0.06 0.00 [5.26, 5.49] 5.37***    5.33   0.22     0.00 #>     confint_std est_sig_std label_results show #> 1  [0.00, 0.00]        0.00   Means.speed TRUE #> 2  [0.00, 0.00]        0.00 Means.textual TRUE #> 3  [0.00, 0.00]        0.00  Means.visual TRUE #> 4  [3.88, 4.59]     4.23***      Means.x1 TRUE #> 5  [4.75, 5.61]     5.18***      Means.x2 TRUE #> 6  [1.80, 2.19]     1.99***      Means.x3 TRUE #> 7  [2.39, 2.87]     2.63***      Means.x4 TRUE #> 8  [3.08, 3.66]     3.37***      Means.x5 TRUE #> 9  [1.80, 2.19]     2.00***      Means.x6 TRUE #> 10 [3.52, 4.18]     3.85***      Means.x7 TRUE #> 11 [5.02, 5.92]     5.47***      Means.x8 TRUE #> 12 [4.89, 5.78]     5.33***      Means.x9 TRUE edges(graph_data) #>       from      to arrow   label connect_from connect_to curvature linetype #> 1   visual      x1  last    1.00         left      right        NA        1 #> 2   visual      x2  last 0.55***       bottom      right        NA        1 #> 3   visual      x3  last 0.73***       bottom        top        NA        1 #> 4  textual      x4  last    1.00       bottom      right        NA        1 #> 5  textual      x5  last 1.11***       bottom        top        NA        1 #> 6  textual      x6  last 0.93***       bottom       left        NA        1 #> 7    speed      x7  last    1.00       bottom        top        NA        1 #> 8    speed      x8  last 1.18***       bottom       left        NA        1 #> 9    speed      x9  last 1.08***        right       left        NA        1 #> 10      x1      x1  both 0.55***         left       left        NA        1 #> 11      x2      x2  both 1.13***         left       left        NA        1 #> 12      x3      x3  both 0.84***       bottom     bottom        NA        1 #> 13      x4      x4  both 0.37***         left       left        NA        1 #> 14      x5      x5  both 0.45***       bottom     bottom        NA        1 #> 15      x6      x6  both 0.36***        right      right        NA        1 #> 16      x7      x7  both 0.80***       bottom     bottom        NA        1 #> 17      x8      x8  both 0.49***        right      right        NA        1 #> 18      x9      x9  both 0.57***        right      right        NA        1 #> 19  visual  visual  both 0.81***          top        top        NA        1 #> 20 textual textual  both 0.98***          top        top        NA        1 #> 21   speed   speed  both 0.38***          top        top        NA        1 #> 22  visual textual  none 0.41***        right       left        60        2 #> 23  visual   speed  none 0.26***        right       left        60        2 #> 24 textual   speed  none 0.17***        right       left        60        2 #>        lhs op     rhs  est   se pval      confint est_sig est_std se_std #> 1   visual =~      x1 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.77   0.05 #> 2   visual =~      x2 0.55 0.10 0.00 [0.36, 0.75] 0.55***    0.42   0.06 #> 3   visual =~      x3 0.73 0.11 0.00 [0.52, 0.94] 0.73***    0.58   0.06 #> 4  textual =~      x4 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.85   0.02 #> 5  textual =~      x5 1.11 0.07 0.00 [0.98, 1.24] 1.11***    0.86   0.02 #> 6  textual =~      x6 0.93 0.06 0.00 [0.82, 1.03] 0.93***    0.84   0.02 #> 7    speed =~      x7 1.00 0.00 <NA> [1.00, 1.00]    1.00    0.57   0.05 #> 8    speed =~      x8 1.18 0.16 0.00 [0.86, 1.50] 1.18***    0.72   0.05 #> 9    speed =~      x9 1.08 0.15 0.00 [0.79, 1.38] 1.08***    0.67   0.05 #> 10      x1 ~~      x1 0.55 0.11 0.00 [0.33, 0.77] 0.55***    0.40   0.08 #> 11      x2 ~~      x2 1.13 0.10 0.00 [0.93, 1.33] 1.13***    0.82   0.05 #> 12      x3 ~~      x3 0.84 0.09 0.00 [0.67, 1.02] 0.84***    0.66   0.06 #> 13      x4 ~~      x4 0.37 0.05 0.00 [0.28, 0.46] 0.37***    0.27   0.04 #> 14      x5 ~~      x5 0.45 0.06 0.00 [0.33, 0.56] 0.45***    0.27   0.04 #> 15      x6 ~~      x6 0.36 0.04 0.00 [0.27, 0.44] 0.36***    0.30   0.04 #> 16      x7 ~~      x7 0.80 0.08 0.00 [0.64, 0.96] 0.80***    0.68   0.06 #> 17      x8 ~~      x8 0.49 0.07 0.00 [0.34, 0.63] 0.49***    0.48   0.07 #> 18      x9 ~~      x9 0.57 0.07 0.00 [0.43, 0.70] 0.57***    0.56   0.07 #> 19  visual ~~  visual 0.81 0.15 0.00 [0.52, 1.09] 0.81***    1.00   0.00 #> 20 textual ~~ textual 0.98 0.11 0.00 [0.76, 1.20] 0.98***    1.00   0.00 #> 21   speed ~~   speed 0.38 0.09 0.00 [0.21, 0.55] 0.38***    1.00   0.00 #> 22  visual ~~ textual 0.41 0.07 0.00 [0.26, 0.55] 0.41***    0.46   0.06 #> 23  visual ~~   speed 0.26 0.06 0.00 [0.15, 0.37] 0.26***    0.47   0.07 #> 24 textual ~~   speed 0.17 0.05 0.00 [0.08, 0.27] 0.17***    0.28   0.07 #>    pval_std  confint_std est_sig_std       label_results show #> 1      0.00 [0.66, 0.88]     0.77***        visual.BY.x1 TRUE #> 2      0.00 [0.31, 0.54]     0.42***        visual.BY.x2 TRUE #> 3      0.00 [0.47, 0.69]     0.58***        visual.BY.x3 TRUE #> 4      0.00 [0.81, 0.90]     0.85***       textual.BY.x4 TRUE #> 5      0.00 [0.81, 0.90]     0.86***       textual.BY.x5 TRUE #> 6      0.00 [0.79, 0.88]     0.84***       textual.BY.x6 TRUE #> 7      0.00 [0.47, 0.67]     0.57***         speed.BY.x7 TRUE #> 8      0.00 [0.62, 0.82]     0.72***         speed.BY.x8 TRUE #> 9      0.00 [0.56, 0.77]     0.67***         speed.BY.x9 TRUE #> 10     0.00 [0.24, 0.57]     0.40***        Variances.x1 TRUE #> 11     0.00 [0.72, 0.92]     0.82***        Variances.x2 TRUE #> 12     0.00 [0.54, 0.79]     0.66***        Variances.x3 TRUE #> 13     0.00 [0.20, 0.35]     0.27***        Variances.x4 TRUE #> 14     0.00 [0.19, 0.34]     0.27***        Variances.x5 TRUE #> 15     0.00 [0.22, 0.37]     0.30***        Variances.x6 TRUE #> 16     0.00 [0.56, 0.79]     0.68***        Variances.x7 TRUE #> 17     0.00 [0.33, 0.62]     0.48***        Variances.x8 TRUE #> 18     0.00 [0.42, 0.69]     0.56***        Variances.x9 TRUE #> 19     <NA> [1.00, 1.00]        1.00    Variances.visual TRUE #> 20     <NA> [1.00, 1.00]        1.00   Variances.textual TRUE #> 21     <NA> [1.00, 1.00]        1.00     Variances.speed TRUE #> 22     0.00 [0.33, 0.58]     0.46*** visual.WITH.textual TRUE #> 23     0.00 [0.33, 0.61]     0.47***   visual.WITH.speed TRUE #> 24     0.00 [0.15, 0.42]     0.28***  textual.WITH.speed TRUE"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"optional-step-7-modify-the-nodes-and-edges","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Optional step 7: Modify the nodes and edges","title":"Plotting graphs for structural equation models","text":"stage, may want improve basic plot slightly. functions nodes(graph_data) <- ... edges(graph_data) <- ... can used modify nodes edges. functions pair well general ‘tidyverse’ workflow. example, might want print node labels latent variables Title Case instead just using variable names: Now, edges, see default edging algorithm connected nodes side--side (based smallest possible Euclidian distance). However, simple graph, makes sense connect nodes top--bottom - except latent variable covariances. can use conditional replacement edges:","code":"library(dplyr) library(stringr) nodes(graph_data) <- nodes(graph_data) %>%   mutate(label = str_to_title(label)) edges(graph_data) %>%   mutate(connect_from = replace(connect_from, is.na(curvature), \"bottom\")) %>%   mutate(connect_to = replace(connect_to, is.na(curvature), \"top\")) -> edges(graph_data)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"plot-the-customized-graph","dir":"Articles","previous_headings":"Example: Graphing a CFA","what":"Plot the customized graph","title":"Plotting graphs for structural equation models","text":"can plot customized graph using plot(graph_data); generic plot method sem_graph objects:","code":"plot(graph_data)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"connecting-nodes","dir":"Articles","previous_headings":"","what":"Connecting nodes","title":"Plotting graphs for structural equation models","text":"functions graph_sem() prepare_graph() always try connect nodes aesthetically pleasing way. , connect nodes one four sides (top, bottom, left right), based shortest distance two nodes. Alternatively, users can specify value angle parameter. parameter connects nodes top--bottom within angle degrees . Remaining nodes connected side--side. Thus, increasing angle larger number (180 degrees), can also ensure nodes connected top bottom:","code":"graph_sem(model = fit, layout = lay, angle = 170)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"visual-aspects","dir":"Articles","previous_headings":"","what":"Visual aspects","title":"Plotting graphs for structural equation models","text":"visual aspects graphs created using graph_sem() prepare_graph() can easily customized (see ?graph_sem()). functions construct graph based data.frame nodes, data.frame edges. visual aspects can customized adding extra columns data.frames.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"visual-aspects-of-edges","dir":"Articles","previous_headings":"Visual aspects","what":"Visual aspects of edges","title":"Plotting graphs for structural equation models","text":"Edges following aesthetics (see ?geom_path()): linetype: type line, e.g., continuous (linetype = 1 dashed linetype = 2) colour color: color line (e.g., colour = \"red\" colour = \"blue\") size: size line (e.g., size = 1 size = 2) alpha: transparency line (e.g., alpha = 1 alpha = .2) aesthetics can customized adding columns edges data.frame, whose names correspond aesthetics. example:","code":"edg <- data.frame(from = \"x\",                   to = \"y\",                   linetype = 2,                   colour = \"red\",                   size = 2,                   alpha = .5)  graph_sem(edges = edg, layout = get_layout(\"x\", \"y\", rows = 1))"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"visual-aspects-of-nodes","dir":"Articles","previous_headings":"Visual aspects","what":"Visual aspects of nodes","title":"Plotting graphs for structural equation models","text":"Nodes following aesthetics (see ?geom_polygon()): linetype: type line surrounding node, e.g., continuous (linetype = 1 dashed linetype = 2) colour color: color line surrounding node (e.g., colour = \"red\" colour = \"blue\") fill: interior color node (e.g., colour = \"red\" colour = \"blue\") size: size line (e.g., size = 1 size = 2) alpha: transparency node (e.g., alpha = 1 alpha = .2) , , can appended extra columns nodes data.frame:  aesthetics can also passed sem_graph object preparing data, example, highlighting specific model element, low factor loading x2 visual CFA example :","code":"edg <- data.frame(from = \"x\",                   to = \"y\") nod <- data.frame(name = c(\"x\", \"y\"),                     shape = c(\"rect\", \"oval\"),                     linetype = c(2, 2),                     colour = c(\"blue\", \"blue\"),                     fill = c(\"blue\", \"blue\"),                     size = c(2, 2),                     alpha = .5) graph_sem(edges = edg, nodes = nod, layout = get_layout(\"x\", \"y\", rows = 1)) edges(graph_data) %>%   mutate(colour = \"black\") %>%   mutate(colour = replace(colour, from == \"visual\" & to == \"x2\", \"red\")) %>%   mutate(linetype = 1) %>%   mutate(linetype = replace(linetype, from == \"visual\" & to == \"x2\", 2)) %>%   mutate(alpha = 1) %>%   mutate(alpha = replace(alpha, from == \"visual\" & to == \"x2\", .5)) -> edges(graph_data) plot(graph_data)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"visual-aspects-of-edge-labels","dir":"Articles","previous_headings":"Visual aspects","what":"Visual aspects of edge labels","title":"Plotting graphs for structural equation models","text":"Like nodes edges, edge labels can customized. Labels aesthetics ggplot function geom_label() (see ?geom_label). However, disambiguate edge aesthetics, label aesthetics prefaced \"label_\": label_colour label_color: color label text (e.g., label_colour = \"red\") label_fill: color rectangle behind label text, ( e.g., label_fill = \"blue\") label_size: font size label (e.g., label_size = 4) label_alpha: transparency label (e.g., alpha = 1 alpha = .2) label_family: font family label text. default, three available: \"serif\", \"sans\" \"mono\" label_fontface: face label text: \"plain\", \"bold\", \"italic\", “bold.italic\" label_hjust: Horizontal justification label text; either string (\"left\", \"center\", \"right\") number 0 1 (left = 0, center = 0.5, right = 1) label_vjust: Vertical justification label text; either string (\"top\", \"middle\", \"bottom\") number 0 1 (top = 1, middle = 0.5, bottom = 0) label_lineheight: Line height multiline text label_location: along edge plot label; number 0 (beginning) 1 (end)","code":"edg <- data.frame(from = \"x\",                   to = \"y\",                   label = \"text\",                   label_colour = \"blue\",                   label_fill = \"red\",                   label_size = 6,                   label_alpha = .5,                   label_family = \"mono\",                   label_fontface = \"bold\",                   label_hjust = \"left\",                   label_vjust = \"top\",                   label_lineheight = 1.5,                   label_location = .2                   )  graph_sem(edges = edg, layout = get_layout(\"x\", \"y\", rows = 1))"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"conditionally-customize-visual-aspects","dir":"Articles","previous_headings":"Visual aspects","what":"Conditionally customize visual aspects","title":"Plotting graphs for structural equation models","text":"functions get_edges() get_nodes() rely table_results() extract information nodes edges SEM models. columns returned table_results() can used conditionally customize visual aspects graph. Let’s estimate model look columns extracted get_edges(): columns can used conditionally format graph. example, note one regression paths positive negative. might want color positive edges green:  However, variance arrow also colored green, edge well. conditional formatting functions come handy. Imagine want color negative regression path red, color variance black - make variance transparent well, reduce visual importance:  many dedicated conditional customization functions like . make use generic function if_edit(), documented help file (see ?if_edit). function if_edit() takes expression condition arguments. makes custom conditional formatting possible. example, imagine want color every graph element number “4” column est blue, use:","code":"#>   from  to arrow    label connect_from connect_to curvature linetype lhs op rhs #> 1  cyl mpg  last -2.50***           NA         NA        NA        1 mpg  ~ cyl #> 2   am mpg  last    2.57*           NA         NA        NA        1 mpg  ~  am #> 3  mpg mpg  both  8.48***           NA         NA        NA        1 mpg ~~ mpg #> 4  cyl cyl  both     3.09           NA         NA        NA        1 cyl ~~ cyl #> 5  cyl  am  none    -0.45           NA         NA        60        2 cyl ~~  am #> 6   am  am  both     0.24           NA         NA        NA        1  am ~~  am #>     est   se pval        confint  est_sig est_std se_std pval_std #> 1 -2.50 0.34 0.00 [-3.17, -1.83] -2.50***   -0.74   0.08     0.00 #> 2  2.57 1.23 0.04   [0.16, 4.98]    2.57*    0.21   0.10     0.03 #> 3  8.48 2.12 0.00  [4.32, 12.64]  8.48***    0.24   0.06     0.00 #> 4  3.09 0.00 <NA>   [3.09, 3.09]     3.09    1.00   0.00     <NA> #> 5 -0.45 0.00 <NA> [-0.45, -0.45]    -0.45   -0.52   0.00     <NA> #> 6  0.24 0.00 <NA>   [0.24, 0.24]     0.24    1.00   0.00     <NA> #>      confint_std est_sig_std label_results  show #> 1 [-0.89, -0.59]    -0.74***    mpg.ON.cyl  TRUE #> 2   [0.02, 0.41]       0.21*     mpg.ON.am  TRUE #> 3   [0.13, 0.36]     0.24*** Variances.mpg  TRUE #> 4   [1.00, 1.00]        1.00 Variances.cyl FALSE #> 5 [-0.52, -0.52]       -0.52   cyl.WITH.am FALSE #> 6   [1.00, 1.00]        1.00  Variances.am FALSE set.seed(6) prepare_graph(fit) %>%   color_pos_edges(\"green\") %>%   plot() prepare_graph(fit) %>%   color_pos_edges(\"green\") %>%   color_neg_edges(\"red\") %>%   color_var(\"black\") %>%   alpha_var(.2) %>%   plot() prepare_graph(fit) %>%   # Add color column to the graph elements   edit_graph({ color = \"black\" }) %>%    # Conditionally change color to blue when the column 'est' contains the number 4   if_edit(grepl(\"4\", est), {color = \"blue\"}) %>%   plot()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Plotting_graphs.html","id":"math-notation-in-graphs","dir":"Articles","previous_headings":"","what":"Math Notation in Graphs","title":"Plotting graphs for structural equation models","text":"Since objects created prepare_graph() graph_sem() ggplot objects, can use full functionality ggplot customize . following example, based code provided GitHub user dumaskvn, showcases plotmath labels can displayed (see ?plotmath). several ways ; just one example.","code":"model <- \"   Sepal.Length ~ Sepal.Width + Petal.Length   Sepal.Width ~ Petal.Length \" # fit model fit <- sem(model, data = iris) # specify layout for consistency layout <- get_layout(\"\", \"Sepal.Width\", \"\",                      \"Petal.Length\", \"\", \"Sepal.Length\", rows = 2) # get data from prepare_graph p <- prepare_graph(fit, layout = layout, angle = 180)  # standard graph plot(p)  # Duplicate node data.frame df_nodes <- p$nodes # Add mathematical notation to node label df_nodes$label <- paste(\"atop(\", p$nodes$label, \", \", c(\"alpha-div\", # Add a Greek letter                                                  paste0(\"R^2 ==\", formatC(inspect(fit, \"r2\"), digits = 2, format = \"f\"))), \")\")  # Add R2 to node labels # Set original labels to blank p$nodes$label <- \"\"   # Plot, treat as ggplot object and add parsed node labels plot(p) + geom_text(data = df_nodes, aes(x=x, y=y, label=label), parse = TRUE)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Tabulating_results.html","id":"output-from-lavaan","dir":"Articles","previous_headings":"","what":"Output from lavaan","title":"Tabulating results from structural equation models","text":"Now, let’s run model lavaan. can either use lavaan run , results can tabulated using table_results():","code":"model |>   estimate_lavaan() -> fit_lav table_results(fit_lav) #>              label est_sig   se pval      confint #> 1     vis.BY.vis_1    1.00 0.00 <NA> [1.00, 1.00] #> 2     vis.BY.vis_2 0.55*** 0.10 0.00 [0.36, 0.75] #> 3     vis.BY.vis_3 0.73*** 0.11 0.00 [0.52, 0.94] #> 4     tex.BY.tex_1    1.00 0.00 <NA> [1.00, 1.00] #> 5     tex.BY.tex_2 1.11*** 0.07 0.00 [0.98, 1.24] #> 6     tex.BY.tex_3 0.93*** 0.06 0.00 [0.82, 1.03] #> 7     spe.BY.spe_1    1.00 0.00 <NA> [1.00, 1.00] #> 8     spe.BY.spe_2 1.18*** 0.16 0.00 [0.86, 1.50] #> 9     spe.BY.spe_3 1.08*** 0.15 0.00 [0.79, 1.38] #> 10 Variances.vis_1 0.55*** 0.11 0.00 [0.33, 0.77] #> 11 Variances.vis_2 1.13*** 0.10 0.00 [0.93, 1.33] #> 12 Variances.vis_3 0.84*** 0.09 0.00 [0.67, 1.02] #> 13 Variances.tex_1 0.37*** 0.05 0.00 [0.28, 0.46] #> 14 Variances.tex_2 0.45*** 0.06 0.00 [0.33, 0.56] #> 15 Variances.tex_3 0.36*** 0.04 0.00 [0.27, 0.44] #> 16 Variances.spe_1 0.80*** 0.08 0.00 [0.64, 0.96] #> 17 Variances.spe_2 0.49*** 0.07 0.00 [0.34, 0.63] #> 18 Variances.spe_3 0.57*** 0.07 0.00 [0.43, 0.70] #> 19   Variances.vis 0.81*** 0.15 0.00 [0.52, 1.09] #> 20   Variances.tex 0.98*** 0.11 0.00 [0.76, 1.20] #> 21   Variances.spe 0.38*** 0.09 0.00 [0.21, 0.55] #> 22    vis.WITH.tex 0.41*** 0.07 0.00 [0.26, 0.55] #> 23    vis.WITH.spe 0.26*** 0.06 0.00 [0.15, 0.37] #> 24    tex.WITH.spe 0.17*** 0.05 0.00 [0.08, 0.27] #> 25     Means.vis_1 4.94*** 0.07 0.00 [4.80, 5.07] #> 26     Means.vis_2 6.09*** 0.07 0.00 [5.96, 6.22] #> 27     Means.vis_3 2.25*** 0.07 0.00 [2.12, 2.38] #> 28     Means.tex_1 3.06*** 0.07 0.00 [2.93, 3.19] #> 29     Means.tex_2 4.34*** 0.07 0.00 [4.19, 4.49] #> 30     Means.tex_3 2.19*** 0.06 0.00 [2.06, 2.31] #> 31     Means.spe_1 4.19*** 0.06 0.00 [4.06, 4.31] #> 32     Means.spe_2 5.53*** 0.06 0.00 [5.41, 5.64] #> 33     Means.spe_3 5.37*** 0.06 0.00 [5.26, 5.49] #> 34       Means.vis    0.00 0.00 <NA> [0.00, 0.00] #> 35       Means.tex    0.00 0.00 <NA> [0.00, 0.00] #> 36       Means.spe    0.00 0.00 <NA> [0.00, 0.00] table_fit(fit_lav) #>      Name Parameters      fmin    chisq df       pvalue baseline.chisq #> 1 fit_lav         30 0.1417035 85.30552 24 8.502553e-09       918.8516 #>   baseline.df baseline.pvalue       cfi       tli      nnfi       rfi       nfi #> 1          36               0 0.9305597 0.8958395 0.8958395 0.8607411 0.9071607 #>        pnfi       ifi       rni        LL unrestricted.logl     aic      bic #> 1 0.6047738 0.9314908 0.9305597 -3737.745         -3695.092 7535.49 7646.703 #>     n    bic2      rmsea rmsea.ci.lower rmsea.ci.upper rmsea.ci.level #> 1 301 7551.56 0.09212148     0.07141849       0.113678            0.9 #>   rmsea.pvalue rmsea.close.h0 rmsea.notclose.pvalue rmsea.notclose.h0 #> 1 0.0006612368           0.05             0.8395529              0.08 #>          rmr rmr_nomean      srmr srmr_bentler srmr_bentler_nomean       crmr #> 1 0.07502369 0.08218433 0.0595238    0.0595238          0.06520506 0.06520506 #>   crmr_nomean srmr_mplus srmr_mplus_nomean    cn_05   cn_01       gfi      agfi #> 1  0.07290147  0.0595238        0.06520506 129.4902 152.654 0.9960745 0.9911676 #>        pgfi       mfi      ecvi #> 1 0.4426998 0.9031773 0.4827426"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Tabulating_results.html","id":"output-from-openmx","dir":"Articles","previous_headings":"","what":"Output from OpenMx","title":"Tabulating results from structural equation models","text":"Now, ’ll reproduce analysis ‘OpenMx’. First, run model:","code":"model |>   estimate_mx() -> fit_mx table_results(fit_mx) table_fit(fit_mx) #> Running model with 30 parameters #>                       label est_sig   se pval      confint #> 1     Loadings.vis.BY.vis_1    1.00 <NA> <NA>         <NA> #> 2     Loadings.vis.BY.vis_2 0.55*** 0.11 0.00 [0.34, 0.77] #> 3     Loadings.vis.BY.vis_3 0.73*** 0.12 0.00 [0.50, 0.96] #> 4     Loadings.tex.BY.tex_1    1.00 <NA> <NA>         <NA> #> 5     Loadings.tex.BY.tex_2 1.11*** 0.06 0.00 [0.99, 1.24] #> 6     Loadings.tex.BY.tex_3 0.93*** 0.06 0.00 [0.82, 1.04] #> 7     Loadings.spe.BY.spe_1    1.00 <NA> <NA>         <NA> #> 8     Loadings.spe.BY.spe_2 1.18*** 0.15 0.00 [0.89, 1.47] #> 9     Loadings.spe.BY.spe_3 1.08*** 0.20 0.00 [0.70, 1.46] #> 10              Means.vis_1 4.94*** 0.07 0.00 [4.80, 5.07] #> 11              Means.vis_2 6.09*** 0.07 0.00 [5.96, 6.22] #> 12              Means.vis_3 2.25*** 0.07 0.00 [2.12, 2.38] #> 13              Means.tex_1 3.06*** 0.07 0.00 [2.93, 3.19] #> 14              Means.tex_2 4.34*** 0.07 0.00 [4.19, 4.49] #> 15              Means.tex_3 2.19*** 0.06 0.00 [2.06, 2.31] #> 16              Means.spe_1 4.19*** 0.06 0.00 [4.06, 4.31] #> 17              Means.spe_2 5.53*** 0.06 0.00 [5.41, 5.64] #> 18              Means.spe_3 5.37*** 0.06 0.00 [5.26, 5.49] #> 19          Variances.vis_1 0.55*** 0.12 0.00 [0.32, 0.78] #> 20            Variances.vis 0.81*** 0.15 0.00 [0.52, 1.10] #> 21 Covariances.vis.WITH.tex 0.41*** 0.08 0.00 [0.25, 0.56] #> 22 Covariances.vis.WITH.spe 0.26*** 0.06 0.00 [0.15, 0.37] #> 23            Variances.tex 0.98*** 0.11 0.00 [0.76, 1.20] #> 24 Covariances.tex.WITH.spe 0.17*** 0.05 0.00 [0.08, 0.27] #> 25            Variances.spe 0.38*** 0.09 0.00 [0.20, 0.56] #> 26          Variances.vis_2 1.13*** 0.10 0.00 [0.93, 1.34] #> 27          Variances.vis_3 0.84*** 0.10 0.00 [0.66, 1.03] #> 28          Variances.tex_1 0.37*** 0.05 0.00 [0.28, 0.47] #> 29          Variances.tex_2 0.45*** 0.06 0.00 [0.33, 0.56] #> 30          Variances.tex_3 0.36*** 0.04 0.00 [0.27, 0.44] #> 31          Variances.spe_1 0.80*** 0.09 0.00 [0.63, 0.97] #> 32          Variances.spe_2 0.49*** 0.09 0.00 [0.31, 0.67] #> 33          Variances.spe_3 0.57*** 0.09 0.00 [0.39, 0.74] #>   Minus2LogLikelihood   n Parameters observedStatistics   df saturatedDoF #> 1             7475.49 301         30               2709 2679         2655 #>   independenceDoF saturatedParameters independenceParameters ChiDoF satDoF #> 1            2691                  54                     18     24   2655 #>   indDoF RMSEANull modelName     AIC      BIC   saBIC        LL #> 1   2691      0.05     model 7535.49 7646.703 7551.56 -3737.745"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/Tabulating_results.html","id":"output-from-mplus","dir":"Articles","previous_headings":"","what":"Output from Mplus","title":"Tabulating results from structural equation models","text":"Now, ’ll reproduce analysis ‘Mplus’. illustrate fact tidySEM compatible existing solutions, specify syntax example manually, using package MplusAutomation. code work machine Mplus installed R can find . First, run model:","code":"fit_mplus <- mplusModeler(mplusObject(VARIABLE = \"grouping IS school (1 = GW 2 = Pas);\",                                 MODEL = c(\"visual BY vis_1 vis_2 vis_3;\",                                           \"textual BY tex_1 tex_2 tex_3;\",                                           \"speed BY spe_1 spe_2 spe_3;\"),                                 usevariables = names(df),                                 rdata = df),                     modelout = \"example.inp\",                     run = 1L) table_results(fit_mplus) table_results(fit_mplus) #> Calculated confidence intervals from est and se. #>                           label  est_sig   se pval        confint group #> 1            VISUAL.BY.VIS_1.GW     1.00 <NA> <NA>           <NA>    GW #> 2            VISUAL.BY.VIS_2.GW  0.58*** 0.11 0.00 [ 0.36,  0.79]    GW #> 3            VISUAL.BY.VIS_3.GW  0.80*** 0.13 0.00 [ 0.54,  1.05]    GW #> 4           TEXTUAL.BY.TEX_1.GW     1.00 <NA> <NA>           <NA>    GW #> 5           TEXTUAL.BY.TEX_2.GW  1.12*** 0.07 0.00 [ 0.99,  1.25]    GW #> 6           TEXTUAL.BY.TEX_3.GW  0.93*** 0.06 0.00 [ 0.82,  1.04]    GW #> 7             SPEED.BY.SPE_1.GW     1.00 <NA> <NA>           <NA>    GW #> 8             SPEED.BY.SPE_2.GW  1.13*** 0.14 0.00 [ 0.86,  1.40]    GW #> 9             SPEED.BY.SPE_3.GW  1.01*** 0.16 0.00 [ 0.70,  1.32]    GW #> 10       TEXTUAL.WITH.VISUAL.GW  0.43*** 0.10 0.00 [ 0.23,  0.62]    GW #> 11         SPEED.WITH.VISUAL.GW  0.33*** 0.08 0.00 [ 0.16,  0.49]    GW #> 12        SPEED.WITH.TEXTUAL.GW   0.24** 0.07 0.00 [ 0.09,  0.38]    GW #> 13              Means.VISUAL.GW     0.00 <NA> <NA>           <NA>    GW #> 14             Means.TEXTUAL.GW     0.00 <NA> <NA>           <NA>    GW #> 15               Means.SPEED.GW     0.00 <NA> <NA>           <NA>    GW #> 16          Intercepts.VIS_1.GW  4.85*** 0.09 0.00 [ 4.67,  5.04]    GW #> 17          Intercepts.VIS_2.GW  6.07*** 0.08 0.00 [ 5.92,  6.22]    GW #> 18          Intercepts.VIS_3.GW  2.15*** 0.08 0.00 [ 1.99,  2.32]    GW #> 19          Intercepts.TEX_1.GW  3.35*** 0.09 0.00 [ 3.18,  3.53]    GW #> 20          Intercepts.TEX_2.GW  4.68*** 0.10 0.00 [ 4.49,  4.87]    GW #> 21          Intercepts.TEX_3.GW  2.46*** 0.08 0.00 [ 2.30,  2.63]    GW #> 22          Intercepts.SPE_1.GW  4.07*** 0.08 0.00 [ 3.90,  4.23]    GW #> 23          Intercepts.SPE_2.GW  5.43*** 0.08 0.00 [ 5.27,  5.59]    GW #> 24          Intercepts.SPE_3.GW  5.29*** 0.08 0.00 [ 5.13,  5.44]    GW #> 25          Variances.VISUAL.GW  0.71*** 0.16 0.00 [ 0.39,  1.03]    GW #> 26         Variances.TEXTUAL.GW  0.87*** 0.13 0.00 [ 0.61,  1.13]    GW #> 27           Variances.SPEED.GW  0.51*** 0.12 0.00 [ 0.27,  0.74]    GW #> 28  Residual.Variances.VIS_1.GW  0.65*** 0.13 0.00 [ 0.40,  0.91]    GW #> 29  Residual.Variances.VIS_2.GW  0.96*** 0.13 0.00 [ 0.72,  1.21]    GW #> 30  Residual.Variances.VIS_3.GW  0.64*** 0.11 0.00 [ 0.42,  0.86]    GW #> 31  Residual.Variances.TEX_1.GW  0.34*** 0.06 0.00 [ 0.22,  0.47]    GW #> 32  Residual.Variances.TEX_2.GW  0.38*** 0.07 0.00 [ 0.23,  0.52]    GW #> 33  Residual.Variances.TEX_3.GW  0.44*** 0.07 0.00 [ 0.30,  0.57]    GW #> 34  Residual.Variances.SPE_1.GW  0.62*** 0.10 0.00 [ 0.42,  0.83]    GW #> 35  Residual.Variances.SPE_2.GW  0.43*** 0.10 0.00 [ 0.24,  0.63]    GW #> 36  Residual.Variances.SPE_3.GW  0.52*** 0.10 0.00 [ 0.32,  0.72]    GW #> 37          VISUAL.BY.VIS_1.PAS     1.00 <NA> <NA>           <NA>   PAS #> 38          VISUAL.BY.VIS_2.PAS  0.58*** 0.11 0.00 [ 0.36,  0.79]   PAS #> 39          VISUAL.BY.VIS_3.PAS  0.80*** 0.13 0.00 [ 0.54,  1.05]   PAS #> 40         TEXTUAL.BY.TEX_1.PAS     1.00 <NA> <NA>           <NA>   PAS #> 41         TEXTUAL.BY.TEX_2.PAS  1.12*** 0.07 0.00 [ 0.99,  1.25]   PAS #> 42         TEXTUAL.BY.TEX_3.PAS  0.93*** 0.06 0.00 [ 0.82,  1.04]   PAS #> 43           SPEED.BY.SPE_1.PAS     1.00 <NA> <NA>           <NA>   PAS #> 44           SPEED.BY.SPE_2.PAS  1.13*** 0.14 0.00 [ 0.86,  1.40]   PAS #> 45           SPEED.BY.SPE_3.PAS  1.01*** 0.16 0.00 [ 0.70,  1.32]   PAS #> 46      TEXTUAL.WITH.VISUAL.PAS  0.41*** 0.11 0.00 [ 0.20,  0.62]   PAS #> 47        SPEED.WITH.VISUAL.PAS   0.18** 0.07 0.01 [ 0.05,  0.31]   PAS #> 48       SPEED.WITH.TEXTUAL.PAS   0.18** 0.06 0.00 [ 0.06,  0.30]   PAS #> 49             Means.VISUAL.PAS     0.15 0.13 0.24 [-0.10,  0.40]   PAS #> 50            Means.TEXTUAL.PAS -0.58*** 0.12 0.00 [-0.81, -0.35]   PAS #> 51              Means.SPEED.PAS     0.18 0.09 0.06 [-0.01,  0.36]   PAS #> 52         Intercepts.VIS_1.PAS  4.85*** 0.09 0.00 [ 4.67,  5.04]   PAS #> 53         Intercepts.VIS_2.PAS  6.07*** 0.08 0.00 [ 5.92,  6.22]   PAS #> 54         Intercepts.VIS_3.PAS  2.15*** 0.08 0.00 [ 1.99,  2.32]   PAS #> 55         Intercepts.TEX_1.PAS  3.35*** 0.09 0.00 [ 3.18,  3.53]   PAS #> 56         Intercepts.TEX_2.PAS  4.68*** 0.10 0.00 [ 4.49,  4.87]   PAS #> 57         Intercepts.TEX_3.PAS  2.46*** 0.08 0.00 [ 2.30,  2.63]   PAS #> 58         Intercepts.SPE_1.PAS  4.07*** 0.08 0.00 [ 3.90,  4.23]   PAS #> 59         Intercepts.SPE_2.PAS  5.43*** 0.08 0.00 [ 5.27,  5.59]   PAS #> 60         Intercepts.SPE_3.PAS  5.29*** 0.08 0.00 [ 5.13,  5.44]   PAS #> 61         Variances.VISUAL.PAS  0.80*** 0.19 0.00 [ 0.42,  1.17]   PAS #> 62        Variances.TEXTUAL.PAS  0.88*** 0.13 0.00 [ 0.62,  1.14]   PAS #> 63          Variances.SPEED.PAS  0.32*** 0.09 0.00 [ 0.16,  0.49]   PAS #> 64 Residual.Variances.VIS_1.PAS  0.56*** 0.16 0.00 [ 0.25,  0.86]   PAS #> 65 Residual.Variances.VIS_2.PAS  1.30*** 0.16 0.00 [ 0.98,  1.61]   PAS #> 66 Residual.Variances.VIS_3.PAS  0.94*** 0.15 0.00 [ 0.65,  1.23]   PAS #> 67 Residual.Variances.TEX_1.PAS  0.45*** 0.07 0.00 [ 0.30,  0.59]   PAS #> 68 Residual.Variances.TEX_2.PAS  0.50*** 0.09 0.00 [ 0.33,  0.67]   PAS #> 69 Residual.Variances.TEX_3.PAS  0.26*** 0.05 0.00 [ 0.16,  0.36]   PAS #> 70 Residual.Variances.SPE_1.PAS  0.89*** 0.13 0.00 [ 0.64,  1.14]   PAS #> 71 Residual.Variances.SPE_2.PAS  0.54*** 0.10 0.00 [ 0.35,  0.74]   PAS #> 72 Residual.Variances.SPE_3.PAS  0.65*** 0.10 0.00 [ 0.46,  0.85]   PAS table_fit(fit_mplus) #>   Mplus.version Name AnalysisType   DataType Estimator   n NGroups #> 1           8.6           GENERAL INDIVIDUAL        ML 301       2 #>   NDependentVars NIndependentVars NContinuousLatentVars Parameters ChiSqM_Value #> 1              9                0                     3         48      164.103 #>   ChiSqM_DF ChiSqM_PValue ChiSqBaseline_Value ChiSqBaseline_DF #> 1        60             0             957.769               72 #>   ChiSqBaseline_PValue        LL UnrestrictedLL   CFI   TLI      AIC      BIC #> 1                    0 -3706.323      -3624.272 0.882 0.859 7508.647 7686.588 #>       aBIC RMSEA_Estimate RMSEA_90CI_LB RMSEA_90CI_UB RMSEA_pLT05  SRMR #> 1 7534.359          0.107         0.088         0.127           0 0.087 #>       AICC    Filename #> 1 7527.314 example.out"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the Data","title":"Confirmatory LPA for the Caregiver Compass","text":"load data, simply attach tidySEM package. convenience, assign variables used analysis object called df. first use four scales: c(\"burdened\", \"trapped\", \"negaffect\", \"loneliness\").","code":"# Load required packages library(tidySEM) library(ggplot2) # Load data df <- zegwaard_carecompass[, c(\"burdened\", \"trapped\", \"negaffect\",     \"loneliness\")]"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"","what":"Descriptive statistics","title":"Confirmatory LPA for the Caregiver Compass","text":"use tidySEM::descriptives() describe data numerically. scales continuous, select columns continuous data de-clutter table: table indicates two potential causes concern: small percentage missingness, variables relatively high kurtosis. Since missing values, can conduct MCAR test using mice::mcar(df). According Hawkins’ test, evidence reject assumptions multivariate normality MCAR, χ2̃(6)=3.78,p̃=0.71\\tilde{\\chi^2}(6) = 3.78, \\tilde{p} = 0.71. Missing data accounted using FIML. Additionally, can plot data. ggplot2 function geom_density() useful continuous data. Visual inspection confirms conclusions descriptives() table: data kurtotic (peaked).","code":"desc <- tidySEM::descriptives(df) desc <- desc[, c(\"name\", \"n\", \"missing\", \"unique\", \"mean\", \"median\",     \"sd\", \"min\", \"max\", \"skew_2se\", \"kurt_2se\")] desc df_plot <- df names(df_plot) <- paste0(\"Value.\", names(df_plot)) df_plot <- reshape(df_plot, varying = names(df_plot), direction = \"long\",     timevar = \"Variable\") ggplot(df_plot, aes(x = Value)) + geom_density() + facet_wrap(~Variable) +     theme_bw()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"conducting-latent-profile-analysis","dir":"Articles","previous_headings":"","what":"Conducting Latent Profile Analysis","title":"Confirmatory LPA for the Caregiver Compass","text":"variables continuous, can use convenience function tidySEM::mx_profiles(), wrapper generic function mx_mixture() optimized continuous indicators. default settings appropriate LPA, assuming fixed variances across classes zero covariances. arguments data number classes. variables data included analysis, first selected indicator variables. confirmatory LCA, follow strictly data-driven class enumeration procedure. set maximum number classes KK one theoretically expected number. set seed ensure replicable results. analysis produce messages cluster initialization. relate selection starting values, relies K-means algorithm robust missing data. algorithm automatically switches hierarchical clustering, action required.","code":"set.seed(123) res <- mx_profiles(data = df, classes = 1:5)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"class-enumeration","dir":"Articles","previous_headings":"","what":"Class Enumeration","title":"Confirmatory LPA for the Caregiver Compass","text":"compare fit theoretical model models, create model fit table using table_fit() retain relevant columns. also determine whether models can disqualified. example, models converge without issues. , example, two-class solution converged, use function res[[2]] <- mxTryHard(res[[2]]) aid convergence. Next, check local identifiability. sample size consistently reported 513, means partially missing cases indeed included via FIML. smallest class size occurs 5-class model, smallest class assigned 7% cases, 38 cases. model 28 parameters, approximately 6 per class. thus least five observations per parameter every class, disqualify 5-class model. concerns theoretical interpretability solutions, entropies minimum classification probabilities low. However, confirmatory use case, address interpreting results.","code":"fit <- table_fit(res)  # model fit table fit[, c(\"Name\", \"LL\", \"Parameters\", \"n\", \"BIC\", \"Entropy\", \"prob_min\",     \"prob_max\", \"n_min\", \"n_max\", \"np_ratio\", \"np_local\")]"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"using-ics","dir":"Articles","previous_headings":"Class Enumeration","what":"Using ICs","title":"Confirmatory LPA for the Caregiver Compass","text":"4-class solution lowest BIC, means preferred solutions including 1-class solution solution classes. Note scree plot BIC can plotted calling plot(fit). Following elbow criterion, three-class solution also defensible. function ic_weights(fit) allows us compute IC weights; indicates , conditional set models, 4-class model posterior model probability nearly 100%.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"using-lmr-tests","dir":"Articles","previous_headings":"Class Enumeration","what":"Using LMR tests","title":"Confirmatory LPA for the Caregiver Compass","text":"conduct LMR tests, find tests significant pairwise model comparisons, except 5-class model:","code":"lr_lmr(res)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"using-blrt-tests","dir":"Articles","previous_headings":"Class Enumeration","what":"Using BLRT tests","title":"Confirmatory LPA for the Caregiver Compass","text":"can also use BLRT test. computationally expensive, use low number replications . practice, one might use much higher number (1000+) published research. Keep mind p-value BLRT subject Monte Carlo error; fluctuates analyses replicated value close critical threshold, consider increasing number replications. accelerate computations, can use future package parallel computing (see ?plan select appropriate back-end system). track function’s progress, use progressr ecosystem, allows users choose want informed. example uses progress bar: sum, across class enumeration criteria, strong support 4-class solution.","code":"library(future) library(progressr) plan(multisession)  # Parallel processing for Windows handlers(\"progress\")  # Progress bar set.seed(1) res_blrt <- BLRT(res, replications = 20)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"optional-alternative-model-specifications","dir":"Articles","previous_headings":"","what":"Optional: Alternative Model Specifications","title":"Confirmatory LPA for the Caregiver Compass","text":"case confirmatory LCA, theory refuted strong evidence hypothesized model number classes. preceding, compared theoretical model models different number classes. Imagine, however, Reviewer argues variance freely estimated across classes. compare theoretical model competing model follows. Note can put two models list compare . alternative model incurs 12 additional parameters free variances. Yet, higher BIC, indicates additional complexity outweigh increase fit.","code":"res_alt <- mx_profiles(df, classes = 4, variances = \"varying\") compare <- list(res[[4]], res_alt) table_fit(compare)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"interpreting-the-final-class-solution","dir":"Articles","previous_headings":"","what":"Interpreting the Final Class Solution","title":"Confirmatory LPA for the Caregiver Compass","text":"interpret final class solution, first reorder 4-class model class size. helps prevent label switching. 4-class model yielded classes reasonable size; using class_prothe largest class comprised 33%, smallest comprised 16% cases. However, entropy low, S=.75S = .75, indicating poor class separability. Furthermore, posterior classification probability ranged [.81,.92][.81, .92], means least classes high classification error. produce table results . results best interpreted examining plot model data, however. Relevant plot functions plot_bivariate(), plot_density(), plot_profiles(). However, omit density plots, plot_bivariate() also includes . diagonal bivariate plot weighted density plots: normal approximations density function observed data, weighed class probability. -diagonal plots pair indicators, class means indicated point, class standard deviations indicated lines, covariances indicated circles. model zero covariances, circles round (albeit warped different scales X Y axes) marginal density plots show trappedness distinguishes classes rather well. indicators, groups always clearly separated terms marginal density: class 2 3 coalesce negative affect, 1 2 coalesce loneliness, 1 2 coalesce burden. Nevertheless, -diagonal scatterplots show reasonable bivariate separation classes. can obtain classic profile plot using plot_profiles(res_final). plot conveys less information bivariate plot, readily interpretable. comparison common type visualization LPA, best-practices visualization provided tidySEM. Note best practices plot includes class means error bars, standard deviations, ribbon plot raw data weighted class probability indicate well classes describe observed distribution. overlap classes clearly visible figure; entropy classification probabilities relatively low. Based bivariate plot, can label class 1 balanced type (33%), class 2 imbalanced type (29%), class 3 entrapped type (22%), class 4 lonely type (16%). Note however observed classes match hypothesized pattern class parameters exactly.","code":"res_final <- mx_switch_labels(res[[4]]) table_results(res_final, columns = c(\"label\", \"est\", \"se\", \"confint\",     \"class\")) plot_bivariate(res_final) plot_profiles(res_final)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"auxiliary-analyses","dir":"Articles","previous_headings":"","what":"Auxiliary Analyses","title":"Confirmatory LPA for the Caregiver Compass","text":"may want compare different classes auxiliary variables models. BCH() function applies three-step analysis, compares classes using multi-group model, controlling classification error. consider two examples: single variable, auxiliary model.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"comparing-means-or-proportions-across-classes","dir":"Articles","previous_headings":"Auxiliary Analyses","what":"Comparing Means or Proportions Across Classes","title":"Confirmatory LPA for the Caregiver Compass","text":"single (continuous ordinal) variable, can call BCH function simply supply auxiliary variable data argument, omitting model argument. , estimate auxiliary model compare sex patients classes: obtain omnibus likelihood ratio test significance sex differences across classes, well pairwise comparisons classes, use lr_test(aux_sex). results indicate significant sex differences across classes, ΔLL(1)=8.7,p=.003\\Delta LL(1) = 8.7, p = .003. Pairwise comparisons indicate class 3 differs significantly classes 1 2. results can reported probability scale using table_prob(aux_sex). appears entrapped class disproportionately cares female patients.","code":"aux_sex <- BCH(res_final, data = zegwaard_carecompass$sexpatient)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"comparing-auxiliary-models-across-classes","dir":"Articles","previous_headings":"Auxiliary Analyses","what":"Comparing Auxiliary Models Across Classes","title":"Confirmatory LPA for the Caregiver Compass","text":"can also compare simple model classes. Specifically, examine whether distance predicts frequency visits differently across classes (treated continuous). obtain omnibus likelihood ratio test difference regression coefficients across classes pairwise comparisons classes, use lr_test(aux_model, compare = \"\"). results indicate significant sex differences across classes, ΔLL(3)=0.98,p=.81\\Delta LL(3) = 0.98, p = .81. results can reported using table_results(aux_model).","code":"df_aux <- zegwaard_carecompass[, c(\"freqvisit\", \"distance\")] df_aux$freqvisit <- as.numeric(df_aux$freqvisit) aux_model <- BCH(res_final, model = \"freqvisit ~ distance\", data = df_aux)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_confirmatory.html","id":"predicting-class-membership","dir":"Articles","previous_headings":"","what":"Predicting class membership","title":"Confirmatory LPA for the Caregiver Compass","text":"LCA model developed help classify care providers clinical context, mental healthcare professionals can provide tailored support take care clients. tidySEM, possible predict class membership new data. Imagine administer care compass questionnaire new individual. can assign scale scores data.frame, supply predict() function via newdata argument. result includes individual’s likely class, well posterior probabilities classes.","code":"df_new <- data.frame(burdened = 2, trapped = 0.5, negaffect = 1.5,     loneliness = 4) predict(res_final, newdata = df_new)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_exploratory.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the Data","title":"Exploratory LPA for Ocean Microplastics","text":"load data, simply attach tidySEM package. convenience, assign variables used analysis object called df. explained paper, classes quite different lines, films, fragments. reason, use data fragments. indicators fragments’ length width millimeters. sample size planned.","code":"# Load required packages library(tidySEM) library(ggplot2) # Load data df_analyze <- alkema_microplastics[alkema_microplastics$category ==     \"Fragment\", ] df <- df_analyze[, c(\"length\", \"width\")]"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_exploratory.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"","what":"Descriptive statistics","title":"Exploratory LPA for Ocean Microplastics","text":"per best practices, first step LCA examining observed data. use tidySEM::descriptives() describe data numerically. items continuous, remove columns categorical data de-clutter table: data correctly coded numeric distributional characteristics match intended measurement level. variable scales comparable (millimeters large discrepancies variances). missing values; variables missing values, report MCAR test mice::mcar(), explain missing data accounted using FIML. Additionally, can plot data. ggplot2 function geom_density() useful visualize continuous data: table density plot indicate data extremely right-skewed kurtotic. mind, can useful transform rescale data. use log transformation. log transformation addresses aforementioned concerns regarding skew kurtosis. confirm , reshape data wide format examine scatterplot:","code":"desc <- tidySEM::descriptives(df) desc <- desc[, c(\"name\", \"type\", \"n\", \"unique\", \"mean\", \"median\",     \"sd\", \"min\", \"max\", \"skew_2se\", \"kurt_2se\")] knitr::kable(desc, caption = \"Descriptive statistics\") df_plot <- df names(df_plot) <- paste0(\"Value.\", names(df_plot)) df_plot <- reshape(df_plot, varying = names(df_plot), direction = \"long\",     timevar = \"Variable\") ggplot(df_plot, aes(x = Value)) + geom_density() + facet_wrap(~Variable) +     theme_bw() df_plot$Value <- log(df_plot$Value) ggplot(df_plot, aes(x = Value)) + geom_density() + facet_wrap(~Variable) +     theme_bw() df <- reshape(df_plot, direction = \"wide\", v.names = \"Value\")[,     -1] names(df) <- gsub(\"Value.\", \"\", names(df), fixed = TRUE) ggplot(df, aes(x = length, y = width)) + geom_point(alpha = 0.1) +     theme_bw()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_exploratory.html","id":"conducting-latent-profile-analysis","dir":"Articles","previous_headings":"","what":"Conducting Latent Profile Analysis","title":"Exploratory LPA for Ocean Microplastics","text":"variables continuous, can use convenience function tidySEM::mx_profiles(), wrapper generic function mx_mixture() optimized continuous indicators. default settings appropriate LPA, assuming fixed variances across classes zero covariances. arguments data number classes. variables data included analysis, first selected indicator variables. models estimated using simulated annealing, start values determined via initial K-means clustering. exploratory LCA, conduct rather extensive search across model specifications number classes. set maximum number classes KK three limit computational demands. set seed ensure replicable results. analysis takes long time compute, prudent save results disk immediately, lose . , use function saveRDS(). can later use res <- readRDS(\"res_gmm.RData\") load analysis file.","code":"set.seed(123) res <- mx_profiles(data = df, classes = 1:3, variances = c(\"equal\",     \"varying\"), covariances = c(\"equal\", \"varying\"), expand_grid = TRUE) saveRDS(res, \"res_gmm.RData\")"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_exploratory.html","id":"class-enumeration","dir":"Articles","previous_headings":"","what":"Class Enumeration","title":"Exploratory LPA for Ocean Microplastics","text":"compare fit estimated models, create model fit table using table_fit(). use BIC class enumeration. First, determine whether models can disqualified. indications convergence problems estimation, reason disqualify solutions. Next, check global local identifiability. global ratio observations per parameter large, minimum np_ratio 244. smallest ratio class size class-specific parameters 18 (see np_local), cause concern. However, note large sample, many models, smallest class comprises small percentage total sample. Since purpose analysis better represent distribution ocean microplastics, can wonder whether makes sense allow classes describe small percentage cases. therefore consider solutions capture least 10% sample. Another interesting characteristic data BIC entropy strongly correlated. raw correlation two metrics .66, cor(fit$BIC, fit$Entropy). omit 1-class models, entropy technically defined, correlation even high .85, cor(fit$BIC[!fit$Classes == 1], fit$Entropy[!fit$Classes == 1]). strong correlation indicates increase fit comes decrease class separability. illustrates entropy treated model fit criterion. also illustrates criteria class enumeration explicit, likely come different decision depending criteria used. mentioned , drop models < 10% cases smallest class: strategy optimize fit, can examine fit table , plot scree plot BIC calling plot(fit). Note , due large sample size, ICs give identical conclusions. Looking blocks 1-4 class models model specification, appears BIC keeps decreasing addition classes. Across blocks, BIC keeps decreasing increasingly complex model specifications. 16 models remain removing < 10% cases smallest class, one model stands : 2-class model free (co)variances.   thus select final model.","code":"fit <- table_fit(res) tbl <- fit[, c(\"Name\", \"LL\", \"Parameters\", \"BIC\", \"Entropy\",     \"prob_min\", \"n_min\", \"np_ratio\", \"np_local\")] names(tbl) <- c(\"Name\", \"LL\", \"p\", \"BIC\", \"Ent.\", \"p_min\", \"n_min\",     \"np_ratio\", \"np_local\") knitr::kable(tbl, caption = \"Model fit table.\") fit <- fit[!fit$n_min < 0.1, ] plot(fit) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5,     hjust = 1))"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_exploratory.html","id":"interpreting-the-final-class-solution","dir":"Articles","previous_headings":"","what":"Interpreting the Final Class Solution","title":"Exploratory LPA for Ocean Microplastics","text":"request estimates (est) standardized estimates std_est, latter allows us interpret correlations length width. Note standard errors p-values relatively uninformative: sample size 5606, every parameter significantly different zero. Interpreting results facilitated examining plot model data. Relevant plot functions plot_bivariate(), plot_density(), plot_profiles(). However, omit density plots, plot_bivariate() also includes . diagonal bivariate plot weighted density plots: normal approximations density function observed data, weighed class probability. -diagonal plots pair indicators, class means indicated point, class standard deviations indicated lines, covariances indicated circles. bivariate marginal plots show classes clearly separable, also evident low entropy. time however, clear observed distributions non-normal, second class accounts non-normality (smaller ‘bump’ right mode, mean second normal distribution). first class (57%) accounts smaller fragments, second class (43%) accounts right-skew fragments’ length width. label class 1 small fragments, class 2 larger fragments. also appears correlation length width stronger small fragments large fragments. test difference, use wald_test(res_bic, hypothesis = \"c11 = c21\"). Results indicate correlation indeed significantly larger small fragments (r=.92r = .92) larger fragments (r=.85r = .85), χ2(1)=11.56,p<.001\\chi^2(1) = 11.56, p < .001. Thus, small fragments coextensive large fragments. , however, concerns interpretability solutions: entropy .56 minimum classification probability .81. substantial overlap distributions two classes.","code":"res_bic <- res[[\"free var, free cov 2\"]] cp <- class_prob(res_bic) results <- table_results(res_bic, columns = c(\"label\", \"est\",     \"std_est\")) results plot_bivariate(res_bic)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_exploratory.html","id":"auxiliary-analyses","dir":"Articles","previous_headings":"","what":"Auxiliary Analyses","title":"Exploratory LPA for Ocean Microplastics","text":"Finally, may want compare different classes auxiliary variables models. BCH() function applies three-step analysis, compares classes using multi-group model, controlling classification error. example, can test whether polymer type differs two classes. polymer type nominal variable, must convert dummies estimate threshold dummy: obtain omnibus likelihood ratio test significance differences polymer type across classes, use lr_test(aux_pt). results indicate significant differences polymer types across classes, ΔLL(3)=17.14,p<.001\\Delta LL(3) = 17.14, p < .001. results can reported probability scale using table_prob(aux_pt). test differences specific polymer types, can use Wald tests: results indicate significant difference prevalence “” polymer types across classes. However, PE significantly prevalent class 1, PP significantly prevalent class 2.","code":"df_pt <- mx_dummies(df_analyze$poly_type) aux_pt <- BCH(res_bic, model = \"poly_typeOther | t1                                 poly_typePE | t1                                 poly_typePP | t1\",     data = df_pt) aux_pt <- mxTryHardOrdinal(aux_pt) wald_test(aux_pt, \"class1.Thresholds[1,1] = class2.Thresholds[1,1];           class1.Thresholds[1,2] = class2.Thresholds[1,2];           class1.Thresholds[1,3] = class2.Thresholds[1,3]\")"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_lcga.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"Data preprocessing","title":"Latent Class Growth Analysis","text":"first examined descriptive statistics sum score scales: Note variables extremely right-skewed due censoring lower end scale. can examine distributions visually well: type skew can result convergence problems LCGA, compared several transformations reduce skew: square cube root, log, inverse, Box-Cox transformations. can plot transformations: Evidently, Box-Cox transformation reduced skew . Consequently, proceeded Box-Cox transformed scores analysis.","code":"# Get descriptives df <- plas_depression desc <- descriptives(df) desc <- desc[, c(\"name\", \"mean\", \"median\", \"sd\", \"min\", \"max\",     \"skew_2se\", \"kurt_2se\")] knitr::kable(desc, caption = \"Item descriptives\") df_plot <- reshape(df, direction = \"long\", varying = names(df)) ggplot(df_plot, aes(x = scl)) + geom_density() + facet_wrap(~time) +     theme_bw() df_scores <- df_plot # Store original range of SCL rng_scl <- range(df_scores$scl) # Log-transform df_scores$log <- scales::rescale(log(df_scores$scl), to = c(0,     1)) # Square root transform df_scores$sqrt <- scales::rescale(sqrt(df_scores$scl), to = c(0,     1)) # Cube root transform df_scores$qrt <- scales::rescale(df_scores$scl^0.33, to = c(0,     1)) # Reciprocal transform df_scores$reciprocal <- scales::rescale(1/df_scores$scl, to = c(0,     1)) # Define function for Box-Cox transformation bc <- function(x, lambda) {     (((x^lambda) - 1)/lambda) } # Inverse Box-Cox transformation invbc <- function(x, lambda) {     ((x * lambda) + 1)^(1/lambda) } # Box-Cox transform b <- MASS::boxcox(lm(df_scores$scl ~ 1), plotit = FALSE) lambda <- b$x[which.max(b$y)] df_scores$boxcox <- bc(df_scores$scl, lambda) # Store range of Box-Cox transformed data rng_bc <- range(df_scores$boxcox) df_scores$boxcox <- scales::rescale(df_scores$boxcox, to = c(0,     1)) # Rescale SCL df_scores$scl <- scales::rescale(df_scores$scl, to = c(0, 1)) # Make plot data df_plot <- do.call(rbind, lapply(c(\"scl\", \"log\", \"sqrt\", \"qrt\",     \"boxcox\"), function(n) {     data.frame(df_scores[c(\"time\", \"id\")], Value = df_scores[[n]],         Transformation = n) })) # Plot ggplot(df_plot, aes(x = Value, colour = Transformation)) + geom_density() +     facet_wrap(~time) + scale_y_sqrt() + xlab(\"scl (rescaled to 0-1)\") +     theme_bw() dat <- df_scores[, c(\"id\", \"time\", \"boxcox\")] dat <- reshape(dat, direction = \"wide\", v.names = \"boxcox\", timevar = \"time\",     idvar = \"id\") names(dat) <- gsub(\"boxcox.\", \"scl\", names(dat))"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_lcga.html","id":"latent-class-growth-analysis","dir":"Articles","previous_headings":"","what":"Latent Class Growth Analysis","title":"Latent Class Growth Analysis","text":"Next, estimated latent class growth model SCL. model included overall intercept, centered T1, . model potential effect deployment depresion, also included dummy variable zero deployment, 1 deployment, step. Finally, model potential change (recovery) depression post-deployment, included linear slope T2-T6, s. variances growth parameters fixed zero due sparse nature data. vignette, consider 5 classes, analyses computationally intensive data simulated 3-class model. important highlight LCGA, subgroups limited specify growth structure, meaning LCA identify distinctive growth patterns within intercept, step, slope growth. example, subgroup follows quadratic growth pattern models able identify . NOTE: time scales model correct; currently assumes measurements equidistant. Feel free experiment adjusting . Note first model showed convergence problems, throwing error: model satisfy first-order optimality conditions required accuracy, improved point merit function found final linesearch. address problem, performed additional iterations find better solution, using OpenMx::mxTryHardWideSearch(). also illustrates tidySEM mixture models inherit OpenMx’s MxModel, thus, different OpenMx functions can used act models specified via tidySEM. fifth model also evidenced convergence problems, (see) solution overfitted.","code":"set.seed(27796) dat[[\"id\"]] <- NULL res_step <- mx_growth_mixture(model = \"   i =~ 1*scl1 + 1*scl2 + 1*scl3 +1*scl4 +1*scl5 +1*scl6   step =~ 0*scl1 + 1*scl2 + 1*scl3 +1*scl4 +1*scl5 +1*scl6   s =~ 0*scl1 + 0*scl2 + 1*scl3 +2*scl4 +3*scl5 +4*scl6   scl1 ~~ vscl1*scl1   scl2 ~~ vscl2*scl2   scl3 ~~ vscl3*scl3   scl4 ~~ vscl4*scl4   scl5 ~~ vscl5*scl5   scl6 ~~ vscl6*scl6   i ~~ 0*i   step ~~ 0*step   s ~~ 0*s   i ~~ 0*s   i ~~ 0*step   s ~~ 0*step\",     classes = 1:5, data = dat) # Additional iterations because of convergence problems for # model 1: res_step[[1]] <- mxTryHardWideSearch(res_step[[1]], extraTries = 50)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_lcga.html","id":"class-enumeration","dir":"Articles","previous_headings":"Latent Class Growth Analysis","what":"Class enumeration","title":"Latent Class Growth Analysis","text":"determine correct number classes, considered following criteria: consider classes , average, fewer 5 participants per parameter class due potential local underidentification Lower values information criteria (AIC, BIC, saBIC) indicate better fit Significant Lo-Mendell-Rubin LRT test indicates better fit kk vs k−1k-1 classes consider solutions entropy < .90 poor class separability compromises interpretability results consider solutions minimum posterior classification probability < .90 poor class separability compromises interpretability results According Table, increasing number classes keeps increasing model fit according ICs except BIC, increased 3 classes. first two LMR tests significant, indicating 2- 3-class solution significant improvement 1- 2-class solution, respectively. However, solutions >3 classes entropy minimum posterior classification probability pre-specified thresholds. Models >3 solutions also fewer five observations per parameter. suggests preferred model selected 1-3 classes.","code":"# Get fit table fit tab_fit <- table_fit(res_step) # Select columns tab_fit[, c(\"Name\", \"Classes\", \"LL\", \"Parameters\", \"BIC\", \"Entropy\",     \"prob_min\", \"n_min\", \"warning\", \"lmr_p\")]"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_lcga.html","id":"scree-plot","dir":"Articles","previous_headings":"Latent Class Growth Analysis > Class enumeration","what":"Scree plot","title":"Latent Class Growth Analysis","text":"scree plot indicates largest decrease ICs occurs 1-2 classes, inflection point ICs 3 classes. Moreover, BIC increased 3 classes. three-class solution thus appears parsimonious solution good fit. Based aforementioned criteria, selected 3-class model analyses. First, prevent label switching, re-order classes value intercept . , report estimated parameters. evident results, Class 1 started relatively lower level depressive symptoms, experienced decrease deployment, followed increase time. Class 2 started moderate level depressive symptoms, experienced increase deployment, followed significant increase time T2-T6. Class 3 started relatively higher level, experienced increase deployment, followed stability.","code":"plot(tab_fit, statistics = c(\"AIC\", \"BIC\", \"saBIC\")) res_final <- mx_switch_labels(res_step[[3]], param = \"M[1,7]\",     decreasing = FALSE) tab_res <- table_results(res_final, columns = NULL) # Select rows and columns tab_res <- tab_res[tab_res$Category %in% c(\"Means\", \"Variances\"),     c(\"Category\", \"lhs\", \"est\", \"se\", \"pval\", \"confint\", \"name\")] tab_res"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_lcga.html","id":"wald-tests","dir":"Articles","previous_headings":"Latent Class Growth Analysis","what":"Wald tests","title":"Latent Class Growth Analysis","text":"test whether parameters significantly different classes, can use Wald tests. Wald tests can specified parameters model, using hypothesis syntax bain package informative hypothesis testing. identify names parameters model, can use name column results table . Alternatively, see parameters model, run: Next, specify equality constrained hypotheses. example, hypothesis states mean intercept equal across groups specified follows: \"class1.M[1,7] = class2.M[1,7] & class1.M[1,7] = class3.M[1,7] also possible consider comparisons two classes time. conducting many significance tests, consider correcting multiple comparisons however. Wald tests significant, indicating significant differences intercepts, step function, slopes three classes.","code":"names(coef(res_final)) wald_tests <- wald_test(res_final, \"                    class1.M[1,7] = class2.M[1,7]&                    class1.M[1,7] = class3.M[1,7];                    class1.M[1,8] = class2.M[1,8]&                    class1.M[1,8] = class3.M[1,8];                    class1.M[1,9] = class2.M[1,9]&                    class1.M[1,9] = class3.M[1,9]\") # Rename the hypothesis wald_tests$Hypothesis <- c(\"Mean i\", \"Mean step\", \"Mean slope\") knitr::kable(wald_tests, digits = 2, caption = \"Wald tests\")"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_lcga.html","id":"trajectory-plot","dir":"Articles","previous_headings":"Latent Class Growth Analysis","what":"Trajectory plot","title":"Latent Class Growth Analysis","text":"Finally, can plot growth trajectories. can help interpret results better, well residual heterogeneity around class trajectories. Note observed individual trajectories show high variability within classes.","code":"p <- plot_growth(res_step[[3]], rawdata = TRUE, alpha_range = c(0,     0.05)) # Add Y-axis breaks in original scale brks <- seq(0, 1, length.out = 5) labs <- round(invbc(scales::rescale(brks, from = c(0, 1), to = rng_bc),     lambda)) p <- p + scale_y_continuous(breaks = seq(0, 1, length.out = 5),     labels = labs) + ylab(\"SCL (rescaled from Box-Cox)\") p"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the Data","title":"Latent Class Analysis for Ordinal Indicators","text":"load data, simply attach tidySEM package. convenience, assign indicator data object called df:","code":"# Load required packages library(tidySEM) library(ggplot2) # Load data df <- maene_identity[1:5]"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"examining-the-data","dir":"Articles","previous_headings":"","what":"Examining the Data","title":"Latent Class Analysis for Ordinal Indicators","text":"use tidySEM::descriptives() describe data numerically. items categorical, remove columns continuous data de-clutter table: Additionally, can plot data. ggplot2 function geom_bar() useful ordinal data: can see, descriptives() table provides invaluable information measurement level indicators, used specify model correctly. data coded ordinal factors, descriptive statistics revealed variable 5-10 unique values. proportion missing values reported \"missing\" column. variables missing values, report MCAR test mice::mcar() explain missing data accounted using FIML. example, see missing values, hence proceed analysis. Note ethic identification variables right-skewed response categories near-zero frequencies; can cause problems model specification convergence. One potential solution merge small adjacent categories. , however.","code":"desc <- tidySEM::descriptives(df) desc <- desc[, c(\"name\", \"type\", \"n\", \"missing\", \"unique\", \"mode\",     \"mode_value\", \"v\")] desc df_plot <- df names(df_plot) <- paste0(\"Value.\", names(df_plot)) df_plot <- reshape(df_plot, varying = names(df_plot), direction = \"long\") ggplot(df_plot, aes(x = Value)) + geom_bar() + facet_wrap(~time,     scales = \"free\") + theme_bw()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"conducting-latent-class-analysis","dir":"Articles","previous_headings":"","what":"Conducting Latent Class Analysis","title":"Latent Class Analysis for Ordinal Indicators","text":"fit series LCA models, set random seed using set.seed(). important inherent randomness estimation procedure, using seed ensures (others) can exactly reproduce results. Next, fit LCA models. variables ordinal, can use convenience function tidySEM::mx_lca(), wrapper generic function mx_mixture() optimized LCA ordinal data. mixture model can specified mx_mixture(). time writing, two wrapper functions special cases: mx_profiles(), latent profile analysis, mx_growth_mixture(), latent growth analysis growth mixture models. functions arguments data number classes. variables data included analysis, relevant variables must selected first. consider 1-6 class models, note may overfit, indicators 5 response categories.","code":"set.seed(123) res <- mx_lca(data = df, classes = 1:6)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"class-enumeration","dir":"Articles","previous_headings":"","what":"Class Enumeration","title":"Latent Class Analysis for Ordinal Indicators","text":"class enumeration, want compare sequence LCA models fitted data. First, note models converged without issues. case, possible aid convergence using mxTryHardOrdinal(), expands search optimal parameter values models ordinal indicators. part family functions based mxTryHard(). Next, create model fit table using table_fit() retain relevant columns. also determine whether models can disqualified. Note global local ratio cases parameters low; models 3 classes, just observations per parameter smallest class (see np_local). good reason disqualify classes. eliminate classes 4-6 criteria, real data applications, 3-class solution might also disqualified. terms classification diagnostics, note entropy minimum classification probabilities high models. indicates classes distinct.","code":"fit <- table_fit(res) fit[, c(\"Name\", \"LL\", \"n\", \"Parameters\", \"BIC\", \"Entropy\", \"prob_min\",     \"n_min\", \"np_ratio\", \"np_local\")]"},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"using-bic","dir":"Articles","previous_headings":"Class Enumeration","what":"Using BIC","title":"Latent Class Analysis for Ordinal Indicators","text":"Based BIC, prefer 2-class model. decision also validated scree plot BIC, obtained running plot(fit).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"theoretical-considerations","dir":"Articles","previous_headings":"Class Enumeration","what":"Theoretical considerations","title":"Latent Class Analysis for Ordinal Indicators","text":"Despite BIC indicating 2-class model best, upon examining 2-class 3-class solution, noted theoretically crucial distinctions ethnic, regional (Flemish), national (Belgian) identity captured 2-class solution captured 3-class solution. Based theoretical consideration, analysis proceeded 3-class solution.","code":"res_final <- res[[3]]"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"interpreting-the-final-class-solution","dir":"Articles","previous_headings":"","what":"Interpreting the Final Class Solution","title":"Latent Class Analysis for Ordinal Indicators","text":"3-class model yielded classes reasonable size; largest class comprised 33%, smallest comprised 16% cases. entropy high, S=.93S = .93, indicating good class separability. Furthermore, posterior classification probability ranged [.94,.99][.94, .99], means classes low classification error. can produce table results using table_results(res_final). However, results thresholds, indicating quantiles standardized normal distribution. may difficult interpret. Therefore, ask results probability scale: results can also interpreted plotting response probabilities: Note first class (33%) relatively high identification ethnic indicators relatively low identification Belgian Flemish identity. second class (16%) moderate identification Belgian Flemish identity, relatively low identification ethnic identity. Finally, third class (50%) high identification identities. Based probability plot, can label class 1 ethic identifiers, class 2 low identifiers, class 3 high identifiers.","code":"tab <- table_prob(res_final) reshape(tab, direction = \"wide\", v.names = \"Probability\", timevar = \"group\",     idvar = c(\"Variable\", \"Category\")) plot_prob(res_final, bw = TRUE)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/lca_ordinal.html","id":"auxiliary-analyses","dir":"Articles","previous_headings":"","what":"Auxiliary Analyses","title":"Latent Class Analysis for Ordinal Indicators","text":"address remaining two hypotheses, perform auxiliary analyses. Hypothesis 2 stated adolescents nationally integrated lower depressive feelings students students combinations identifications (hypothesis 2). test hypothesis, can call BCH function supply auxiliary variable depression data argument, omitting model argument. , estimate auxiliary model compare depressive symptoms across classes: obtain omnibus likelihood ratio test significance depression differences across classes, well pairwise comparisons classes, use lr_test(aux_dep). results indicate significant differences depression across classes, ΔLL(5)=4.32,p=.50\\Delta LL(5) = 4.32, p = .50. Hypothesis 3 , assimilated separated adolescents, significant effect perceived teacher discrimination depressive symptoms. test hypothesis, compare regression coefficient discrimination depressive symptoms across classes. view coefficients model, can use either coef(aux_model) table_results(aux_model, columns = NULL). evident results table, coefficients labeled class1.[1,2] regression coefficients. two ways test difference regression coefficients across classes: using lr_test(aux_model, compare = \"\"), compare ‘matrix’ (regression coefficients) across classes, wald_test(aux_model, \"class1.[1,2]=class2.[1,2]&class1.[1,2]=class3.[1,2]\"). results indicate significant differences regression coefficients across classes, χ2(2)=1.16,p=.56\\chi^2 (2) = 1.16, p = .56.","code":"aux_dep <- BCH(res_final, data = maene_identity$depression) df_aux <- maene_identity[, c(\"vict_teacher\", \"depression\")] # Dummy-code vict_teacher df_aux$vict_teacher <- (as.integer(df_aux$vict_teacher) - 1) aux_model <- BCH(res_final, model = \"depression ~ vict_teacher\",     data = df_aux)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"nodes","dir":"Articles","previous_headings":"","what":"Nodes","title":"SEM graphing conventions","text":"Nodes “shapes” graph. SEM graphs, use nodes indicate variables.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"observed-variables","dir":"Articles","previous_headings":"Nodes","what":"Observed variables","title":"SEM graphing conventions","text":"observed variable measured quantity; “real data” variable. Usually, column variable spreadsheet raw data. Observed variables also called measured variables indicators. Visually, indicate observed variables rectangles:","code":"graph_sem(layout = matrix(\"x\")) + coord_fixed()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"latent-variables","dir":"Articles","previous_headings":"Nodes","what":"Latent variables","title":"SEM graphing conventions","text":"latent variable something exists (according theory), measure directly. column data variable. Still, SEM allows us model latent variables. Latent variables also called “unobserved” variables. Visually, indicate ovals circles:","code":"graph_sem(nodes = data.frame(name = \"x\", shape = \"oval\"), layout = matrix(\"x\"), fix_coord = TRUE)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"edges","dir":"Articles","previous_headings":"","what":"Edges","title":"SEM graphing conventions","text":"Edges refer connections nodes. SEM graphs, use edges specify relationships variables.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"regression-effects","dir":"Articles","previous_headings":"Edges","what":"Regression effects","title":"SEM graphing conventions","text":"regression effect indicates one variable causal effect another variable. Note term “causal” reflects assumption, conclusion. specify regression effect x y, effectively saying “assume x causes y”. Regression effects also called “paths”, “directional effects”, “factor loadings”. SEM graphs, represent regression effects single-headed arrows:","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"covariances","dir":"Articles","previous_headings":"Edges","what":"Covariances","title":"SEM graphing conventions","text":"(assume ) two variables associated, causal theory directional effects , can represent association covariance. term covariance might somewhat unfamiliar, covariance just unstandardized correlation. Covariances also referred “correlations” (graph depicts standardized coefficients), “undirected associations”, “unexplained associations”. Visually, indicate covariances curved (dashed) lines without arrowheads:","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"residual-variances","dir":"Articles","previous_headings":"Edges","what":"(Residual) variances","title":"SEM graphing conventions","text":"Variables often variance, SEM can represent variance double-headed arrow points variable . However, simplification. variable endogenous (receiving end one causal effects), gains additional latent variable predictor known “error term”; latent variable loading 1 mean 0. variance error term represents “error variance”, also known “residual variance” “unexplained variance”. tidySEM, error terms omitted, variances (including error variances) displayed double-headed arrows. stylistic decision. Error variances displayed like :","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"basic-models","dir":"Articles","previous_headings":"","what":"Basic models","title":"SEM graphing conventions","text":"Using basic components, can specify basic models. two basic models SEM models composed : path models measurement models.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"path-models","dir":"Articles","previous_headings":"Basic models","what":"Path models","title":"SEM graphing conventions","text":"path model specifies regression effects two (observed) variables Let’s start something simple: Linear bivariate regression. ’m showing code, can reproduce example . model, variable x predicts variable y:  graph, see observed variables x y represented rectangles. see regression effect represented single-headed arrow, see variances represented double-headed arrows. Note variance left just variance observed variable, whereas variance right actually residual variance.","code":"df <- iris[, 1:2] names(df) <- c(\"x\", \"y\") sem(\"y ~ x\", df) %>%   graph_sem(spacing_x = 2.5, fix_coord = TRUE)"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"measurement-model","dir":"Articles","previous_headings":"Basic models","what":"Measurement model","title":"SEM graphing conventions","text":"mentioned , latent variable something exists (according theory), measure directly. Even measure latent variable directly, SEM allows us define latent variables terms theoretical effect observed variables. words, can specify latent variable exists, causes variance observed indicator variables. model defines latent variable reference one observed indicators known “measurement model”, alternatively, “confirmatory factor analysis” (CFA) model. example:  see model defines latent variable y, mean fixed 0 variance fixed 1, causal effect three indicators. paths latent variable indicators called factor loadings, interpreted regression coefficients. Thus: go one unit latent variable y, go .71 units y_1, 1.78 units y_2, et cetera.","code":"df <- iris[ , c(1,3:4)] names(df) <- paste0(\"y_\", 1:3)  tidy_sem(df) %>%   measurement() %>%   estimate_lavaan() %>%   graph_sem()"},{"path":"https://cjvanlissa.github.io/tidySEM/articles/sem_graph.html","id":"structural-equation-models","dir":"Articles","previous_headings":"","what":"Structural equation models","title":"SEM graphing conventions","text":"structural equation model combines path model measurement model. Thus, structural equation model path model latent variables. simple example:  Instead observed variable x predicting observed variable y, now predicting latent variable y. one simplest possible structural equation models, models arbitrary complexity can built using elements. Incidentally, can define pleasing layout model using get_layout() function:  customizing SEM graphs, see vignette making graphs.","code":"df <- iris[ , 1:4] names(df) <- c(\"y_1\", \"x\", \"y_2\", \"y_3\")  tidy_sem(df) %>%   measurement() %>%   add_paths(y ~ x, x ~~ x, x ~1) %>%   estimate_lavaan() %>%   graph_sem() tidy_sem(df) %>%   measurement() %>%   add_paths(y ~ x, x ~~ x) %>%   estimate_lavaan() %>%   graph_sem(layout =               get_layout(\"\",     \"x\",    \"\",                          \"\",     \"y\",    \"\",                          \"y_1\", \"y_2\", \"y_3\", rows = 3))"},{"path":"https://cjvanlissa.github.io/tidySEM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Caspar J. van Lissa. Author, maintainer. Mauricio Garnier-Villarreal. Contributor. Frank C Gootjes. Contributor.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Lissa CJ (2025). tidySEM: Tidy Structural Equation Modeling. R package version 0.2.9.2, https://cjvanlissa.github.io/tidySEM/.","code":"@Manual{,   title = {tidySEM: Tidy Structural Equation Modeling},   author = {Caspar J. {van Lissa}},   year = {2025},   note = {R package version 0.2.9.2},   url = {https://cjvanlissa.github.io/tidySEM/}, }"},{"path":"https://cjvanlissa.github.io/tidySEM/index.html","id":"tidysem-","dir":"","previous_headings":"","what":"Tidy Structural Equation Modeling","title":"Tidy Structural Equation Modeling","text":"package tidySEM provides ‘tidy’ workflow conducting, reporting, plotting structural equation modeling analyses. perform model estimation, instead allows users estimate models software-agnostic way, using either free open source R packages lavaan OpenMx, commercial closed-source program Mplus (controlled R package MplusAutomation). aim tidySEM provide three specific functions: particular attention specifying mixture models OpenMx Tabulate model output publication-ready, uniform manner, Make easily customizable graphs SEM-models. functions designed tidy tools manifesto (Wickham, last updated 23-11-2019) mind, interface existing suite packages tidyverse.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Structural Equation Modeling","text":"can install public release tidySEM CRAN : want access latest developer version, including features may yet finalized, can install development version tidySEM R-universe : developer want contribute tidySEM, want install specific historical version package, can install directly GitHub :","code":"install.packages(\"tidySEM\") install.packages('tidySEM',                  repos = c('https://cjvanlissa.r-universe.dev',                            'https://cloud.r-project.org')) install.packages(\"remotes\") remotes::install_github('cjvanlissa/tidySEM')"},{"path":"https://cjvanlissa.github.io/tidySEM/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Tidy Structural Equation Modeling","text":"Every user-facing function package documented, documentation can accessed running ?function_name R console, e.g., ?graph_sem. Furthermore, three main vignettes, describing three main tracks tidySEM functions: vignette generating syntax estimating models vignette tabulating results additional vignette describes graphing conventions structural equation models.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/index.html","id":"citing-tidysem","dir":"","previous_headings":"","what":"Citing tidySEM","title":"Tidy Structural Equation Modeling","text":"can cite R-package following citation: Van Lissa, C. J., (2019). tidySEM: Tidy structural equation modeling. R package version 0.2.1. https://github.com/cjvanlissa/tidySEM/","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/index.html","id":"contributing-and-contact-information","dir":"","previous_headings":"","what":"Contributing and Contact Information","title":"Tidy Structural Equation Modeling","text":"ideas, please get involved. can contribute opening issue ‘GitHub’, sending pull request proposed features (see instructions ). File ‘GitHub’ issue Make pull request participating project, agree abide Contributor Covenant.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/index.html","id":"pull-requests","dir":"","previous_headings":"Contributing and Contact Information","what":"Pull requests","title":"Tidy Structural Equation Modeling","text":"can either fork repository account submit pull request, make minor changes directly repository, choose commit different branch send pull request save changes fix issue, Commit message, please write “closes #issuenumber” can trace commits fixed issues Please add line NEWS.md bug fix feature contribution Please increment minor version number DESCRIPTION, e.g.: 0.2.3.1 -> 0.2.3.2","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":null,"dir":"","previous_headings":"","what":"tidySEM 0.2.9","title":"tidySEM 0.2.9","text":"Add support igraph: get_nodes.igraph(), get_edges.igraph(), get_layout.igraph() Fix bug plot_bivariate() Fix CRAN check r-release-macos-arm64: error instead print message return NULL mice installed.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-028","dir":"","previous_headings":"","what":"tidySEM 0.2.8","title":"tidySEM 0.2.9","text":"Make OpenMx Suggest instead Import Improve parsing dagitty objects Allow floating point coordinates layouts class tidy_layout (mostly dagitty plots) “Rd file(s) Rd  targets missing package anchors”","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-027","dir":"","previous_headings":"","what":"tidySEM 0.2.7","title":"tidySEM 0.2.9","text":"Stop calling tidySEM functions default arguments prepare_graph.lavaan(). ensures tidySEM works namespace attached. Frank Gootjes contributed pseudo class functionality, new functions append_class_draws() pseudo_class()","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-026","dir":"","previous_headings":"","what":"tidySEM 0.2.6","title":"tidySEM 0.2.9","text":"Fix bug BLRT() Patch anticipate change lavaan parser break add_paths() Improve vignette Generating_syntax.Rmd","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-025","dir":"","previous_headings":"","what":"tidySEM 0.2.5","title":"tidySEM 0.2.9","text":"Add reference best practices paper Include vignettes corresponding appendices paper Correct implementation lr_lmr() using nonnest2::vuongtest()","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-024","dir":"","previous_headings":"","what":"tidySEM 0.2.4","title":"tidySEM 0.2.9","text":"Update maintainer email address Fixed bug plot_profiles() covariances free Improved starting values latent class analysis Documentation incorrectly referred data_mixture_ordinal, instead data_mix_ordinal Added legend plot_probs() Added np_ratio np_local table_fit() output mixture models Reimplement BLRT() avoid slow OpenMx implementation Add functions lr_test() lr_lmr()","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-023","dir":"","previous_headings":"","what":"tidySEM 0.2.3","title":"tidySEM 0.2.9","text":"Fix Issue #45 , argument label passed correctly get_nodes() get_edges() graph_sem() prepare_graph() Fix Issue #47, list character vectors properly converted mxModel","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-022","dir":"","previous_headings":"","what":"tidySEM 0.2.2","title":"tidySEM 0.2.9","text":"table_fit() now reports information criteria parameter penalty BCH() now accepts MxModel auxiliary model Prevent Mplus tests throwing error CRAN","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-021","dir":"","previous_headings":"","what":"tidySEM 0.2.1","title":"tidySEM 0.2.9","text":"Fix CRAN check errors related OpenMx Add mx_lca(), dedicated function estimating mixture models ordinal/binary data avoids convergence problems using mx_mixture() data types Add table_prob() tabulate category probabilities models ordinal indicators Add plot_prob() plot category probabilities models ordinal indicators","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-020","dir":"","previous_headings":"","what":"tidySEM 0.2.0","title":"tidySEM 0.2.9","text":"Add functions OpenMx Add functions mixture models Add methods chisq_sb() Minor bugfixes feature enhancements","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-019","dir":"","previous_headings":"","what":"tidySEM 0.1.9","title":"tidySEM 0.2.9","text":"Removed LazyData entry DESCRIPTION (data included package) Add methods mplusObjects Fixed bug nodes multilevel models incorrectly merged, due lack within-level intercepts Fixed bug get_layout work multilevel models used table_results() instead get_edges() Fixed bug create_scales","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-018","dir":"","previous_headings":"","what":"tidySEM 0.1.8","title":"tidySEM 0.2.9","text":"Fixed bug table_results() broken renaming ‘label’ column ‘mplus_label’","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-017","dir":"","previous_headings":"","what":"tidySEM 0.1.7","title":"tidySEM 0.2.9","text":"Fixed several bugs plotting, caused multiple columns called “label” generated mplus lavaan, overlap “label” column used plotting. Renamed “label” columns “mplus_label” “lavaan_label” Fixed bug arguments passed prepare_graph() graph_sem() get_nodes() get_edges(), e.g., digits passed Fixed bug linetype work using mix numeric (e.g., 1) character (e.g., “dashed”) values Node labels can now customized just like edge labels Added convenience functions conditionally customize graphs based if_edit(), e.g.: sig_colour(plot, “green”) Improved functionality edit_graph() methods Added wrappers edit_graph(): edit_edges() edit_nodes() graph_sem(fix_coord = TRUE) now works multi-group models","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-016","dir":"","previous_headings":"","what":"tidySEM 0.1.6","title":"tidySEM 0.2.9","text":"Fixed another faulty URI README.md","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-015","dir":"","previous_headings":"","what":"tidySEM 0.1.5","title":"tidySEM 0.2.9","text":"Fixed URI README.md","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-014","dir":"","previous_headings":"","what":"tidySEM 0.1.4","title":"tidySEM 0.2.9","text":"Fixed bug direction arrow curved paths Support argument “color” addition “colour” “label” argument get_edges() get_nodes() now accepts expression, evaluated context data.frame generated table_results(). allows users specify compound labels.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-013","dir":"","previous_headings":"","what":"tidySEM 0.1.3","title":"tidySEM 0.2.9","text":"Changed arguments graph_sem.lavaan graph_sem.mplus.model; gain arguments “label”, “edges”, “layout”, “nodes”, apply get_edges(), get_layout(), get_nodes() model argument, respectively, passing “label” argument get_edges() get_nodes(). default label changed “est_sig” throughout package. functions used “est_sig_std” instead. Minor bugfixes Fix bug > 26 nodes resulted wrong plot","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-012","dir":"","previous_headings":"","what":"tidySEM 0.1.2","title":"tidySEM 0.2.9","text":"create_scales() longer writes .csv files add_paths() now relies lavaanify(lavParseModelString()), uses lavaan parameter table, accepts arguments lavaanify(), default arguments sem() cfa() measurement() uses add_paths() consistency graph_sem.lavaan() graph_sem.mplus.model() gain argument label = \"est_sig\", users can easily select custom labels. New vignette SEM plotting conventions. graph_sem() adds empty labels nodes without mean; version 0.1.1, nodes displayed without node label.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-011","dir":"","previous_headings":"","what":"tidySEM 0.1.1","title":"tidySEM 0.2.9","text":"Addressed comment CRAN maintainer Jelena Saf Minor bug fixes","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/news.html","id":"tidysem-010","dir":"","previous_headings":"","what":"tidySEM 0.1.0","title":"tidySEM 0.2.9","text":"First CRAN release.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BCH.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate an Auxiliary Model using the BCH Method — BCH","title":"Estimate an Auxiliary Model using the BCH Method — BCH","text":"Estimate auxiliary model based latent classification means mixture modeling (see mx_mixture). auxiliary model treated multi-group model. cases used groups, weighted group-specific BCH weights described Bolck, Croon, & Hagenaars, 2004.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BCH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate an Auxiliary Model using the BCH Method — BCH","text":"","code":"BCH(x, model, data, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BCH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate an Auxiliary Model using the BCH Method — BCH","text":"x object method exists. model object can converted OpenMx model using as_ram. data data.frame auxiliary model can evaluated. ... arguments passed methods.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BCH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate an Auxiliary Model using the BCH Method — BCH","text":"MxModel.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BCH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate an Auxiliary Model using the BCH Method — BCH","text":"Bolck, ., Croon, M., & Hagenaars, J. (2004). Estimating latent structure models categorical variables: One-step versus three-step estimators. Political Analysis, 12(1), 3–27. doi:10.1093/pan/mph001","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BCH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate an Auxiliary Model using the BCH Method — BCH","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ dat <- data.frame(x = iris$Petal.Length) mixmod <- mx_profiles(dat,                       classes = 2) res <- BCH(mixmod, \"y ~ 1\", data = data.frame(y = iris$Sepal.Length)) } #> Registered S3 method overwritten by 'OpenMx': #>   method          from    #>   predict.MxModel tidySEM #> Running mix2 with 4 parameters #> Running mix2 with 4 parameters #> Running aux with 4 parameters"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BLRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct Bootstrapped Likelihood Ratio Test — BLRT","title":"Conduct Bootstrapped Likelihood Ratio Test — BLRT","text":"Conduct Bootstrapped Likelihood Ratio Test compare two mixture models.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BLRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct Bootstrapped Likelihood Ratio Test — BLRT","text":"","code":"BLRT(x, replications = 100, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BLRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct Bootstrapped Likelihood Ratio Test — BLRT","text":"x object method exists. replications Integer reflecting number bootstrapped replications, defaults 100. ... arguments passed methods.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BLRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct Bootstrapped Likelihood Ratio Test — BLRT","text":"data.frame.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/BLRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct Bootstrapped Likelihood Ratio Test — BLRT","text":"","code":"if (FALSE) { # \\dontrun{ df <- iris[, 1, drop = FALSE] names(df) <- \"x\" res <- mx_mixture(model = \"x ~ m{C}*1                            x ~~ v{C}*x\", classes = 1:2, data = df) BLRT(res, replications = 4) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/add_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Add paths to an object of class 'tidy_sem' — add_paths","title":"Add paths to an object of class 'tidy_sem' — add_paths","text":"Add paths object class tidy_sem, replace existing paths. paths must specified lavaan::model.syntax, separated commas.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/add_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add paths to an object of class 'tidy_sem' — add_paths","text":"","code":"add_paths(model, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/add_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add paths to an object of class 'tidy_sem' — add_paths","text":"model object class tidy_sem. ... Paths add substitute, specified lavaan::model.syntax, separated commas.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/add_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add paths to an object of class 'tidy_sem' — add_paths","text":"object class tidy_sem.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/add_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add paths to an object of class 'tidy_sem' — add_paths","text":"Currently, lavaan commands ~, ~~, =~, ~1 parsed. function relies lavaan::model.syntax convert syntax strings lavaan parameter tables. default, uses arguments int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.efa = TRUE, auto.th = TRUE, auto.delta = TRUE, auto.cov.y = TRUE, meanstructure = TRUE, similar way lavaan::sem() lavaan::cfa().","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/add_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add paths to an object of class 'tidy_sem' — add_paths","text":"","code":"library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. df <- iris[, 1:4] names(df) <- paste0(\"x_\", 1:4) model <- tidy_sem(df) model <- measurement(model) model <- add_paths(model, x =~ a*x_1 + b*x_2 + a*x_3 + b*x_4) res <- estimate_lavaan(model) #> Warning: lavaan->lav_object_post_check():   #>    some estimated ov variances are negative summary(res) #> lavaan 0.6-19 ended normally after 31 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        11 #>  #>   Number of observations                           150 #>  #> Model Test User Model: #>                                                        #>   Test statistic                               359.420 #>   Degrees of freedom                                 3 #>   P-value (Chi-square)                           0.000 #>  #> Parameter Estimates: #>  #>   Standard errors                             Standard #>   Information                                 Expected #>   Information saturated (h1) model          Structured #>  #> Latent Variables: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   x =~                                                 #>     x_1        (a)    1.000                            #>     x_2        (b)   -0.139    0.029   -4.717    0.000 #>     x_3        (a)    1.000                            #>     x_4        (b)    0.752    0.038   19.760    0.000 #>  #> Intercepts: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .x_1               5.843    0.105   55.447    0.000 #>    .x_2               3.057    0.035   86.196    0.000 #>    .x_3               3.758    0.110   34.094    0.000 #>    .x_4               1.199    0.062   19.335    0.000 #>     x                 0.000                            #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .x_1               0.535    0.070    7.689    0.000 #>    .x_2               0.167    0.019    8.808    0.000 #>    .x_3               0.691    0.085    8.092    0.000 #>    .x_4              -0.063    0.021   -2.972    0.003 #>     x                 1.131    0.168    6.743    0.000 #>"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/alkema_microplastics.html","id":null,"dir":"Reference","previous_headings":"","what":"Ocean Microplastics Data — alkema_microplastics","title":"Ocean Microplastics Data — alkema_microplastics","text":"data collected Alkema cruise 04/2018 06/2018 traversing Atlantic Ocean South Africa Norway. 500 micrometer meshed Manta Trawl towed outside wake ship 1 h day. Length, width, height polymer type 6.942 particles measured using infrared spectroscopy image analysis.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/alkema_microplastics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ocean Microplastics Data — alkema_microplastics","text":"","code":"data(alkema_microplastics)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/alkema_microplastics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ocean Microplastics Data — alkema_microplastics","text":"data frame 6942 rows 11 variables.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/alkema_microplastics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ocean Microplastics Data — alkema_microplastics","text":"Alkema, L. M., Van Lissa, C. J., Kooi, M., & Koelmans, . . (2022). Maximizing Realism: Mapping Plastic Particles Ocean Surface Using Mixtures Normal Distributions. Environmental Science & Technology, 56(22), 15552-15562. doi:10.1021/acs.est.2c03559","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/append_class_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Append Pseudo-class Draws — append_class_draws","title":"Append Pseudo-class Draws — append_class_draws","text":"Generates m datasets random draws variable named class, probability draws based case's probability belonging class according model x.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/append_class_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append Pseudo-class Draws — append_class_draws","text":"","code":"append_class_draws(x, data = NULL, m = 20)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/append_class_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append Pseudo-class Draws — append_class_draws","text":"x object method exists, usually mx_mixture model. data data.frame class variable appended . Note row order must identical data used fit x, data augmented pseudo-class draw specific individual. m Integer. Number datasets generate. Default 10.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/append_class_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append Pseudo-class Draws — append_class_draws","text":"data.frame class class_draws.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/append_class_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append Pseudo-class Draws — append_class_draws","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ dat <- iris[c(1:5, 50:55, 100:105),1:3] colnames(dat) <- letters[1:3] fit <- mx_profiles(data = dat, classes = 2)  append_class_draws(fit, data = iris[c(1:5, 50:55, 100:105), 4, drop = FALSE]) } #> Running mix2 with 10 parameters #> Running mix2 with 10 parameters #>       id_dataset Petal.Width class #> 1              1         0.2     2 #> 2              1         0.2     2 #> 3              1         0.2     2 #> 4              1         0.2     2 #> 5              1         0.2     2 #> 50             1         0.2     2 #> 51             1         1.4     1 #> 52             1         1.5     1 #> 53             1         1.5     1 #> 54             1         1.3     1 #> 55             1         1.5     1 #> 100            1         1.3     1 #> 101            1         2.5     1 #> 102            1         1.9     1 #> 103            1         2.1     1 #> 104            1         1.8     1 #> 105            1         2.2     1 #> 11             2         0.2     2 #> 21             2         0.2     2 #> 31             2         0.2     2 #> 41             2         0.2     2 #> 56             2         0.2     2 #> 501            2         0.2     2 #> 511            2         1.4     1 #> 521            2         1.5     1 #> 531            2         1.5     1 #> 541            2         1.3     1 #> 551            2         1.5     1 #> 1001           2         1.3     1 #> 1011           2         2.5     1 #> 1021           2         1.9     1 #> 1031           2         2.1     1 #> 1041           2         1.8     1 #> 1051           2         2.2     1 #> 12             3         0.2     2 #> 22             3         0.2     2 #> 32             3         0.2     2 #> 42             3         0.2     2 #> 57             3         0.2     2 #> 502            3         0.2     2 #> 512            3         1.4     1 #> 522            3         1.5     1 #> 532            3         1.5     1 #> 542            3         1.3     1 #> 552            3         1.5     1 #> 1002           3         1.3     1 #> 1012           3         2.5     1 #> 1022           3         1.9     1 #> 1032           3         2.1     1 #> 1042           3         1.8     1 #> 1052           3         2.2     1 #> 13             4         0.2     2 #> 23             4         0.2     2 #> 33             4         0.2     2 #> 43             4         0.2     2 #> 58             4         0.2     2 #> 503            4         0.2     2 #> 513            4         1.4     1 #> 523            4         1.5     1 #> 533            4         1.5     1 #> 543            4         1.3     1 #> 553            4         1.5     1 #> 1003           4         1.3     1 #> 1013           4         2.5     1 #> 1023           4         1.9     1 #> 1033           4         2.1     1 #> 1043           4         1.8     1 #> 1053           4         2.2     1 #> 14             5         0.2     2 #> 24             5         0.2     2 #> 34             5         0.2     2 #> 44             5         0.2     2 #> 59             5         0.2     2 #> 504            5         0.2     2 #> 514            5         1.4     1 #> 524            5         1.5     1 #> 534            5         1.5     1 #> 544            5         1.3     1 #> 554            5         1.5     1 #> 1004           5         1.3     1 #> 1014           5         2.5     1 #> 1024           5         1.9     1 #> 1034           5         2.1     1 #> 1044           5         1.8     1 #> 1054           5         2.2     1 #> 15             6         0.2     2 #> 25             6         0.2     2 #> 35             6         0.2     2 #> 45             6         0.2     2 #> 510            6         0.2     2 #> 505            6         0.2     2 #> 515            6         1.4     1 #> 525            6         1.5     1 #> 535            6         1.5     1 #> 545            6         1.3     1 #> 555            6         1.5     1 #> 1005           6         1.3     1 #> 1015           6         2.5     1 #> 1025           6         1.9     1 #> 1035           6         2.1     1 #> 1045           6         1.8     1 #> 1055           6         2.2     1 #> 16             7         0.2     2 #> 26             7         0.2     2 #> 36             7         0.2     2 #> 46             7         0.2     2 #> 516            7         0.2     2 #> 506            7         0.2     2 #> 517            7         1.4     1 #> 526            7         1.5     1 #> 536            7         1.5     1 #> 546            7         1.3     1 #> 556            7         1.5     1 #> 1006           7         1.3     1 #> 1016           7         2.5     1 #> 1026           7         1.9     1 #> 1036           7         2.1     1 #> 1046           7         1.8     1 #> 1056           7         2.2     1 #> 17             8         0.2     2 #> 27             8         0.2     2 #> 37             8         0.2     2 #> 47             8         0.2     2 #> 518            8         0.2     2 #> 507            8         0.2     2 #> 519            8         1.4     1 #> 527            8         1.5     1 #> 537            8         1.5     1 #> 547            8         1.3     1 #> 557            8         1.5     1 #> 1007           8         1.3     1 #> 1017           8         2.5     1 #> 1027           8         1.9     1 #> 1037           8         2.1     1 #> 1047           8         1.8     1 #> 1057           8         2.2     1 #> 18             9         0.2     2 #> 28             9         0.2     2 #> 38             9         0.2     2 #> 48             9         0.2     2 #> 520            9         0.2     2 #> 508            9         0.2     2 #> 5110           9         1.4     1 #> 528            9         1.5     1 #> 538            9         1.5     1 #> 548            9         1.3     1 #> 558            9         1.5     1 #> 1008           9         1.3     1 #> 1018           9         2.5     1 #> 1028           9         1.9     1 #> 1038           9         2.1     1 #> 1048           9         1.8     1 #> 1058           9         2.2     1 #> 19            10         0.2     2 #> 29            10         0.2     2 #> 39            10         0.2     2 #> 49            10         0.2     2 #> 529           10         0.2     2 #> 509           10         0.2     2 #> 5111          10         1.4     1 #> 5210          10         1.5     1 #> 539           10         1.5     1 #> 549           10         1.3     1 #> 559           10         1.5     1 #> 1009          10         1.3     1 #> 1019          10         2.5     1 #> 1029          10         1.9     1 #> 1039          10         2.1     1 #> 1049          10         1.8     1 #> 1059          10         2.2     1 #> 110           11         0.2     2 #> 210           11         0.2     2 #> 310           11         0.2     2 #> 410           11         0.2     2 #> 530           11         0.2     2 #> 5010          11         0.2     2 #> 5112          11         1.4     1 #> 5211          11         1.5     1 #> 5310          11         1.5     1 #> 5410          11         1.3     1 #> 5510          11         1.5     1 #> 10010         11         1.3     1 #> 10110         11         2.5     1 #> 10210         11         1.9     1 #> 10310         11         2.1     1 #> 10410         11         1.8     1 #> 10510         11         2.2     1 #> 111           12         0.2     2 #> 211           12         0.2     2 #> 311           12         0.2     2 #> 411           12         0.2     2 #> 540           12         0.2     2 #> 5011          12         0.2     2 #> 5113          12         1.4     1 #> 5212          12         1.5     1 #> 5311          12         1.5     1 #> 5411          12         1.3     1 #> 5511          12         1.5     1 #> 10011         12         1.3     1 #> 10111         12         2.5     1 #> 10211         12         1.9     1 #> 10311         12         2.1     1 #> 10411         12         1.8     1 #> 10511         12         2.2     1 #> 112           13         0.2     2 #> 212           13         0.2     2 #> 312           13         0.2     2 #> 412           13         0.2     2 #> 550           13         0.2     2 #> 5012          13         0.2     2 #> 5114          13         1.4     1 #> 5213          13         1.5     1 #> 5312          13         1.5     1 #> 5412          13         1.3     1 #> 5512          13         1.5     1 #> 10012         13         1.3     1 #> 10112         13         2.5     1 #> 10212         13         1.9     1 #> 10312         13         2.1     1 #> 10412         13         1.8     1 #> 10512         13         2.2     1 #> 113           14         0.2     2 #> 213           14         0.2     2 #> 313           14         0.2     2 #> 413           14         0.2     2 #> 560           14         0.2     2 #> 5013          14         0.2     2 #> 5115          14         1.4     1 #> 5214          14         1.5     1 #> 5313          14         1.5     1 #> 5413          14         1.3     1 #> 5513          14         1.5     1 #> 10013         14         1.3     1 #> 10113         14         2.5     1 #> 10213         14         1.9     1 #> 10313         14         2.1     1 #> 10413         14         1.8     1 #> 10513         14         2.2     1 #> 114           15         0.2     2 #> 214           15         0.2     2 #> 314           15         0.2     2 #> 414           15         0.2     2 #> 561           15         0.2     2 #> 5014          15         0.2     2 #> 5116          15         1.4     1 #> 5215          15         1.5     1 #> 5314          15         1.5     1 #> 5414          15         1.3     1 #> 5514          15         1.5     1 #> 10014         15         1.3     1 #> 10114         15         2.5     1 #> 10214         15         1.9     1 #> 10314         15         2.1     1 #> 10414         15         1.8     1 #> 10514         15         2.2     1 #> 115           16         0.2     2 #> 215           16         0.2     2 #> 315           16         0.2     2 #> 415           16         0.2     2 #> 562           16         0.2     2 #> 5015          16         0.2     2 #> 5117          16         1.4     1 #> 5216          16         1.5     1 #> 5315          16         1.5     1 #> 5415          16         1.3     1 #> 5515          16         1.5     1 #> 10015         16         1.3     1 #> 10115         16         2.5     1 #> 10215         16         1.9     1 #> 10315         16         2.1     1 #> 10415         16         1.8     1 #> 10515         16         2.2     1 #> 116           17         0.2     2 #> 216           17         0.2     2 #> 316           17         0.2     2 #> 416           17         0.2     2 #> 563           17         0.2     2 #> 5016          17         0.2     2 #> 5118          17         1.4     1 #> 5217          17         1.5     1 #> 5316          17         1.5     1 #> 5416          17         1.3     1 #> 5516          17         1.5     1 #> 10016         17         1.3     1 #> 10116         17         2.5     1 #> 10216         17         1.9     1 #> 10316         17         2.1     1 #> 10416         17         1.8     1 #> 10516         17         2.2     1 #> 117           18         0.2     2 #> 217           18         0.2     2 #> 317           18         0.2     2 #> 417           18         0.2     2 #> 564           18         0.2     2 #> 5017          18         0.2     2 #> 5119          18         1.4     1 #> 5218          18         1.5     1 #> 5317          18         1.5     1 #> 5417          18         1.3     1 #> 5517          18         1.5     1 #> 10017         18         1.3     1 #> 10117         18         2.5     1 #> 10217         18         1.9     1 #> 10317         18         2.1     1 #> 10417         18         1.8     1 #> 10517         18         2.2     1 #> 118           19         0.2     2 #> 218           19         0.2     2 #> 318           19         0.2     2 #> 418           19         0.2     2 #> 565           19         0.2     2 #> 5018          19         0.2     2 #> 5120          19         1.4     1 #> 5219          19         1.5     1 #> 5318          19         1.5     1 #> 5418          19         1.3     1 #> 5518          19         1.5     1 #> 10018         19         1.3     1 #> 10118         19         2.5     1 #> 10218         19         1.9     1 #> 10318         19         2.1     1 #> 10418         19         1.8     1 #> 10518         19         2.2     1 #> 119           20         0.2     2 #> 219           20         0.2     2 #> 319           20         0.2     2 #> 419           20         0.2     2 #> 566           20         0.2     2 #> 5019          20         0.2     2 #> 5121          20         1.4     1 #> 5220          20         1.5     1 #> 5319          20         1.5     1 #> 5419          20         1.3     1 #> 5519          20         1.5     1 #> 10019         20         1.3     1 #> 10119         20         2.5     1 #> 10219         20         1.9     1 #> 10319         20         2.1     1 #> 10419         20         1.8     1 #> 10519         20         2.2     1"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_lavaan.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tidy_sem to 'lavaan' syntax — as_lavaan","title":"Convert tidy_sem to 'lavaan' syntax — as_lavaan","text":"Final stage 'tidySEM' workflow syntax generation: Convert tidy_sem object lavaan syntax tabular format (see model.syntax).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_lavaan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tidy_sem to 'lavaan' syntax — as_lavaan","text":"","code":"as_lavaan(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_lavaan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tidy_sem to 'lavaan' syntax — as_lavaan","text":"x object class tidy_sem ... Additional parameters passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_lavaan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tidy_sem to 'lavaan' syntax — as_lavaan","text":"Character vector.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_lavaan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tidy_sem to 'lavaan' syntax — as_lavaan","text":"","code":"mod <- list(syntax = structure(list(lhs = \"x\", op = \"~\", rhs = \"y\",                                     free = TRUE, value = \"\", label = \"\",                                     category = \"\", aspect = \"\"),             class = \"data.frame\", row.names = c(NA, -1L))) class(mod) <- \"tidy_sem\" as_lavaan(mod) #>   lhs op rhs free value label category aspect #> 1   x  ~   y TRUE"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_mplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tidy_sem to 'Mplus' syntax — as_mplus","title":"Convert tidy_sem to 'Mplus' syntax — as_mplus","text":"Final stage 'tidySEM' workflow syntax generation: Convert tidy_sem object 'Mplus' syntax.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_mplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tidy_sem to 'Mplus' syntax — as_mplus","text":"","code":"as_mplus(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_mplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tidy_sem to 'Mplus' syntax — as_mplus","text":"x object class tidy_sem. ... Additional parameters passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_mplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tidy_sem to 'Mplus' syntax — as_mplus","text":"Character vector.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_mplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tidy_sem to 'Mplus' syntax — as_mplus","text":"","code":"mod <- list(syntax = structure(list(lhs = \"x\", op = \"~\", rhs = \"y\",                                     free = TRUE, value = \"\", label = \"\",                                     category = \"\", aspect = \"\"),             class = \"data.frame\", row.names = c(NA, -1L))) class(mod) <- \"tidy_sem\" as_mplus(mod) #> [1] \"x ON y;\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_ram.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lavaan syntax to RAM specification — as_ram","title":"Convert lavaan syntax to RAM specification — as_ram","text":"Converts SEM models RAM models OpenMx.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_ram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lavaan syntax to RAM specification — as_ram","text":"","code":"as_ram(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_ram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lavaan syntax to RAM specification — as_ram","text":"x object method exists, tidy_sem object, character vector describing user-specified model using lavaan model syntax. ... Parameters passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_ram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lavaan syntax to RAM specification — as_ram","text":"Returns mxModel.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_ram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert lavaan syntax to RAM specification — as_ram","text":"models specified using lavaan syntax, procedure follows: Apply lavaanify model. default arguments lavaanify correspond sem function. Convert row resulting lavaan parameter table mxPath. Apply mxModel mxPaths create OpenMx model using RAM specification","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/as_ram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert lavaan syntax to RAM specification — as_ram","text":"","code":"as_ram(\"y ~ x\") #> MxModel 'model'  #> type : RAM  #> $matrices : 'A', 'S', 'F', and 'M'  #> $algebras : NULL  #> $penalties : NULL  #> $constraints : NULL  #> $intervals : NULL  #> $latentVars : none #> $manifestVars : 'y' and 'x'  #> $data : NULL #> $submodels : NULL  #> $expectation : MxExpectationRAM  #> $fitfunction : MxFitFunctionML  #> $compute : NULL  #> $independent : FALSE  #> $options :   #> $output : FALSE"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Satorra-Bentler corrected chi-square test — chisq_sb","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"Computes Satorra-Bentler corrected chi-square test.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"","code":"chisq_sb(chisq1, df1, scf1 = 1, chisq2, df2, scf2 = 1)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"chisq1 object method exists; e.g., chi-square value, data.frame. df1 Degrees freedom model 1. scf1 Scale correction factor model 1. chisq2 Chi square value model 2. df2 Degrees freedom model 2. scf2 Scale correction factor model 2.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"Chi-square difference value corresponding degrees freedom p-value.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"Reference: Satorra, ., & Bentler, P. M. (2001). scaled difference chi-square test statistic moment structure analysis. Psychometrika, 66(4), 507-514. doi:10.1007/BF02296192","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/chisq_sb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Satorra-Bentler corrected chi-square test — chisq_sb","text":"","code":"df <- data.frame(chi2 = c(23, 44, 65), df = c(78, 74, 70), scf = c(1.02, 1.12, 1.28)) chisq_sb(24, 78, 1.02, 65, 70, 1.28) #> Warning: Models cannot be nested, DF are equal. #>    Dchisq Dchisq_df  Dchisq_p  #> -46.78884   8.00000   1.00000"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/class_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain latent class probabilities — class_prob","title":"Obtain latent class probabilities — class_prob","text":"Obtain latent class probabilities object method exists. See Details.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/class_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain latent class probabilities — class_prob","text":"","code":"class_prob(   x,   type = c(\"sum.posterior\", \"sum.mostlikely\", \"mostlikely.class\", \"avg.mostlikely\",     \"individual\"),   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/class_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain latent class probabilities — class_prob","text":"x object method exists. type Character vector, indicating types probabilities extract. See Details. ... arguments passed methods.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/class_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain latent class probabilities — class_prob","text":"data.frame.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/class_prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain latent class probabilities — class_prob","text":"following types available: \"sum.posterior\" summary table posterior class probabilities; indicates proportion data contributes class. \"sum.mostlikely\" summary table likely class membership, based highest posterior class probability. Note subject measurement error. \"mostlikely.class\" C true class observation, N likely class based model, table shows probability P(N==|C==j). diagonal represents probability observations class correctly classified. \"avg.mostlikely\" Average posterior probabilities class, subset observations likely class 1:k, k number classes. \"individual\" posterior probability matrix, dimensions n (number cases data) x k (number classes).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/class_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain latent class probabilities — class_prob","text":"","code":"if (FALSE) { # \\dontrun{ df <- iris[, 1, drop = FALSE] names(df) <- \"x\" res <- mx_mixture(model = \"x ~ m{C}*1                            x ~~ v{C}*x\", classes = 1, data = df) class_prob(res) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/conf_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Format confidence intervals — conf_int","title":"Format confidence intervals — conf_int","text":"Creates 'APA'-formatted confidence intervals, either object method exists, arguments lb ub. argument x numeric vector, also possible construct confidence interval using standard error (se) percentile interval (ci).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/conf_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format confidence intervals — conf_int","text":"","code":"conf_int(x, digits = 2, se = NULL, lb = NULL, ub = NULL, ci = 95)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/conf_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format confidence intervals — conf_int","text":"x Optional. object method exists. digits Integer. number digits round confidence boundaries . se Optional, numeric. Standard error parameters. lb Optional, numeric. Lower boundary confidence intervals. ub Optional, numeric. Upper boundary confidence intervals. ci Optional, numeric. percentage CI use (used computing CI numeric vector x, standard error se, based normal distribution).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/conf_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format confidence intervals — conf_int","text":"character vector formatted confidence intervals.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/conf_int.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format confidence intervals — conf_int","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/conf_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format confidence intervals — conf_int","text":"","code":"conf_int(x = c(1.325, 2.432), se = c(.05336, .00325)) #> [1] \"[1.22, 1.43]\" \"[2.43, 2.44]\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/cors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate syntax for correlations — cors","title":"Generate syntax for correlations — cors","text":"Generate syntax correlations variables.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/cors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate syntax for correlations — cors","text":"","code":"cors(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/cors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate syntax for correlations — cors","text":"x Object method exists. x object class tidy_sem, correlations observed latent variables data dictionary object computed, default. x character vector, elements vector used. ... Optional additional character vectors variables correlated. x object class tidy_sem, two vectors can provided. x vector, one optional vector can provided. additional vectors variable names provided, correlations among elements x returned.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/cors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate syntax for correlations — cors","text":"object class tidy_sem.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/cors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate syntax for correlations — cors","text":"","code":"dict <- tidy_sem(c(\"bfi_1\", \"bfi_2\", \"bfi_3\", \"bfi_4\", \"bfi_5\")) cors(dict, c(\"bfi_1\", \"bfi_2\")) #> A tidy_sem object #> v    $dictionary #> o    $data #> v    $syntax"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/create_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Create scale scores from observed variables — create_scales","title":"Create scale scores from observed variables — create_scales","text":"function calculates mean sum scores data.frame named list describing items scale. returns scores, scale descriptive table, scale correlation table. relies several functions psych package.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/create_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create scale scores from observed variables — create_scales","text":"","code":"create_scales(   x,   keys.list,   missing = TRUE,   impute = \"none\",   omega = NULL,   digits = 2,   ... )  # S3 method for class 'tidy_sem' create_scales(   x,   keys.list,   missing = TRUE,   impute = \"none\",   omega = NULL,   digits = 2,   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/create_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create scale scores from observed variables — create_scales","text":"x data.frame containing variables referenced keys.list, object class tidy_sem. keys.list named list, indicating variables belong scale. missing Whether use rows partially missing values. Default: TRUE. impute Method handling missing values, Default: 'none'. default method uses available data calculate scale scores, acceptable mean scales, sum scales. omega McDonald's omega coefficients report. Default: NULL; valid options include: \"omega_h\", \"omega.lim\", \"alpha\", \"omega.tot\", \"G6\". digits Number digits rounding, Default: 2 ... Additional parameters pass functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/create_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create scale scores from observed variables — create_scales","text":"List elements: $descriptives, $correlations, $scores.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/create_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create scale scores from observed variables — create_scales","text":"scales less 3 items, Cronbach's alpha might suitable estimate reliability. scales, Spearman-Brown reliability coefficient two-item scales computed, described Eisinga, R., Grotenhuis, M. te, & Pelzer, B. (2012). reliability two-item scale: Pearson, Cronbach, Spearman-Brown? International Journal Public Health, 58(4), 637–642. doi:10.1007/s00038-012-0416-3 . coefficients marked \"(sb)\".","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/create_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create scale scores from observed variables — create_scales","text":"","code":"out <- create_scales(iris, keys.list = list(scalename =             c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\"))) #> Warning: When computing factor loadings for scalename: The estimated weights for the factor scores are probably incorrect.  Try a different factor score estimation method. #> Number of categories should be increased  in order to count frequencies.  out$descriptives #>    Subscale Items      n mean   sd  min  max  skew skew_2se kurt kurt_2se #> 1 scalename  4.00 150.00 3.46 0.78 2.10 5.10 -0.01    -0.02 1.82     2.32 #>   Reliability  Interpret min_load max_load #> 1        0.71 Acceptable       NA       NA dict <- tidy_sem(iris, split = \"\\\\.\") create_scales(dict) #> Some factor loadings were negative for scale 'Sepal'. These items were automatically reversed: Sepal.Length #> Number of categories should be increased  in order to count frequencies.  #> A tidy_scales object #> v    $descriptives #> v    $correlations #> v    $scores #>  #>   Subscale Items      n mean   sd  min  max  skew skew_2se kurt kurt_2se #> 1    Sepal  2.00 150.00 2.61 0.49 1.45 3.50  0.09     0.24 1.99     2.53 #> 2    Petal  2.00 150.00 2.48 1.25 0.60 4.60 -0.26    -0.66 1.57     1.99 #>   Reliability    Interpret min_load max_load #> 1   -0.27(sb) Unacceptable     0.34     0.34 #> 2    0.98(sb)         Good     0.98     0.98"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/curry_mac.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated MAC data — curry_mac","title":"Simulated MAC data — curry_mac","text":"simulated dataset, based Curry et al., 2019, contains data moral relevance judgment across seven domains Morality Cooperation scale.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/curry_mac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated MAC data — curry_mac","text":"","code":"data(curry_mac)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/curry_mac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated MAC data — curry_mac","text":"data.frame 1392 rows 42 variables.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/curry_mac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated MAC data — curry_mac","text":"Curry, O. S., Jones Chesters, M., & Van Lissa, C. J. (2019). Mapping morality compass: Testing theory ‘morality--cooperation’ new questionnaire. Journal Research Personality, 78, 106–124. doi:10.1016/j.jrp.2018.10.008","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/data_mix_ordinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data for mixture model with ordinal indicators — data_mix_ordinal","title":"Simulated data for mixture model with ordinal indicators — data_mix_ordinal","text":"simulated dataset, based 'Mplus' User's Guide example 7.6, contains four columns integer data treated ordinal.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/data_mix_ordinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data for mixture model with ordinal indicators — data_mix_ordinal","text":"","code":"data(data_mix_ordinal)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/data_mix_ordinal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data for mixture model with ordinal indicators — data_mix_ordinal","text":"data frame 5000 rows 4 variables.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/data_mix_ordinal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated data for mixture model with ordinal indicators — data_mix_ordinal","text":"Muthén, L.K. Muthén, B.O. (1998-2017). Mplus User's Guide. Eighth Edition. Los Angeles, CA: Muthén & Muthén","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/descriptives.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a dataset — descriptives","title":"Describe a dataset — descriptives","text":"Provide descriptive statistics dataset.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/descriptives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a dataset — descriptives","text":"","code":"descriptives(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/descriptives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a dataset — descriptives","text":"x object method exists. ... Additional arguments.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/descriptives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a dataset — descriptives","text":"data.frame descriptive statistics x. elements :","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/descriptives.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe a dataset — descriptives","text":"Agresti, . (2012). Categorical data analysis (Vol. 792). John Wiley & Sons.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/descriptives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe a dataset — descriptives","text":"","code":"descriptives(iris) #>           name    type   n missing unique     mean median  mode mode_value #> 1 Sepal.Length numeric 150       0     35 5.843333   5.80  5.80       <NA> #> 2  Sepal.Width numeric 150       0     23 3.057333   3.00  3.00       <NA> #> 3 Petal.Length numeric 150       0     43 3.758000   4.35  4.35       <NA> #> 4  Petal.Width numeric 150       0     22 1.199333   1.30  1.30       <NA> #> 5      Species  factor 150       0      4       NA     NA 50.00     setosa #>          sd         v min max range       skew   skew_2se     kurt kurt_2se #> 1 0.8280661        NA 4.3 7.9   3.6  0.3117531  0.7871027 2.426432 3.082490 #> 2 0.4358663        NA 2.0 4.4   2.4  0.3157671  0.7972372 3.180976 4.041048 #> 3 1.7652982        NA 1.0 6.9   5.9 -0.2721277 -0.6870579 1.604464 2.038279 #> 4 0.7622377        NA 0.1 2.5   2.4 -0.1019342 -0.2573597 1.663933 2.113826 #> 5        NA 0.6666667  NA  NA    NA         NA         NA       NA       NA"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract dictionary from tidy_sem — dictionary","title":"Extract dictionary from tidy_sem — dictionary","text":"Provides access dictionary element tidy_sem object. can used return assign dictionary element.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract dictionary from tidy_sem — dictionary","text":"","code":"dictionary(x)  dictionary(x) <- value"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract dictionary from tidy_sem — dictionary","text":"x Object class tidy_sem. value valid value dictionary(x).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract dictionary from tidy_sem — dictionary","text":"data.frame","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract dictionary from tidy_sem — dictionary","text":"","code":"dict <- tidy_sem(iris, split = \"\\\\.\") dictionary(dict) #>           name scale     type        label #> 1 Sepal.Length Sepal observed Sepal.Length #> 2  Sepal.Width Sepal observed  Sepal.Width #> 3 Petal.Length Petal observed Petal.Length #> 4  Petal.Width Petal observed  Petal.Width #> 5      Species  <NA> observed      Species"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract edges from sem_graph — edges","title":"Extract edges from sem_graph — edges","text":"Provides access edges element sem_graph object. can used return assign edges element.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract edges from sem_graph — edges","text":"","code":"edges(x)  edges(x) <- value"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract edges from sem_graph — edges","text":"x Object class sem_graph. value valid value edges(x).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract edges from sem_graph — edges","text":"data.frame","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract edges from sem_graph — edges","text":"","code":"edg <- data.frame(from = \"x\", to = \"y\") p <- prepare_graph(edges = edg, layout = get_layout(\"x\", \"y\", rows = 1)) edges(p) #>   from to label arrow curvature connect_from connect_to show #> 1    x  y        last        NA        right       left TRUE"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edit_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit graph elements — edit_graph","title":"Edit graph elements — edit_graph","text":"Evaluate R expression within environment elements sem_graph object, return modified sem_graph.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edit_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit graph elements — edit_graph","text":"","code":"edit_graph(x, expr, element = c(\"edges\", \"nodes\"), ...)  edit_nodes(x, expr, ...)  edit_edges(x, expr, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edit_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit graph elements — edit_graph","text":"x object class sem_graph. expr expression evaluate. element Character. element sem_graph edit, defaults c(\"edges\", \"nodes\"). ... Arguments passed within.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edit_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit graph elements — edit_graph","text":"object class sem_graph.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/edit_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit graph elements — edit_graph","text":"","code":"p <- prepare_graph(layout = get_layout(\"x\", rows = 1)) p <- edit_graph(p, {colour = \"blue\"}, element = \"nodes\") plot(p)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/empathy.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated empathy data — empathy","title":"Simulated empathy data — empathy","text":"simulated dataset, based Van Lissa et al., 2014, contains six annual assessments adolescents' mean scores empathic concern perspective taking subscales Interpersonal Reactivity Index (Davis, 1983). first measurement wave occurred adolescents , average, 13 years old, last one 18 years old.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/empathy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated empathy data — empathy","text":"","code":"data(empathy)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/empathy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated empathy data — empathy","text":"data frame 467 rows 13 variables.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/empathy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated empathy data — empathy","text":"Van Lissa, C. J., Hawk, S. T., Branje, S. J., Koot, H. M., Van Lier, P. ., & Meeus, W. H. (2014). Divergence Adolescent Parental Perceptions Conflict Relationship Adolescent Empathy Development. Journal Youth Adolescence, (Journal Article), 1–14. doi:10.1007/s10964-014-0152-5","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/est_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Add significance asterisks to object — est_sig","title":"Add significance asterisks to object — est_sig","text":"Takes object, adds significance asterisks.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/est_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add significance asterisks to object — est_sig","text":"","code":"est_sig(x, digits = 2, sig = NULL)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/est_sig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add significance asterisks to object — est_sig","text":"x object method exists. treated numeric default method. digits Integer. number digits round estimate column . sig Optional, vector p-values default method.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/est_sig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add significance asterisks to object — est_sig","text":"character vector formatted estimates.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/est_sig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add significance asterisks to object — est_sig","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/est_sig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add significance asterisks to object — est_sig","text":"","code":"est_sig(c(.222, .3333), sig = c(.054, .045)) #> [1] \"0.22\"  \"0.33*\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_lavaan.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate tidy_sem using 'lavaan' — estimate_lavaan","title":"Estimate tidy_sem using 'lavaan' — estimate_lavaan","text":"function wrapper lavaan estimating functions. default, wrapper uses sem, users can also specify lavaan, cfa, growth.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_lavaan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate tidy_sem using 'lavaan' — estimate_lavaan","text":"","code":"estimate_lavaan(x, func = \"sem\", ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_lavaan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate tidy_sem using 'lavaan' — estimate_lavaan","text":"x object class tidy_sem. func lavaan modeling function invoke, Default: 'sem'. ... Additional parameters passed estimating function.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_lavaan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate tidy_sem using 'lavaan' — estimate_lavaan","text":"object class lavaan.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_lavaan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate tidy_sem using 'lavaan' — estimate_lavaan","text":"","code":"library(lavaan) model <- tidy_sem(iris, \"\\\\.\") model <- measurement(model) res <- estimate_lavaan(model) #> Warning: lavaan->lav_object_post_check():   #>    some estimated ov variances are negative #> Warning: lavaan->lav_object_post_check():   #>    covariance matrix of latent variables is not positive definite ; use  #>    lavInspect(fit, \"cov.lv\") to investigate. summary(res) #> lavaan 0.6-19 ended normally after 47 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        13 #>  #>   Number of observations                           150 #>  #> Model Test User Model: #>                                                        #>   Test statistic                                 2.322 #>   Degrees of freedom                                 1 #>   P-value (Chi-square)                           0.128 #>  #> Parameter Estimates: #>  #>   Standard errors                             Standard #>   Information                                 Expected #>   Information saturated (h1) model          Structured #>  #> Latent Variables: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   Sepal =~                                             #>     Sepal.Length      1.000                            #>     Sepal.Width      -0.270    0.053   -5.140    0.000 #>   Petal =~                                             #>     Petal.Length      1.000                            #>     Petal.Width       0.399    0.010   38.635    0.000 #>  #> Covariances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   Sepal ~~                                             #>     Petal             1.256    0.157    8.020    0.000 #>  #> Intercepts: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .Sepal.Length      5.843    0.067   86.715    0.000 #>    .Sepal.Width       3.057    0.035   86.196    0.000 #>    .Petal.Length      3.758    0.144   26.160    0.000 #>    .Petal.Width       1.199    0.062   19.335    0.000 #>     Sepal             0.000                            #>     Petal             0.000                            #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>    .Sepal.Length      0.525    0.100    5.243    0.000 #>    .Sepal.Width       0.177    0.021    8.331    0.000 #>    .Petal.Length     -0.130    0.032   -4.031    0.000 #>    .Petal.Width       0.064    0.009    7.361    0.000 #>     Sepal             0.156    0.094    1.657    0.097 #>     Petal             3.226    0.358    9.004    0.000 #>"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate tidy_sem using 'Mplus' — estimate_mplus","title":"Estimate tidy_sem using 'Mplus' — estimate_mplus","text":"function wrapper functions mplusObject mplusModeler. Using function requires 'Mplus' installed.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate tidy_sem using 'Mplus' — estimate_mplus","text":"","code":"estimate_mplus(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate tidy_sem using 'Mplus' — estimate_mplus","text":"x object class tidy_sem. ... Additional parameters passed mplusObject mplusModeler. arguments matched correct function name. arguments rdata, MODEL edited, determined tidy_sem object.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate tidy_sem using 'Mplus' — estimate_mplus","text":"object class mplusObject.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mplus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate tidy_sem using 'Mplus' — estimate_mplus","text":"arguments dataout, modelout, run optional. specified, model run tempdir.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate tidy_sem using 'Mplus' — estimate_mplus","text":"","code":"library(MplusAutomation) #> Version:  1.1.1 #> We work hard to write this free software. Please help us get credit by citing:  #>  #> Hallquist, M. N. & Wiley, J. F. (2018). MplusAutomation: An R Package for Facilitating Large-Scale Latent Variable Analyses in Mplus. Structural Equation Modeling, 25, 621-638. doi: 10.1080/10705511.2017.1402334. #>  #> -- see citation(\"MplusAutomation\"). model <- tidy_sem(iris, \"\\\\.\") model <- measurement(model) if (FALSE) { # \\dontrun{   estimate_mplus(model, run = 0L) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mx.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate tidy_sem using 'OpenMx' — estimate_mx","title":"Estimate tidy_sem using 'OpenMx' — estimate_mx","text":"function wrapper as_ram run_mx functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate tidy_sem using 'OpenMx' — estimate_mx","text":"","code":"estimate_mx(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate tidy_sem using 'OpenMx' — estimate_mx","text":"x object class tidy_sem. ... Additional parameters passed estimating function.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate tidy_sem using 'OpenMx' — estimate_mx","text":"object class MxModel.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/estimate_mx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate tidy_sem using 'OpenMx' — estimate_mx","text":"","code":"df <- iris[1:4] names(df) <- paste0(\"x_\", 1:4) model <- tidy_sem(df) model <- measurement(model) res <- estimate_mx(model) #> Running model with 12 parameters summary(res) #> Summary of model  #>   #> free parameters: #>            name matrix row col   Estimate  Std.Error A #> 1  model.A[2,5]      A x_2   x -0.3496930 0.04368339   #> 2  model.A[3,5]      A x_3   x  2.7756478 0.16956099   #> 3  model.A[4,5]      A x_4   x  1.0270097 0.06929740   #> 4  model.S[1,1]      S x_1 x_1  0.2352754 0.02950895   #> 5  model.S[2,2]      S x_2 x_2  0.1341924 0.01400658   #> 6  model.S[3,3]      S x_3 x_3 -0.3393999 0.08105053   #> 7  model.S[4,4]      S x_4 x_4  0.1068763 0.01823782   #> 8  model.S[5,5]      S   x   x  0.4458469 0.07470965   #> 9  model.M[1,1]      M   1 x_1  5.8433333 0.06738552   #> 10 model.M[1,2]      M   1 x_2  3.0573333 0.03546949   #> 11 model.M[1,3]      M   1 x_3  3.7580000 0.14365460   #> 12 model.M[1,4]      M   1 x_4  1.1993333 0.06202858   #>  #> Model Statistics:  #>                |  Parameters  |  Degrees of Freedom  |  Fit (-2lnL units) #>        Model:             12                    588              819.4226 #>    Saturated:             14                    586                    NA #> Independence:              8                    592                    NA #> Number of observations/statistics: 150/600 #>  #> Information Criteria:  #>       |  df Penalty  |  Parameters Penalty  |  Sample-Size Adjusted #> AIC:      -356.5774               843.4226                 845.7000 #> BIC:     -2126.8309               879.5503                 841.5725 #> To get additional fit indices, see help(mxRefModels) #> timestamp: 2025-03-09 13:50:16  #> Wall clock time: 0.01644135 secs  #> optimizer:  SLSQP  #> OpenMx version number: 2.21.13  #> Need help?  See help(mxSummary)  #>"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from tidy_sem — get_data","title":"Extract data from tidy_sem — get_data","text":"Provides access data element tidy_sem object. can used return assign data element.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from tidy_sem — get_data","text":"","code":"get_data(x)  get_data(x) <- value"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from tidy_sem — get_data","text":"x Object class tidy_sem. value valid value get_data(x).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from tidy_sem — get_data","text":"data.frame","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from tidy_sem — get_data","text":"","code":"dict <- tidy_sem(iris, split = \"\\\\.\") get_data(dict) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 2            4.9         3.0          1.4         0.2     setosa #> 3            4.7         3.2          1.3         0.2     setosa #> 4            4.6         3.1          1.5         0.2     setosa #> 5            5.0         3.6          1.4         0.2     setosa #> 6            5.4         3.9          1.7         0.4     setosa #> 7            4.6         3.4          1.4         0.3     setosa #> 8            5.0         3.4          1.5         0.2     setosa #> 9            4.4         2.9          1.4         0.2     setosa #> 10           4.9         3.1          1.5         0.1     setosa #> 11           5.4         3.7          1.5         0.2     setosa #> 12           4.8         3.4          1.6         0.2     setosa #> 13           4.8         3.0          1.4         0.1     setosa #> 14           4.3         3.0          1.1         0.1     setosa #> 15           5.8         4.0          1.2         0.2     setosa #> 16           5.7         4.4          1.5         0.4     setosa #> 17           5.4         3.9          1.3         0.4     setosa #> 18           5.1         3.5          1.4         0.3     setosa #> 19           5.7         3.8          1.7         0.3     setosa #> 20           5.1         3.8          1.5         0.3     setosa #> 21           5.4         3.4          1.7         0.2     setosa #> 22           5.1         3.7          1.5         0.4     setosa #> 23           4.6         3.6          1.0         0.2     setosa #> 24           5.1         3.3          1.7         0.5     setosa #> 25           4.8         3.4          1.9         0.2     setosa #> 26           5.0         3.0          1.6         0.2     setosa #> 27           5.0         3.4          1.6         0.4     setosa #> 28           5.2         3.5          1.5         0.2     setosa #> 29           5.2         3.4          1.4         0.2     setosa #> 30           4.7         3.2          1.6         0.2     setosa #> 31           4.8         3.1          1.6         0.2     setosa #> 32           5.4         3.4          1.5         0.4     setosa #> 33           5.2         4.1          1.5         0.1     setosa #> 34           5.5         4.2          1.4         0.2     setosa #> 35           4.9         3.1          1.5         0.2     setosa #> 36           5.0         3.2          1.2         0.2     setosa #> 37           5.5         3.5          1.3         0.2     setosa #> 38           4.9         3.6          1.4         0.1     setosa #> 39           4.4         3.0          1.3         0.2     setosa #> 40           5.1         3.4          1.5         0.2     setosa #> 41           5.0         3.5          1.3         0.3     setosa #> 42           4.5         2.3          1.3         0.3     setosa #> 43           4.4         3.2          1.3         0.2     setosa #> 44           5.0         3.5          1.6         0.6     setosa #> 45           5.1         3.8          1.9         0.4     setosa #> 46           4.8         3.0          1.4         0.3     setosa #> 47           5.1         3.8          1.6         0.2     setosa #> 48           4.6         3.2          1.4         0.2     setosa #> 49           5.3         3.7          1.5         0.2     setosa #> 50           5.0         3.3          1.4         0.2     setosa #> 51           7.0         3.2          4.7         1.4 versicolor #> 52           6.4         3.2          4.5         1.5 versicolor #> 53           6.9         3.1          4.9         1.5 versicolor #> 54           5.5         2.3          4.0         1.3 versicolor #> 55           6.5         2.8          4.6         1.5 versicolor #> 56           5.7         2.8          4.5         1.3 versicolor #> 57           6.3         3.3          4.7         1.6 versicolor #> 58           4.9         2.4          3.3         1.0 versicolor #> 59           6.6         2.9          4.6         1.3 versicolor #> 60           5.2         2.7          3.9         1.4 versicolor #> 61           5.0         2.0          3.5         1.0 versicolor #> 62           5.9         3.0          4.2         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 64           6.1         2.9          4.7         1.4 versicolor #> 65           5.6         2.9          3.6         1.3 versicolor #> 66           6.7         3.1          4.4         1.4 versicolor #> 67           5.6         3.0          4.5         1.5 versicolor #> 68           5.8         2.7          4.1         1.0 versicolor #> 69           6.2         2.2          4.5         1.5 versicolor #> 70           5.6         2.5          3.9         1.1 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 72           6.1         2.8          4.0         1.3 versicolor #> 73           6.3         2.5          4.9         1.5 versicolor #> 74           6.1         2.8          4.7         1.2 versicolor #> 75           6.4         2.9          4.3         1.3 versicolor #> 76           6.6         3.0          4.4         1.4 versicolor #> 77           6.8         2.8          4.8         1.4 versicolor #> 78           6.7         3.0          5.0         1.7 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 80           5.7         2.6          3.5         1.0 versicolor #> 81           5.5         2.4          3.8         1.1 versicolor #> 82           5.5         2.4          3.7         1.0 versicolor #> 83           5.8         2.7          3.9         1.2 versicolor #> 84           6.0         2.7          5.1         1.6 versicolor #> 85           5.4         3.0          4.5         1.5 versicolor #> 86           6.0         3.4          4.5         1.6 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 88           6.3         2.3          4.4         1.3 versicolor #> 89           5.6         3.0          4.1         1.3 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 91           5.5         2.6          4.4         1.2 versicolor #> 92           6.1         3.0          4.6         1.4 versicolor #> 93           5.8         2.6          4.0         1.2 versicolor #> 94           5.0         2.3          3.3         1.0 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 96           5.7         3.0          4.2         1.2 versicolor #> 97           5.7         2.9          4.2         1.3 versicolor #> 98           6.2         2.9          4.3         1.3 versicolor #> 99           5.1         2.5          3.0         1.1 versicolor #> 100          5.7         2.8          4.1         1.3 versicolor #> 101          6.3         3.3          6.0         2.5  virginica #> 102          5.8         2.7          5.1         1.9  virginica #> 103          7.1         3.0          5.9         2.1  virginica #> 104          6.3         2.9          5.6         1.8  virginica #> 105          6.5         3.0          5.8         2.2  virginica #> 106          7.6         3.0          6.6         2.1  virginica #> 107          4.9         2.5          4.5         1.7  virginica #> 108          7.3         2.9          6.3         1.8  virginica #> 109          6.7         2.5          5.8         1.8  virginica #> 110          7.2         3.6          6.1         2.5  virginica #> 111          6.5         3.2          5.1         2.0  virginica #> 112          6.4         2.7          5.3         1.9  virginica #> 113          6.8         3.0          5.5         2.1  virginica #> 114          5.7         2.5          5.0         2.0  virginica #> 115          5.8         2.8          5.1         2.4  virginica #> 116          6.4         3.2          5.3         2.3  virginica #> 117          6.5         3.0          5.5         1.8  virginica #> 118          7.7         3.8          6.7         2.2  virginica #> 119          7.7         2.6          6.9         2.3  virginica #> 120          6.0         2.2          5.0         1.5  virginica #> 121          6.9         3.2          5.7         2.3  virginica #> 122          5.6         2.8          4.9         2.0  virginica #> 123          7.7         2.8          6.7         2.0  virginica #> 124          6.3         2.7          4.9         1.8  virginica #> 125          6.7         3.3          5.7         2.1  virginica #> 126          7.2         3.2          6.0         1.8  virginica #> 127          6.2         2.8          4.8         1.8  virginica #> 128          6.1         3.0          4.9         1.8  virginica #> 129          6.4         2.8          5.6         2.1  virginica #> 130          7.2         3.0          5.8         1.6  virginica #> 131          7.4         2.8          6.1         1.9  virginica #> 132          7.9         3.8          6.4         2.0  virginica #> 133          6.4         2.8          5.6         2.2  virginica #> 134          6.3         2.8          5.1         1.5  virginica #> 135          6.1         2.6          5.6         1.4  virginica #> 136          7.7         3.0          6.1         2.3  virginica #> 137          6.3         3.4          5.6         2.4  virginica #> 138          6.4         3.1          5.5         1.8  virginica #> 139          6.0         3.0          4.8         1.8  virginica #> 140          6.9         3.1          5.4         2.1  virginica #> 141          6.7         3.1          5.6         2.4  virginica #> 142          6.9         3.1          5.1         2.3  virginica #> 143          5.8         2.7          5.1         1.9  virginica #> 144          6.8         3.2          5.9         2.3  virginica #> 145          6.7         3.3          5.7         2.5  virginica #> 146          6.7         3.0          5.2         2.3  virginica #> 147          6.3         2.5          5.0         1.9  virginica #> 148          6.5         3.0          5.2         2.0  virginica #> 149          6.2         3.4          5.4         2.3  virginica #> 150          5.9         3.0          5.1         1.8  virginica"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract edges from a SEM model object — get_edges","title":"Extract edges from a SEM model object — get_edges","text":"Attempts extract edges SEM model object, edges defined regression paths covariances variables (nodes).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract edges from a SEM model object — get_edges","text":"","code":"get_edges(x, label = \"est_sig\", ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract edges from a SEM model object — get_edges","text":"x model object class mplusObject lavaan. label Either character, indicating column use edge labels, expression. See Details. Defaults \"est_sig\", labels edges estimated value significance asterisks, obtained table_results. See Details examples information. ... Additional parameters passed table_results. example, users can pass digits argument control number digits edge label, pass columns argument retain auxiliary columns tidy_edges data.frame processing (see Examples).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract edges from a SEM model object — get_edges","text":"object class 'tidy_edges'","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract edges from a SEM model object — get_edges","text":"function get_edges identifies regression paths, latent variable definitions, covariances model edges. output table_results paths used label edges.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":"custom-labels","dir":"Reference","previous_headings":"","what":"Custom labels","title":"Extract edges from a SEM model object — get_edges","text":"One way create custom edge labels passing expression label. expression passed label, evaluated context data.frame containing results call table_results x argument. Another way create custom labels requesting auxiliary variables using columns argument (passed table_results), using columns construct new label. See examples.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract edges from a SEM model object — get_edges","text":"","code":"# Standard use library(lavaan) res <- sem(\"dist ~ speed\", cars) get_edges(res) #>    from    to arrow     label connect_from connect_to curvature linetype   lhs #> 1 speed  dist  last   3.93***           NA         NA        NA        1  dist #> 2  dist  dist  both 227.07***           NA         NA        NA        1  dist #> 3 speed speed  both     27.40           NA         NA        NA        1 speed #>   op   rhs    est    se pval          confint   est_sig est_std se_std pval_std #> 1  ~ speed   3.93  0.41 0.00     [3.13, 4.73]   3.93***    0.81   0.04     0.00 #> 2 ~~  dist 227.07 45.41 0.00 [138.06, 316.08] 227.07***    0.35   0.07     0.00 #> 3 ~~ speed  27.40  0.00 <NA>   [27.40, 27.40]     27.40    1.00   0.00     <NA> #>    confint_std est_sig_std   label_results  show #> 1 [0.73, 0.89]     0.81***   dist.ON.speed  TRUE #> 2 [0.22, 0.48]     0.35***  Variances.dist  TRUE #> 3 [1.00, 1.00]        1.00 Variances.speed FALSE  # Pass an expression to the 'label' argument for custom labels get_edges(res, label = paste(est_sig, confint)) #>    from    to arrow                      label connect_from connect_to #> 1 speed  dist  last       3.93*** [3.13, 4.73]           NA         NA #> 2  dist  dist  both 227.07*** [138.06, 316.08]           NA         NA #> 3 speed speed  both       27.40 [27.40, 27.40]           NA         NA #>   curvature linetype   lhs op   rhs    est    se pval          confint #> 1        NA        1  dist  ~ speed   3.93  0.41 0.00     [3.13, 4.73] #> 2        NA        1  dist ~~  dist 227.07 45.41 0.00 [138.06, 316.08] #> 3        NA        1 speed ~~ speed  27.40  0.00 <NA>   [27.40, 27.40] #>     est_sig est_std se_std pval_std  confint_std est_sig_std   label_results #> 1   3.93***    0.81   0.04     0.00 [0.73, 0.89]     0.81***   dist.ON.speed #> 2 227.07***    0.35   0.07     0.00 [0.22, 0.48]     0.35***  Variances.dist #> 3     27.40    1.00   0.00     <NA> [1.00, 1.00]        1.00 Variances.speed #>    show #> 1  TRUE #> 2  TRUE #> 3 FALSE  # Pass the argument 'columns' to table_results through '...' to retain # auxiliary columns for further processing edg <- get_edges(res, columns = c(\"est_sig\", \"confint\")) edg #>    from    to arrow     label connect_from connect_to curvature linetype #> 1 speed  dist  last   3.93***           NA         NA        NA        1 #> 2  dist  dist  both 227.07***           NA         NA        NA        1 #> 3 speed speed  both     27.40           NA         NA        NA        1 #>     est_sig          confint #> 1   3.93***     [3.13, 4.73] #> 2 227.07*** [138.06, 316.08] #> 3     27.40   [27.40, 27.40] edg <- within(edg, {label <- paste(est_sig, confint)}) edg #>    from    to arrow                      label connect_from connect_to #> 1 speed  dist  last       3.93*** [3.13, 4.73]           NA         NA #> 2  dist  dist  both 227.07*** [138.06, 316.08]           NA         NA #> 3 speed speed  both       27.40 [27.40, 27.40]           NA         NA #>   curvature linetype   est_sig          confint #> 1        NA        1   3.93***     [3.13, 4.73] #> 2        NA        1 227.07*** [138.06, 316.08] #> 3        NA        1     27.40   [27.40, 27.40]"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fit indices from objects — get_fit","title":"Get fit indices from objects — get_fit","text":"Get fit indices objects method exists.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fit indices from objects — get_fit","text":"","code":"get_fit(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fit indices from objects — get_fit","text":"x object method exists. ... arguments passed methods.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fit indices from objects — get_fit","text":"data.frame.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get fit indices from objects — get_fit","text":"","code":"if (FALSE) { # \\dontrun{ df <- iris[, 1, drop = FALSE] names(df) <- \"x\" res <- mx_mixture(model = \"x ~ m{C}*1                            x ~~ v{C}*x\", classes = 1, data = df) table_fit(res) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate graph layout — get_layout.lavaan","title":"Generate graph layout — get_layout.lavaan","text":"Generate tidy_layout SEM graph.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate graph layout — get_layout.lavaan","text":"","code":"# S3 method for class 'lavaan' get_layout(x, ..., layout_algorithm = \"layout_as_tree\")  get_layout(x, ...)  # Default S3 method get_layout(x, ..., rows = NULL)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate graph layout — get_layout.lavaan","text":"x object method exists; currently, methods exist character, lavaan, mplus.model objects. ... Character arguments corresponding layout elements. Use node names, empty strings (\"\"), NA values. layout_algorithm Optional argument fit model objects. Character string, indicating igraph layout algorithm apply position nodes. Defaults \"layout_as_tree\"; see details options. rows Numeric, indicating number rows graph.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate graph layout — get_layout.lavaan","text":"Object class 'tidy_layout'","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate graph layout — get_layout.lavaan","text":"three ways generate layout: Specify layout call get_layout() providing node names number rows create layout matrix. Empty strings (\"\") NA can used empty cells. See Example 1. Call get_layout() model object tidy_results object. use function layout_as_tree, layout function igraph package, generate rudimentary layout. See Example 2. Instead using get_layout(), just use matrix data.frame layout. example, specify layout spreadsheet program, load R (see Example 3). , copy layout clipboard spreadsheet program, load clipboard (see Example 4) layout algorithms imported igraph : c(\"layout_as_star\", \"layout_as_tree\", \"layout_in_circle\", \"layout_nicely\", \"layout_on_grid\", \"layout_randomly\", \"layout_with_dh\", \"layout_with_fr\", \"layout_with_gem\", \"layout_with_graphopt\", \"layout_with_kk\", \"layout_with_lgl\", \"layout_with_mds\"). can used specifying optional argument layout_algorithm = \"\".","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate graph layout — get_layout.lavaan","text":"","code":"# Example 1 get_layout(\"c\", NA,  \"d\",            NA,  \"e\", NA, rows = 2) #>      [,1] [,2] [,3] #> [1,] \"c\"  NA   \"d\"  #> [2,] NA   \"e\"  NA   #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\"          # Example 2 library(lavaan) fit <- cfa(' visual  =~ x1 + x2 + x3 ',            data = HolzingerSwineford1939[1:50, ]) #> Warning: lavaan->lav_object_post_check():   #>    some estimated ov variances are negative get_layout(fit) #>      [,1] [,2]     [,3] #> [1,] NA   \"visual\" NA   #> [2,] \"x1\" \"x2\"     \"x3\" #> attr(,\"class\") #> [1] \"layout_matrix\" \"matrix\"        \"array\"          if (FALSE) { # \\dontrun{ # Example 3 # Here, we first write the layout to .csv, but you could create it in a # spreadsheet program, and save the spreadsheet to .csv: write.csv(matrix(c(\"c\", \"\",  \"d\", \"\",  \"e\", \"\"), nrow = 2, byrow = TRUE),           file = file.path(tempdir(), \"example3.csv\"), row.names = FALSE) # Now, we load the .csv: read.csv(file.path(tempdir(), \"example3.csv\"))  # Example 4 # For this example, make your layout in a spreadsheet program, select it, and # copy to clipboard. Reading from the clipboard works differently in Windows # and Mac. For this example, I used Microsoft Excel. # On Windows, run: read.table(\"clipboard\", sep = \"\\t\") # On Mac, run: read.table(pipe(\"pbpaste\"), sep=\"\\t\") } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes from a SEM model object — get_nodes","title":"Extract nodes from a SEM model object — get_nodes","text":"Attempts extract nodes SEM model object, nodes defined observed latent variables.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes from a SEM model object — get_nodes","text":"","code":"get_nodes(x, label = paste2(name, est_sig, sep = \"\\n\"), ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes from a SEM model object — get_nodes","text":"x model object class mplusObject lavaan. label Either character, indicating column use node labels, expression. See Details. Defaults paste(name, est_sig, sep = \"\\n\", gives node name followed estimated value significance asterisks. ... Additional parameters passed table_results. example, users can pass digits argument control number digits node label, pass columns argument retain auxiliary columns tidy_nodes data.frame processing (see Examples).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes from a SEM model object — get_nodes","text":"object class 'tidy_nodes'","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract nodes from a SEM model object — get_nodes","text":"function get_nodes identifies dependent independent variables model nodes. mean structure / intercepts included model, output table_results means / intercepts used label nodes.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":"custom-labels","dir":"Reference","previous_headings":"","what":"Custom labels","title":"Extract nodes from a SEM model object — get_nodes","text":"One way create custom node labels passing expression label, default value argument. expression passed label, evaluated context data.frame containing results call table_results x argument, additional column labeled name, contains node names. Another way create custom labels requesting auxiliary variables using columns argument (passed table_results), using columns construct new label. See examples.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/get_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract nodes from a SEM model object — get_nodes","text":"","code":"# Standard use extracts node names and shape # (rect for observed, oval for latent) library(lavaan) res <- sem(\"dist ~ speed\", cars) get_nodes(res) #>    name shape label #> 1  dist  rect  dist #> 2 speed  rect speed  # To label nodes with mean values, include meanstructure in the model # Note that it is possible to pass the argument 'digits' to table_results # through '...' res <- sem(\"dist ~ speed\", cars, meanstructure = TRUE) get_nodes(res, digits = 3) #>    name shape           label   lhs op rhs     est    se  pval #> 1  dist  rect dist\\n-17.579**  dist ~1     -17.579 6.622 0.008 #> 2 speed  rect   speed\\n15.400 speed ~1      15.400 0.000  <NA> #>             confint   est_sig est_std se_std pval_std      confint_std #> 1 [-30.558, -4.600] -17.579**  -0.689  0.217    0.002 [-1.115, -0.263] #> 2  [15.400, 15.400]    15.400   2.942  0.000     <NA>   [2.942, 2.942] #>   est_sig_std label_results #> 1    -0.689**    Means.dist #> 2       2.942   Means.speed  # Pass an expression to the 'label' argument for custom labels get_nodes(res, label = paste0(name, \" \", est_sig, \"\\n\", confint)) #>    name shape                          label   lhs op rhs    est   se pval #> 1  dist  rect dist -17.58**\\n[-30.56, -4.60]  dist ~1     -17.58 6.62 0.01 #> 2 speed  rect    speed 15.40\\n[15.40, 15.40] speed ~1      15.40 0.00 <NA> #>           confint  est_sig est_std se_std pval_std    confint_std est_sig_std #> 1 [-30.56, -4.60] -17.58**   -0.69   0.22     0.00 [-1.12, -0.26]     -0.69** #> 2  [15.40, 15.40]    15.40    2.94   0.00     <NA>   [2.94, 2.94]        2.94 #>   label_results #> 1    Means.dist #> 2   Means.speed  # Pass the argument 'columns' to table_results through '...' to retain # auxiliary columns for further processing nod <- get_nodes(res, columns = c(\"est_sig\", \"confint\")) nod #>    name shape          label  est_sig         confint #> 1  dist  rect dist\\n-17.58** -17.58** [-30.56, -4.60] #> 2 speed  rect   speed\\n15.40    15.40  [15.40, 15.40] nod <- within(nod, {label <- paste0(name, \" \", est_sig, \"\\n\", confint)}) nod #>    name shape                          label  est_sig         confint #> 1  dist  rect dist -17.58**\\n[-30.56, -4.60] -17.58** [-30.56, -4.60] #> 2 speed  rect    speed 15.40\\n[15.40, 15.40]    15.40  [15.40, 15.40]"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/graph_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a graph — graph_sem.dagitty","title":"Render a graph — graph_sem.dagitty","text":"Render graph based layout, either nodes edges, model object.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/graph_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a graph — graph_sem.dagitty","text":"","code":"# S3 method for class 'dagitty' graph_sem(model, ...)  graph_sem(...)  # Default S3 method graph_sem(   edges = NULL,   layout = NULL,   nodes = NULL,   rect_width = 1.2,   rect_height = 0.8,   ellipses_width = 1,   ellipses_height = 1,   variance_diameter = 0.8,   spacing_x = 2,   spacing_y = 2,   text_size = 4,   curvature = 60,   angle = NULL,   fix_coord = FALSE,   ... )  # S3 method for class 'lavaan' graph_sem(model, edges = NULL, layout = NULL, nodes = NULL, ...)  # S3 method for class 'MxModel' graph_sem(model, edges = NULL, layout = NULL, nodes = NULL, ...)  # S3 method for class 'mplus.model' graph_sem(model, edges = NULL, layout = NULL, nodes = NULL, ...)  # S3 method for class 'igraph' graph_sem(model, edges = NULL, layout = NULL, nodes = NULL, ...)  # S3 method for class 'character' graph_sem(...)  # S3 method for class 'mplusObject' graph_sem(model, edges = NULL, layout = NULL, nodes = NULL, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/graph_sem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a graph — graph_sem.dagitty","text":"model Instead edges argument, also possible use model argument pass object method exists (e.g., mplus.model lavaan). ... Additional arguments passed functions. edges Object class 'tidy_edges', data.frame  (least) columns c(\"\", \"\"), optionally, c(\"arrow\", \"label\", \"connect_from\", \"connect_to\", \"curvature\"). layout matrix (data.frame) describes layout; see get_layout. nodes Optional, object class 'tidy_nodes', created get_nodes function, data.frame (least) column c(\"name\"), optionally, c(\"shape\", \"label\"). set NULL (default), nodes inferred layout edges arguments. rect_width Width rectangles (used display observed variables), Default: 1.2 rect_height Height rectangles (used display observed variables), Default: 0.8 ellipses_width Width ellipses (used display latent variables), Default: 1 ellipses_height Height ellipses (used display latent variables), Default: 1 variance_diameter Diameter variance circles, Default: .8 spacing_x Spacing columns graph, Default: 1 spacing_y Spacing rows graph, Default: 1 text_size Point size text, Default: 4 curvature Curvature curved edges. curve circle segment originating point forms triangle two connected points, angles two connected points equal curvature. flip curved edge, use negative value curvature. Default: 60 angle Angle used connect nodes top bottom. Defaults NULL, means Euclidean distance used determine shortest distance node sides. numeric value 0-180 can provided, 0 means nodes x-coordinates connected top--bottom, 180 means nodes connected top--bottom. fix_coord Whether fix aspect ratio graph. work multi-group multilevel models. Default: FALSE.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/graph_sem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a graph — graph_sem.dagitty","text":"Object class 'sem_graph'","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/graph_sem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render a graph — graph_sem.dagitty","text":"default interface simply Runs functions prepare_graph plot. alternative interface first runs get_nodes get_edges model argument.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/graph_sem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a graph — graph_sem.dagitty","text":"","code":"library(lavaan) res <- sem(\"dist ~ speed\", cars) graph_sem(res)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/ic_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Information Criteria — ic_weights","title":"Compare Information Criteria — ic_weights","text":"IC weights quantify evidence favor different models set. function normalizes IC values obtain IC weights, sum 1. model highest weight supported data. ratio different weights gives relative support favor one model another.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/ic_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Information Criteria — ic_weights","text":"","code":"ic_weights(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/ic_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Information Criteria — ic_weights","text":"x object method exists. ... Additional arguments.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/ic_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Information Criteria — ic_weights","text":"list class ic_weights elements $weights, contains model weights, $comparison, contains relative support favor model others.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/ic_weights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare Information Criteria — ic_weights","text":"Wagenmakers, E. J., & Farrell, S. (2004). AIC model selection using Akaike weights. Psychonomic bulletin & review, 11(1), 192-196. doi:10.3758/BF03206482","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/ic_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Information Criteria — ic_weights","text":"","code":"ics <- c(100, 200, 102, 300) ic_weights(ics) #> $weights #>      Model 1      Model 2      Model 3      Model 4  #> 7.310586e-01 1.410029e-22 2.689414e-01 2.719593e-44  #>  #> $comparison #>              Model 1      Model 2      Model 3      Model 4 #> Model 1 1.000000e+00 5.184706e+21 2.718282e+00 2.688117e+43 #> Model 2 1.928750e-22 1.000000e+00 5.242886e-22 5.184706e+21 #> Model 3 3.678794e-01 1.907347e+21 1.000000e+00 9.889030e+42 #> Model 4 3.720076e-44 1.928750e-22 1.011221e-43 1.000000e+00 #>  #> attr(,\"class\") #> [1] \"ic_weights\" \"list\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/if_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally edit a sem_graph object — if_edit","title":"Conditionally edit a sem_graph object — if_edit","text":"function allows users conditionally manipulate edges nodes sem_graph object. generic function if_edit applies expression expr rows nodes edges data.frames condition TRUE. wrapper functions documented Usage section hard-coded expr condition; example, color_sig(color = \"green\") colors nodes edges pval < .05 green. column exists assigned aesthetic (e.g., color), wrappers assign default argument (case, color = \"black\") nodes edges.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/if_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally edit a sem_graph object — if_edit","text":"","code":"if_edit(data, condition, expr, ...)  if_edges(data, condition, expr, ...)  if_nodes(data, condition, expr, ...)  # S3 method for class 'sem_graph' if_edit(data, condition, expr, element = c(\"edges\", \"nodes\"), ...)  all_sig(data, expr, ...)  hide_sig(data, ...)  show_sig(data, ...)  colour_sig(data, colour = \"black\", ...)  color_sig(data, color = \"black\", ...)  linetype_sig(data, linetype = 1, ...)  size_sig(data, size = 1, ...)  alpha_sig(data, alpha = 1, ...)  fill_sig(data, fill = \"white\", ...)  label_colour_sig(data, label_colour = \"black\", ...)  label_color_sig(data, label_color = \"black\", ...)  label_fill_sig(data, label_fill = \"white\", ...)  label_size_sig(data, label_size = 4, ...)  label_alpha_sig(data, label_alpha = 1, ...)  label_family_sig(data, label_family = \"sans\", ...)  label_fontface_sig(data, label_fontface = \"plain\", ...)  label_hjust_sig(data, label_hjust = \"center\", ...)  label_vjust_sig(data, label_vjust = \"middle\", ...)  label_lineheight_sig(data, label_lineheight = 1, ...)  label_location_sig(data, label_location = 0.5, ...)  all_nonsig(data, expr, ...)  hide_nonsig(data, ...)  show_nonsig(data, ...)  colour_nonsig(data, colour = \"black\", ...)  color_nonsig(data, color = \"black\", ...)  linetype_nonsig(data, linetype = 1, ...)  size_nonsig(data, size = 1, ...)  alpha_nonsig(data, alpha = 1, ...)  fill_nonsig(data, fill = \"white\", ...)  label_colour_nonsig(data, label_colour = \"black\", ...)  label_color_nonsig(data, label_color = \"black\", ...)  label_fill_nonsig(data, label_fill = \"white\", ...)  label_size_nonsig(data, label_size = 4, ...)  label_alpha_nonsig(data, label_alpha = 1, ...)  label_family_nonsig(data, label_family = \"sans\", ...)  label_fontface_nonsig(data, label_fontface = \"plain\", ...)  label_hjust_nonsig(data, label_hjust = \"center\", ...)  label_vjust_nonsig(data, label_vjust = \"middle\", ...)  label_lineheight_nonsig(data, label_lineheight = 1, ...)  label_location_nonsig(data, label_location = 0.5, ...)  all_fixed(data, expr, ...)  hide_fixed(data, ...)  show_fixed(data, ...)  colour_fixed(data, colour = \"black\", ...)  color_fixed(data, color = \"black\", ...)  linetype_fixed(data, linetype = 1, ...)  size_fixed(data, size = 1, ...)  alpha_fixed(data, alpha = 1, ...)  fill_fixed(data, fill = \"white\", ...)  label_colour_fixed(data, label_colour = \"black\", ...)  label_color_fixed(data, label_color = \"black\", ...)  label_fill_fixed(data, label_fill = \"white\", ...)  label_size_fixed(data, label_size = 4, ...)  label_alpha_fixed(data, label_alpha = 1, ...)  label_family_fixed(data, label_family = \"sans\", ...)  label_fontface_fixed(data, label_fontface = \"plain\", ...)  label_hjust_fixed(data, label_hjust = \"center\", ...)  label_vjust_fixed(data, label_vjust = \"middle\", ...)  label_lineheight_fixed(data, label_lineheight = 1, ...)  label_location_fixed(data, label_location = 0.5, ...)  all_pos(data, expr, ...)  hide_pos(data, ...)  show_pos(data, ...)  colour_pos(data, colour = \"black\", ...)  color_pos(data, color = \"black\", ...)  linetype_pos(data, linetype = 1, ...)  size_pos(data, size = 1, ...)  alpha_pos(data, alpha = 1, ...)  fill_pos(data, fill = \"white\", ...)  label_colour_pos(data, label_colour = \"black\", ...)  label_color_pos(data, label_color = \"black\", ...)  label_fill_pos(data, label_fill = \"white\", ...)  label_size_pos(data, label_size = 4, ...)  label_alpha_pos(data, label_alpha = 1, ...)  label_family_pos(data, label_family = \"sans\", ...)  label_fontface_pos(data, label_fontface = \"plain\", ...)  label_hjust_pos(data, label_hjust = \"center\", ...)  label_vjust_pos(data, label_vjust = \"middle\", ...)  label_lineheight_pos(data, label_lineheight = 1, ...)  label_location_pos(data, label_location = 0.5, ...)  all_neg(data, expr, ...)  hide_neg(data, ...)  show_neg(data, ...)  colour_neg(data, colour = \"black\", ...)  color_neg(data, color = \"black\", ...)  linetype_neg(data, linetype = 1, ...)  size_neg(data, size = 1, ...)  alpha_neg(data, alpha = 1, ...)  fill_neg(data, fill = \"white\", ...)  label_colour_neg(data, label_colour = \"black\", ...)  label_color_neg(data, label_color = \"black\", ...)  label_fill_neg(data, label_fill = \"white\", ...)  label_size_neg(data, label_size = 4, ...)  label_alpha_neg(data, label_alpha = 1, ...)  label_family_neg(data, label_family = \"sans\", ...)  label_fontface_neg(data, label_fontface = \"plain\", ...)  label_hjust_neg(data, label_hjust = \"center\", ...)  label_vjust_neg(data, label_vjust = \"middle\", ...)  label_lineheight_neg(data, label_lineheight = 1, ...)  label_location_neg(data, label_location = 0.5, ...)  all_var(data, expr, ...)  hide_var(data, ...)  show_var(data, ...)  colour_var(data, colour = \"black\", ...)  color_var(data, color = \"black\", ...)  linetype_var(data, linetype = 1, ...)  size_var(data, size = 1, ...)  alpha_var(data, alpha = 1, ...)  label_colour_var(data, label_colour = \"black\", ...)  label_color_var(data, label_color = \"black\", ...)  label_fill_var(data, label_fill = \"white\", ...)  label_size_var(data, label_size = 4, ...)  label_alpha_var(data, label_alpha = 1, ...)  label_family_var(data, label_family = \"sans\", ...)  label_fontface_var(data, label_fontface = \"plain\", ...)  label_hjust_var(data, label_hjust = \"center\", ...)  label_vjust_var(data, label_vjust = \"middle\", ...)  label_lineheight_var(data, label_lineheight = 1, ...)  all_cov(data, expr, ...)  hide_cov(data, ...)  show_cov(data, ...)  colour_cov(data, colour = \"black\", ...)  color_cov(data, color = \"black\", ...)  linetype_cov(data, linetype = 1, ...)  size_cov(data, size = 1, ...)  alpha_cov(data, alpha = 1, ...)  label_colour_cov(data, label_colour = \"black\", ...)  label_color_cov(data, label_color = \"black\", ...)  label_fill_cov(data, label_fill = \"white\", ...)  label_size_cov(data, label_size = 4, ...)  label_alpha_cov(data, label_alpha = 1, ...)  label_family_cov(data, label_family = \"sans\", ...)  label_fontface_cov(data, label_fontface = \"plain\", ...)  label_hjust_cov(data, label_hjust = \"center\", ...)  label_vjust_cov(data, label_vjust = \"middle\", ...)  label_lineheight_cov(data, label_lineheight = 1, ...)  label_location_cov(data, label_location = 0.5, ...)  all_reg(data, expr, ...)  hide_reg(data, ...)  show_reg(data, ...)  colour_reg(data, colour = \"black\", ...)  color_reg(data, color = \"black\", ...)  linetype_reg(data, linetype = 1, ...)  size_reg(data, size = 1, ...)  alpha_reg(data, alpha = 1, ...)  label_colour_reg(data, label_colour = \"black\", ...)  label_color_reg(data, label_color = \"black\", ...)  label_fill_reg(data, label_fill = \"white\", ...)  label_size_reg(data, label_size = 4, ...)  label_alpha_reg(data, label_alpha = 1, ...)  label_family_reg(data, label_family = \"sans\", ...)  label_fontface_reg(data, label_fontface = \"plain\", ...)  label_hjust_reg(data, label_hjust = \"center\", ...)  label_vjust_reg(data, label_vjust = \"middle\", ...)  label_lineheight_reg(data, label_lineheight = 1, ...)  label_location_reg(data, label_location = 0.5, ...)  all_load(data, expr, ...)  hide_load(data, ...)  show_load(data, ...)  colour_load(data, colour = \"black\", ...)  color_load(data, color = \"black\", ...)  linetype_load(data, linetype = 1, ...)  size_load(data, size = 1, ...)  alpha_load(data, alpha = 1, ...)  label_colour_load(data, label_colour = \"black\", ...)  label_color_load(data, label_color = \"black\", ...)  label_fill_load(data, label_fill = \"white\", ...)  label_size_load(data, label_size = 4, ...)  label_alpha_load(data, label_alpha = 1, ...)  label_family_load(data, label_family = \"sans\", ...)  label_fontface_load(data, label_fontface = \"plain\", ...)  label_hjust_load(data, label_hjust = \"center\", ...)  label_vjust_load(data, label_vjust = \"middle\", ...)  label_lineheight_load(data, label_lineheight = 1, ...)  label_location_load(data, label_location = 0.5, ...)  all_obs(data, expr, ...)  hide_obs(data, ...)  show_obs(data, ...)  colour_obs(data, colour = \"black\", ...)  color_obs(data, color = \"black\", ...)  linetype_obs(data, linetype = 1, ...)  size_obs(data, size = 1, ...)  alpha_obs(data, alpha = 1, ...)  fill_obs(data, fill = \"white\", ...)  label_colour_obs(data, label_colour = \"black\", ...)  label_color_obs(data, label_color = \"black\", ...)  label_fill_obs(data, label_fill = \"white\", ...)  label_size_obs(data, label_size = 4, ...)  label_alpha_obs(data, label_alpha = 1, ...)  label_family_obs(data, label_family = \"sans\", ...)  label_fontface_obs(data, label_fontface = \"plain\", ...)  label_hjust_obs(data, label_hjust = \"center\", ...)  label_vjust_obs(data, label_vjust = \"middle\", ...)  label_lineheight_obs(data, label_lineheight = 1, ...)  all_latent(data, expr, ...)  hide_latent(data, ...)  show_latent(data, ...)  colour_latent(data, colour = \"black\", ...)  color_latent(data, color = \"black\", ...)  linetype_latent(data, linetype = 1, ...)  size_latent(data, size = 1, ...)  alpha_latent(data, alpha = 1, ...)  fill_latent(data, fill = \"white\", ...)  label_colour_latent(data, label_colour = \"black\", ...)  label_color_latent(data, label_color = \"black\", ...)  label_fill_latent(data, label_fill = \"white\", ...)  label_size_latent(data, label_size = 4, ...)  label_alpha_latent(data, label_alpha = 1, ...)  label_family_latent(data, label_family = \"sans\", ...)  label_fontface_latent(data, label_fontface = \"plain\", ...)  label_hjust_latent(data, label_hjust = \"center\", ...)  label_vjust_latent(data, label_vjust = \"middle\", ...)  label_lineheight_latent(data, label_lineheight = 1, ...)  all_sig_nodes(data, expr, ...)  hide_sig_nodes(data, ...)  show_sig_nodes(data, ...)  colour_sig_nodes(data, colour = \"black\", ...)  color_sig_nodes(data, color = \"black\", ...)  linetype_sig_nodes(data, linetype = 1, ...)  size_sig_nodes(data, size = 1, ...)  alpha_sig_nodes(data, alpha = 1, ...)  label_colour_sig_nodes(data, label_colour = \"black\", ...)  label_color_sig_nodes(data, label_color = \"black\", ...)  label_fill_sig_nodes(data, label_fill = \"white\", ...)  label_size_sig_nodes(data, label_size = 4, ...)  label_alpha_sig_nodes(data, label_alpha = 1, ...)  label_family_sig_nodes(data, label_family = \"sans\", ...)  label_fontface_sig_nodes(data, label_fontface = \"plain\", ...)  label_hjust_sig_nodes(data, label_hjust = \"center\", ...)  label_vjust_sig_nodes(data, label_vjust = \"middle\", ...)  label_lineheight_sig_nodes(data, label_lineheight = 1, ...)  all_nonsig_nodes(data, expr, ...)  hide_nonsig_nodes(data, ...)  show_nonsig_nodes(data, ...)  colour_nonsig_nodes(data, colour = \"black\", ...)  color_nonsig_nodes(data, color = \"black\", ...)  linetype_nonsig_nodes(data, linetype = 1, ...)  size_nonsig_nodes(data, size = 1, ...)  alpha_nonsig_nodes(data, alpha = 1, ...)  label_colour_nonsig_nodes(data, label_colour = \"black\", ...)  label_color_nonsig_nodes(data, label_color = \"black\", ...)  label_fill_nonsig_nodes(data, label_fill = \"white\", ...)  label_size_nonsig_nodes(data, label_size = 4, ...)  label_alpha_nonsig_nodes(data, label_alpha = 1, ...)  label_family_nonsig_nodes(data, label_family = \"sans\", ...)  label_fontface_nonsig_nodes(data, label_fontface = \"plain\", ...)  label_hjust_nonsig_nodes(data, label_hjust = \"center\", ...)  label_vjust_nonsig_nodes(data, label_vjust = \"middle\", ...)  label_lineheight_nonsig_nodes(data, label_lineheight = 1, ...)  all_fixed_nodes(data, expr, ...)  hide_fixed_nodes(data, ...)  show_fixed_nodes(data, ...)  colour_fixed_nodes(data, colour = \"black\", ...)  color_fixed_nodes(data, color = \"black\", ...)  linetype_fixed_nodes(data, linetype = 1, ...)  size_fixed_nodes(data, size = 1, ...)  alpha_fixed_nodes(data, alpha = 1, ...)  label_colour_fixed_nodes(data, label_colour = \"black\", ...)  label_color_fixed_nodes(data, label_color = \"black\", ...)  label_fill_fixed_nodes(data, label_fill = \"white\", ...)  label_size_fixed_nodes(data, label_size = 4, ...)  label_alpha_fixed_nodes(data, label_alpha = 1, ...)  label_family_fixed_nodes(data, label_family = \"sans\", ...)  label_fontface_fixed_nodes(data, label_fontface = \"plain\", ...)  label_hjust_fixed_nodes(data, label_hjust = \"center\", ...)  label_vjust_fixed_nodes(data, label_vjust = \"middle\", ...)  label_lineheight_fixed_nodes(data, label_lineheight = 1, ...)  all_pos_nodes(data, expr, ...)  hide_pos_nodes(data, ...)  show_pos_nodes(data, ...)  colour_pos_nodes(data, colour = \"black\", ...)  color_pos_nodes(data, color = \"black\", ...)  linetype_pos_nodes(data, linetype = 1, ...)  size_pos_nodes(data, size = 1, ...)  alpha_pos_nodes(data, alpha = 1, ...)  label_colour_pos_nodes(data, label_colour = \"black\", ...)  label_color_pos_nodes(data, label_color = \"black\", ...)  label_fill_pos_nodes(data, label_fill = \"white\", ...)  label_size_pos_nodes(data, label_size = 4, ...)  label_alpha_pos_nodes(data, label_alpha = 1, ...)  label_family_pos_nodes(data, label_family = \"sans\", ...)  label_fontface_pos_nodes(data, label_fontface = \"plain\", ...)  label_hjust_pos_nodes(data, label_hjust = \"center\", ...)  label_vjust_pos_nodes(data, label_vjust = \"middle\", ...)  label_lineheight_pos_nodes(data, label_lineheight = 1, ...)  all_neg_nodes(data, expr, ...)  hide_neg_nodes(data, ...)  show_neg_nodes(data, ...)  colour_neg_nodes(data, colour = \"black\", ...)  color_neg_nodes(data, color = \"black\", ...)  linetype_neg_nodes(data, linetype = 1, ...)  size_neg_nodes(data, size = 1, ...)  alpha_neg_nodes(data, alpha = 1, ...)  label_colour_neg_nodes(data, label_colour = \"black\", ...)  label_color_neg_nodes(data, label_color = \"black\", ...)  label_fill_neg_nodes(data, label_fill = \"white\", ...)  label_size_neg_nodes(data, label_size = 4, ...)  label_alpha_neg_nodes(data, label_alpha = 1, ...)  label_family_neg_nodes(data, label_family = \"sans\", ...)  label_fontface_neg_nodes(data, label_fontface = \"plain\", ...)  label_hjust_neg_nodes(data, label_hjust = \"center\", ...)  label_vjust_neg_nodes(data, label_vjust = \"middle\", ...)  label_lineheight_neg_nodes(data, label_lineheight = 1, ...)  all_sig_edges(data, expr, ...)  hide_sig_edges(data, ...)  show_sig_edges(data, ...)  colour_sig_edges(data, colour = \"black\", ...)  color_sig_edges(data, color = \"black\", ...)  linetype_sig_edges(data, linetype = 1, ...)  size_sig_edges(data, size = 1, ...)  alpha_sig_edges(data, alpha = 1, ...)  label_colour_sig_edges(data, label_colour = \"black\", ...)  label_color_sig_edges(data, label_color = \"black\", ...)  label_fill_sig_edges(data, label_fill = \"white\", ...)  label_size_sig_edges(data, label_size = 4, ...)  label_alpha_sig_edges(data, label_alpha = 1, ...)  label_family_sig_edges(data, label_family = \"sans\", ...)  label_fontface_sig_edges(data, label_fontface = \"plain\", ...)  label_hjust_sig_edges(data, label_hjust = \"center\", ...)  label_vjust_sig_edges(data, label_vjust = \"middle\", ...)  label_lineheight_sig_edges(data, label_lineheight = 1, ...)  all_nonsig_edges(data, expr, ...)  hide_nonsig_edges(data, ...)  show_nonsig_edges(data, ...)  colour_nonsig_edges(data, colour = \"black\", ...)  color_nonsig_edges(data, color = \"black\", ...)  linetype_nonsig_edges(data, linetype = 1, ...)  size_nonsig_edges(data, size = 1, ...)  alpha_nonsig_edges(data, alpha = 1, ...)  label_colour_nonsig_edges(data, label_colour = \"black\", ...)  label_color_nonsig_edges(data, label_color = \"black\", ...)  label_fill_nonsig_edges(data, label_fill = \"white\", ...)  label_size_nonsig_edges(data, label_size = 4, ...)  label_alpha_nonsig_edges(data, label_alpha = 1, ...)  label_family_nonsig_edges(data, label_family = \"sans\", ...)  label_fontface_nonsig_edges(data, label_fontface = \"plain\", ...)  label_hjust_nonsig_edges(data, label_hjust = \"center\", ...)  label_vjust_nonsig_edges(data, label_vjust = \"middle\", ...)  label_lineheight_nonsig_edges(data, label_lineheight = 1, ...)  all_fixed_edges(data, expr, ...)  hide_fixed_edges(data, ...)  show_fixed_edges(data, ...)  colour_fixed_edges(data, colour = \"black\", ...)  color_fixed_edges(data, color = \"black\", ...)  linetype_fixed_edges(data, linetype = 1, ...)  size_fixed_edges(data, size = 1, ...)  alpha_fixed_edges(data, alpha = 1, ...)  label_colour_fixed_edges(data, label_colour = \"black\", ...)  label_color_fixed_edges(data, label_color = \"black\", ...)  label_fill_fixed_edges(data, label_fill = \"white\", ...)  label_size_fixed_edges(data, label_size = 4, ...)  label_alpha_fixed_edges(data, label_alpha = 1, ...)  label_family_fixed_edges(data, label_family = \"sans\", ...)  label_fontface_fixed_edges(data, label_fontface = \"plain\", ...)  label_hjust_fixed_edges(data, label_hjust = \"center\", ...)  label_vjust_fixed_edges(data, label_vjust = \"middle\", ...)  label_lineheight_fixed_edges(data, label_lineheight = 1, ...)  all_pos_edges(data, expr, ...)  hide_pos_edges(data, ...)  show_pos_edges(data, ...)  colour_pos_edges(data, colour = \"black\", ...)  color_pos_edges(data, color = \"black\", ...)  linetype_pos_edges(data, linetype = 1, ...)  size_pos_edges(data, size = 1, ...)  alpha_pos_edges(data, alpha = 1, ...)  label_colour_pos_edges(data, label_colour = \"black\", ...)  label_color_pos_edges(data, label_color = \"black\", ...)  label_fill_pos_edges(data, label_fill = \"white\", ...)  label_size_pos_edges(data, label_size = 4, ...)  label_alpha_pos_edges(data, label_alpha = 1, ...)  label_family_pos_edges(data, label_family = \"sans\", ...)  label_fontface_pos_edges(data, label_fontface = \"plain\", ...)  label_hjust_pos_edges(data, label_hjust = \"center\", ...)  label_vjust_pos_edges(data, label_vjust = \"middle\", ...)  label_lineheight_pos_edges(data, label_lineheight = 1, ...)  all_neg_edges(data, expr, ...)  hide_neg_edges(data, ...)  show_neg_edges(data, ...)  colour_neg_edges(data, colour = \"black\", ...)  color_neg_edges(data, color = \"black\", ...)  linetype_neg_edges(data, linetype = 1, ...)  size_neg_edges(data, size = 1, ...)  alpha_neg_edges(data, alpha = 1, ...)  label_colour_neg_edges(data, label_colour = \"black\", ...)  label_color_neg_edges(data, label_color = \"black\", ...)  label_fill_neg_edges(data, label_fill = \"white\", ...)  label_size_neg_edges(data, label_size = 4, ...)  label_alpha_neg_edges(data, label_alpha = 1, ...)  label_family_neg_edges(data, label_family = \"sans\", ...)  label_fontface_neg_edges(data, label_fontface = \"plain\", ...)  label_hjust_neg_edges(data, label_hjust = \"center\", ...)  label_vjust_neg_edges(data, label_vjust = \"middle\", ...)  label_lineheight_neg_edges(data, label_lineheight = 1, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/if_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally edit a sem_graph object — if_edit","text":"data Object manipulate. condition Expression returns logical vector evaluated environment data. expr Expression perform elements data condition == TRUE. ... Additional arguments passed functions. element Character vector. elements sem_graph edit, defaults c(\"edges\", \"nodes\"). colour Atomic character vector, indicating colour assign selected elements. color Atomic character vector, indicating color assign selected elements. linetype Atomic character vector, indicating linetype assign selected elements. size Atomic character vector, indicating size assign selected elements. alpha Atomic character vector, indicating alpha assign selected elements. fill Atomic character vector, indicating fill assign selected elements. label_colour Atomic character vector, indicating label_colour assign selected elements. label_color Atomic character vector, indicating label_color assign selected elements. label_fill Atomic character vector, indicating label_fill assign selected elements. label_size Atomic character vector, indicating label_size assign selected elements. label_alpha Atomic character vector, indicating label_alpha assign selected elements. label_family Atomic character vector, indicating label_family assign selected elements. label_fontface Atomic character vector, indicating label_fontface assign selected elements. label_hjust Atomic character vector, indicating label_hjust assign selected elements. label_vjust Atomic character vector, indicating label_vjust assign selected elements. label_lineheight Atomic character vector, indicating label_lineheight assign selected elements. label_location Atomic character vector, indicating label_location assign selected elements.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/if_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally edit a sem_graph object — if_edit","text":"Object class data.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/if_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditionally edit a sem_graph object — if_edit","text":"","code":"library(lavaan) res <- sem(\"dist ~ speed\", cars, meanstructure = TRUE) p <- prepare_graph(res) out <- if_edit(p, condition = {pval < .05}, expr = {label = \"sig\"}) out <- if_edges(p, condition = {pval < .05}, expr = {label = \"sig\"}) out <- if_nodes(p, condition = {pval < .05}, expr = {label = \"sig\"}) out <- all_sig(p, expr = {label = \"sig\"}) out <- hide_sig(p) out <- show_sig(p) out <- colour_sig(p, { colour = \"black\" }) out <- color_sig(p, { color = \"black\" }) out <- linetype_sig(p, { linetype = 1 }) out <- size_sig(p, { size = 1 }) out <- alpha_sig(p, { alpha = 1 }) out <- fill_sig(p, { fill = \"white\" }) out <- label_colour_sig(p, { label_colour = \"black\" }) out <- label_color_sig(p, { label_color = \"black\" }) out <- label_fill_sig(p, { label_fill = \"white\" }) out <- label_size_sig(p, { label_size = 4 }) out <- label_alpha_sig(p, { label_alpha = 1 }) out <- label_family_sig(p, { label_family = \"sans\" }) out <- label_fontface_sig(p, { label_fontface = \"plain\" }) out <- label_hjust_sig(p, { label_hjust = \"center\" }) out <- label_vjust_sig(p, { label_vjust = \"middle\" }) out <- label_lineheight_sig(p, { label_lineheight = 1 }) out <- label_location_sig(p, { label_location = .5 }) out <- all_nonsig(p, expr = {label = \"sig\"}) out <- hide_nonsig(p) out <- show_nonsig(p) out <- colour_nonsig(p, { colour = \"black\" }) out <- color_nonsig(p, { color = \"black\" }) out <- linetype_nonsig(p, { linetype = 1 }) out <- size_nonsig(p, { size = 1 }) out <- alpha_nonsig(p, { alpha = 1 }) out <- fill_nonsig(p, { fill = \"white\" }) out <- label_colour_nonsig(p, { label_colour = \"black\" }) out <- label_color_nonsig(p, { label_color = \"black\" }) out <- label_fill_nonsig(p, { label_fill = \"white\" }) out <- label_size_nonsig(p, { label_size = 4 }) out <- label_alpha_nonsig(p, { label_alpha = 1 }) out <- label_family_nonsig(p, { label_family = \"sans\" }) out <- label_fontface_nonsig(p, { label_fontface = \"plain\" }) out <- label_hjust_nonsig(p, { label_hjust = \"center\" }) out <- label_vjust_nonsig(p, { label_vjust = \"middle\" }) out <- label_lineheight_nonsig(p, { label_lineheight = 1 }) out <- label_location_nonsig(p, { label_location = .5 }) out <- all_fixed(p, expr = {label = \"sig\"}) out <- hide_fixed(p) out <- show_fixed(p) out <- colour_fixed(p, { colour = \"black\" }) out <- color_fixed(p, { color = \"black\" }) out <- linetype_fixed(p, { linetype = 1 }) out <- size_fixed(p, { size = 1 }) out <- alpha_fixed(p, { alpha = 1 }) out <- fill_fixed(p, { fill = \"white\" }) out <- label_colour_fixed(p, { label_colour = \"black\" }) out <- label_color_fixed(p, { label_color = \"black\" }) out <- label_fill_fixed(p, { label_fill = \"white\" }) out <- label_size_fixed(p, { label_size = 4 }) out <- label_alpha_fixed(p, { label_alpha = 1 }) out <- label_family_fixed(p, { label_family = \"sans\" }) out <- label_fontface_fixed(p, { label_fontface = \"plain\" }) out <- label_hjust_fixed(p, { label_hjust = \"center\" }) out <- label_vjust_fixed(p, { label_vjust = \"middle\" }) out <- label_lineheight_fixed(p, { label_lineheight = 1 }) out <- label_location_fixed(p, { label_location = .5 }) out <- all_pos(p, expr = {label = \"sig\"}) out <- hide_pos(p) out <- show_pos(p) out <- colour_pos(p, { colour = \"black\" }) out <- color_pos(p, { color = \"black\" }) out <- linetype_pos(p, { linetype = 1 }) out <- size_pos(p, { size = 1 }) out <- alpha_pos(p, { alpha = 1 }) out <- fill_pos(p, { fill = \"white\" }) out <- label_colour_pos(p, { label_colour = \"black\" }) out <- label_color_pos(p, { label_color = \"black\" }) out <- label_fill_pos(p, { label_fill = \"white\" }) out <- label_size_pos(p, { label_size = 4 }) out <- label_alpha_pos(p, { label_alpha = 1 }) out <- label_family_pos(p, { label_family = \"sans\" }) out <- label_fontface_pos(p, { label_fontface = \"plain\" }) out <- label_hjust_pos(p, { label_hjust = \"center\" }) out <- label_vjust_pos(p, { label_vjust = \"middle\" }) out <- label_lineheight_pos(p, { label_lineheight = 1 }) out <- label_location_pos(p, { label_location = .5 }) out <- all_neg(p, expr = {label = \"sig\"}) out <- hide_neg(p) out <- show_neg(p) out <- colour_neg(p, { colour = \"black\" }) out <- color_neg(p, { color = \"black\" }) out <- linetype_neg(p, { linetype = 1 }) out <- size_neg(p, { size = 1 }) out <- alpha_neg(p, { alpha = 1 }) out <- fill_neg(p, { fill = \"white\" }) out <- label_colour_neg(p, { label_colour = \"black\" }) out <- label_color_neg(p, { label_color = \"black\" }) out <- label_fill_neg(p, { label_fill = \"white\" }) out <- label_size_neg(p, { label_size = 4 }) out <- label_alpha_neg(p, { label_alpha = 1 }) out <- label_family_neg(p, { label_family = \"sans\" }) out <- label_fontface_neg(p, { label_fontface = \"plain\" }) out <- label_hjust_neg(p, { label_hjust = \"center\" }) out <- label_vjust_neg(p, { label_vjust = \"middle\" }) out <- label_lineheight_neg(p, { label_lineheight = 1 }) out <- label_location_neg(p, { label_location = .5 }) out <- all_var(p, expr = {label = \"sig\"}) out <- hide_var(p) out <- show_var(p) out <- colour_var(p, { colour = \"black\" }) out <- color_var(p, { color = \"black\" }) out <- linetype_var(p, { linetype = 1 }) out <- size_var(p, { size = 1 }) out <- alpha_var(p, { alpha = 1 }) out <- label_colour_var(p, { label_colour = \"black\" }) out <- label_color_var(p, { label_color = \"black\" }) out <- label_fill_var(p, { label_fill = \"white\" }) out <- label_size_var(p, { label_size = 4 }) out <- label_alpha_var(p, { label_alpha = 1 }) out <- label_family_var(p, { label_family = \"sans\" }) out <- label_fontface_var(p, { label_fontface = \"plain\" }) out <- label_hjust_var(p, { label_hjust = \"center\" }) out <- label_vjust_var(p, { label_vjust = \"middle\" }) out <- label_lineheight_var(p, { label_lineheight = 1 }) out <- all_cov(p, expr = {label = \"sig\"}) out <- hide_cov(p) out <- show_cov(p) out <- colour_cov(p, { colour = \"black\" }) out <- color_cov(p, { color = \"black\" }) out <- linetype_cov(p, { linetype = 1 }) out <- size_cov(p, { size = 1 }) out <- alpha_cov(p, { alpha = 1 }) out <- label_colour_cov(p, { label_colour = \"black\" }) out <- label_color_cov(p, { label_color = \"black\" }) out <- label_fill_cov(p, { label_fill = \"white\" }) out <- label_size_cov(p, { label_size = 4 }) out <- label_alpha_cov(p, { label_alpha = 1 }) out <- label_family_cov(p, { label_family = \"sans\" }) out <- label_fontface_cov(p, { label_fontface = \"plain\" }) out <- label_hjust_cov(p, { label_hjust = \"center\" }) out <- label_vjust_cov(p, { label_vjust = \"middle\" }) out <- label_lineheight_cov(p, { label_lineheight = 1 }) out <- label_location_cov(p, { label_location = .5 }) out <- all_reg(p, expr = {label = \"sig\"}) out <- hide_reg(p) out <- show_reg(p) out <- colour_reg(p, { colour = \"black\" }) out <- color_reg(p, { color = \"black\" }) out <- linetype_reg(p, { linetype = 1 }) out <- size_reg(p, { size = 1 }) out <- alpha_reg(p, { alpha = 1 }) out <- label_colour_reg(p, { label_colour = \"black\" }) out <- label_color_reg(p, { label_color = \"black\" }) out <- label_fill_reg(p, { label_fill = \"white\" }) out <- label_size_reg(p, { label_size = 4 }) out <- label_alpha_reg(p, { label_alpha = 1 }) out <- label_family_reg(p, { label_family = \"sans\" }) out <- label_fontface_reg(p, { label_fontface = \"plain\" }) out <- label_hjust_reg(p, { label_hjust = \"center\" }) out <- label_vjust_reg(p, { label_vjust = \"middle\" }) out <- label_lineheight_reg(p, { label_lineheight = 1 }) out <- label_location_reg(p, { label_location = .5 }) out <- all_load(p, expr = {label = \"sig\"}) out <- hide_load(p) out <- show_load(p) out <- colour_load(p, { colour = \"black\" }) out <- color_load(p, { color = \"black\" }) out <- linetype_load(p, { linetype = 1 }) out <- size_load(p, { size = 1 }) out <- alpha_load(p, { alpha = 1 }) out <- label_colour_load(p, { label_colour = \"black\" }) out <- label_color_load(p, { label_color = \"black\" }) out <- label_fill_load(p, { label_fill = \"white\" }) out <- label_size_load(p, { label_size = 4 }) out <- label_alpha_load(p, { label_alpha = 1 }) out <- label_family_load(p, { label_family = \"sans\" }) out <- label_fontface_load(p, { label_fontface = \"plain\" }) out <- label_hjust_load(p, { label_hjust = \"center\" }) out <- label_vjust_load(p, { label_vjust = \"middle\" }) out <- label_lineheight_load(p, { label_lineheight = 1 }) out <- label_location_load(p, { label_location = .5 }) out <- all_obs(p, expr = {label = \"sig\"}) out <- hide_obs(p) out <- show_obs(p) out <- colour_obs(p, { colour = \"black\" }) out <- color_obs(p, { color = \"black\" }) out <- linetype_obs(p, { linetype = 1 }) out <- size_obs(p, { size = 1 }) out <- alpha_obs(p, { alpha = 1 }) out <- fill_obs(p, { fill = \"white\" }) out <- label_colour_obs(p, { label_colour = \"black\" }) out <- label_color_obs(p, { label_color = \"black\" }) out <- label_fill_obs(p, { label_fill = \"white\" }) out <- label_size_obs(p, { label_size = 4 }) out <- label_alpha_obs(p, { label_alpha = 1 }) out <- label_family_obs(p, { label_family = \"sans\" }) out <- label_fontface_obs(p, { label_fontface = \"plain\" }) out <- label_hjust_obs(p, { label_hjust = \"center\" }) out <- label_vjust_obs(p, { label_vjust = \"middle\" }) out <- label_lineheight_obs(p, { label_lineheight = 1 }) out <- all_latent(p, expr = {label = \"sig\"}) out <- hide_latent(p) out <- show_latent(p) out <- colour_latent(p, { colour = \"black\" }) out <- color_latent(p, { color = \"black\" }) out <- linetype_latent(p, { linetype = 1 }) out <- size_latent(p, { size = 1 }) out <- alpha_latent(p, { alpha = 1 }) out <- fill_latent(p, { fill = \"white\" }) out <- label_colour_latent(p, { label_colour = \"black\" }) out <- label_color_latent(p, { label_color = \"black\" }) out <- label_fill_latent(p, { label_fill = \"white\" }) out <- label_size_latent(p, { label_size = 4 }) out <- label_alpha_latent(p, { label_alpha = 1 }) out <- label_family_latent(p, { label_family = \"sans\" }) out <- label_fontface_latent(p, { label_fontface = \"plain\" }) out <- label_hjust_latent(p, { label_hjust = \"center\" }) out <- label_vjust_latent(p, { label_vjust = \"middle\" }) out <- label_lineheight_latent(p, { label_lineheight = 1 }) out <- all_sig(p, expr = {label = \"sig\"}) out <- hide_sig(p) out <- show_sig(p) out <- colour_sig(p, { colour = \"black\" }) out <- color_sig(p, { color = \"black\" }) out <- linetype_sig(p, { linetype = 1 }) out <- size_sig(p, { size = 1 }) out <- alpha_sig(p, { alpha = 1 }) out <- label_colour_sig(p, { label_colour = \"black\" }) out <- label_color_sig(p, { label_color = \"black\" }) out <- label_fill_sig(p, { label_fill = \"white\" }) out <- label_size_sig(p, { label_size = 4 }) out <- label_alpha_sig(p, { label_alpha = 1 }) out <- label_family_sig(p, { label_family = \"sans\" }) out <- label_fontface_sig(p, { label_fontface = \"plain\" }) out <- label_hjust_sig(p, { label_hjust = \"center\" }) out <- label_vjust_sig(p, { label_vjust = \"middle\" }) out <- label_lineheight_sig(p, { label_lineheight = 1 }) out <- all_nonsig(p, expr = {label = \"sig\"}) out <- hide_nonsig(p) out <- show_nonsig(p) out <- colour_nonsig(p, { colour = \"black\" }) out <- color_nonsig(p, { color = \"black\" }) out <- linetype_nonsig(p, { linetype = 1 }) out <- size_nonsig(p, { size = 1 }) out <- alpha_nonsig(p, { alpha = 1 }) out <- label_colour_nonsig(p, { label_colour = \"black\" }) out <- label_color_nonsig(p, { label_color = \"black\" }) out <- label_fill_nonsig(p, { label_fill = \"white\" }) out <- label_size_nonsig(p, { label_size = 4 }) out <- label_alpha_nonsig(p, { label_alpha = 1 }) out <- label_family_nonsig(p, { label_family = \"sans\" }) out <- label_fontface_nonsig(p, { label_fontface = \"plain\" }) out <- label_hjust_nonsig(p, { label_hjust = \"center\" }) out <- label_vjust_nonsig(p, { label_vjust = \"middle\" }) out <- label_lineheight_nonsig(p, { label_lineheight = 1 }) out <- all_fixed(p, expr = {label = \"sig\"}) out <- hide_fixed(p) out <- show_fixed(p) out <- colour_fixed(p, { colour = \"black\" }) out <- color_fixed(p, { color = \"black\" }) out <- linetype_fixed(p, { linetype = 1 }) out <- size_fixed(p, { size = 1 }) out <- alpha_fixed(p, { alpha = 1 }) out <- label_colour_fixed(p, { label_colour = \"black\" }) out <- label_color_fixed(p, { label_color = \"black\" }) out <- label_fill_fixed(p, { label_fill = \"white\" }) out <- label_size_fixed(p, { label_size = 4 }) out <- label_alpha_fixed(p, { label_alpha = 1 }) out <- label_family_fixed(p, { label_family = \"sans\" }) out <- label_fontface_fixed(p, { label_fontface = \"plain\" }) out <- label_hjust_fixed(p, { label_hjust = \"center\" }) out <- label_vjust_fixed(p, { label_vjust = \"middle\" }) out <- label_lineheight_fixed(p, { label_lineheight = 1 }) out <- all_pos(p, expr = {label = \"sig\"}) out <- hide_pos(p) out <- show_pos(p) out <- colour_pos(p, { colour = \"black\" }) out <- color_pos(p, { color = \"black\" }) out <- linetype_pos(p, { linetype = 1 }) out <- size_pos(p, { size = 1 }) out <- alpha_pos(p, { alpha = 1 }) out <- label_colour_pos(p, { label_colour = \"black\" }) out <- label_color_pos(p, { label_color = \"black\" }) out <- label_fill_pos(p, { label_fill = \"white\" }) out <- label_size_pos(p, { label_size = 4 }) out <- label_alpha_pos(p, { label_alpha = 1 }) out <- label_family_pos(p, { label_family = \"sans\" }) out <- label_fontface_pos(p, { label_fontface = \"plain\" }) out <- label_hjust_pos(p, { label_hjust = \"center\" }) out <- label_vjust_pos(p, { label_vjust = \"middle\" }) out <- label_lineheight_pos(p, { label_lineheight = 1 }) out <- all_neg(p, expr = {label = \"sig\"}) out <- hide_neg(p) out <- show_neg(p) out <- colour_neg(p, { colour = \"black\" }) out <- color_neg(p, { color = \"black\" }) out <- linetype_neg(p, { linetype = 1 }) out <- size_neg(p, { size = 1 }) out <- alpha_neg(p, { alpha = 1 }) out <- label_colour_neg(p, { label_colour = \"black\" }) out <- label_color_neg(p, { label_color = \"black\" }) out <- label_fill_neg(p, { label_fill = \"white\" }) out <- label_size_neg(p, { label_size = 4 }) out <- label_alpha_neg(p, { label_alpha = 1 }) out <- label_family_neg(p, { label_family = \"sans\" }) out <- label_fontface_neg(p, { label_fontface = \"plain\" }) out <- label_hjust_neg(p, { label_hjust = \"center\" }) out <- label_vjust_neg(p, { label_vjust = \"middle\" }) out <- label_lineheight_neg(p, { label_lineheight = 1 }) out <- all_sig(p, expr = {label = \"sig\"}) out <- hide_sig(p) out <- show_sig(p) out <- colour_sig(p, { colour = \"black\" }) out <- color_sig(p, { color = \"black\" }) out <- linetype_sig(p, { linetype = 1 }) out <- size_sig(p, { size = 1 }) out <- alpha_sig(p, { alpha = 1 }) out <- label_colour_sig(p, { label_colour = \"black\" }) out <- label_color_sig(p, { label_color = \"black\" }) out <- label_fill_sig(p, { label_fill = \"white\" }) out <- label_size_sig(p, { label_size = 4 }) out <- label_alpha_sig(p, { label_alpha = 1 }) out <- label_family_sig(p, { label_family = \"sans\" }) out <- label_fontface_sig(p, { label_fontface = \"plain\" }) out <- label_hjust_sig(p, { label_hjust = \"center\" }) out <- label_vjust_sig(p, { label_vjust = \"middle\" }) out <- label_lineheight_sig(p, { label_lineheight = 1 }) out <- all_nonsig(p, expr = {label = \"sig\"}) out <- hide_nonsig(p) out <- show_nonsig(p) out <- colour_nonsig(p, { colour = \"black\" }) out <- color_nonsig(p, { color = \"black\" }) out <- linetype_nonsig(p, { linetype = 1 }) out <- size_nonsig(p, { size = 1 }) out <- alpha_nonsig(p, { alpha = 1 }) out <- label_colour_nonsig(p, { label_colour = \"black\" }) out <- label_color_nonsig(p, { label_color = \"black\" }) out <- label_fill_nonsig(p, { label_fill = \"white\" }) out <- label_size_nonsig(p, { label_size = 4 }) out <- label_alpha_nonsig(p, { label_alpha = 1 }) out <- label_family_nonsig(p, { label_family = \"sans\" }) out <- label_fontface_nonsig(p, { label_fontface = \"plain\" }) out <- label_hjust_nonsig(p, { label_hjust = \"center\" }) out <- label_vjust_nonsig(p, { label_vjust = \"middle\" }) out <- label_lineheight_nonsig(p, { label_lineheight = 1 }) out <- all_fixed(p, expr = {label = \"sig\"}) out <- hide_fixed(p) out <- show_fixed(p) out <- colour_fixed(p, { colour = \"black\" }) out <- color_fixed(p, { color = \"black\" }) out <- linetype_fixed(p, { linetype = 1 }) out <- size_fixed(p, { size = 1 }) out <- alpha_fixed(p, { alpha = 1 }) out <- label_colour_fixed(p, { label_colour = \"black\" }) out <- label_color_fixed(p, { label_color = \"black\" }) out <- label_fill_fixed(p, { label_fill = \"white\" }) out <- label_size_fixed(p, { label_size = 4 }) out <- label_alpha_fixed(p, { label_alpha = 1 }) out <- label_family_fixed(p, { label_family = \"sans\" }) out <- label_fontface_fixed(p, { label_fontface = \"plain\" }) out <- label_hjust_fixed(p, { label_hjust = \"center\" }) out <- label_vjust_fixed(p, { label_vjust = \"middle\" }) out <- label_lineheight_fixed(p, { label_lineheight = 1 }) out <- all_pos(p, expr = {label = \"sig\"}) out <- hide_pos(p) out <- show_pos(p) out <- colour_pos(p, { colour = \"black\" }) out <- color_pos(p, { color = \"black\" }) out <- linetype_pos(p, { linetype = 1 }) out <- size_pos(p, { size = 1 }) out <- alpha_pos(p, { alpha = 1 }) out <- label_colour_pos(p, { label_colour = \"black\" }) out <- label_color_pos(p, { label_color = \"black\" }) out <- label_fill_pos(p, { label_fill = \"white\" }) out <- label_size_pos(p, { label_size = 4 }) out <- label_alpha_pos(p, { label_alpha = 1 }) out <- label_family_pos(p, { label_family = \"sans\" }) out <- label_fontface_pos(p, { label_fontface = \"plain\" }) out <- label_hjust_pos(p, { label_hjust = \"center\" }) out <- label_vjust_pos(p, { label_vjust = \"middle\" }) out <- label_lineheight_pos(p, { label_lineheight = 1 }) out <- all_neg(p, expr = {label = \"sig\"}) out <- hide_neg(p) out <- show_neg(p) out <- colour_neg(p, { colour = \"black\" }) out <- color_neg(p, { color = \"black\" }) out <- linetype_neg(p, { linetype = 1 }) out <- size_neg(p, { size = 1 }) out <- alpha_neg(p, { alpha = 1 }) out <- label_colour_neg(p, { label_colour = \"black\" }) out <- label_color_neg(p, { label_color = \"black\" }) out <- label_fill_neg(p, { label_fill = \"white\" }) out <- label_size_neg(p, { label_size = 4 }) out <- label_alpha_neg(p, { label_alpha = 1 }) out <- label_family_neg(p, { label_family = \"sans\" }) out <- label_fontface_neg(p, { label_fontface = \"plain\" }) out <- label_hjust_neg(p, { label_hjust = \"center\" }) out <- label_vjust_neg(p, { label_vjust = \"middle\" }) out <- label_lineheight_neg(p, { label_lineheight = 1 })"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"likelihood ratio test class enumeration latent class analysis, proposed Lo, Mendell, & Rubin (2001) based work Vuong (1989). See Details important clarification.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"","code":"lr_lmr(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"x object method exists. ... Additional arguments.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"data.frame containing Z-value likelihood ratio test, p-value, df (indicates difference number parameters, true degrees freedom, may zero), w2 (omega squared) statistic test distinguishability, p-value.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"likelihood ratio test non-nested models, based work Vuong (1989), often used class enumeration latent class analysis (see Lo, Mendell, & Rubin, 2001). Following work Merkle, , & Preacher (2016), models compared must first tested distinguishability population, using w2 test. null hypothesis models indistinguishable. null hypothesis rejected, point statistical model comparison, either using LMR LRT statistics. null hypothesis rejected, LMR LRT can evaluated using Z-test. function wraps \\link[nonnest2]{vuongtest} perform test.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"Lo Y, Mendell NR, Rubin DB. Testing number components normal mixture. Biometrika. 2001;88(3):767–778. doi:10.1093/biomet/88.3.767 Vuong, Q. H. (1989). Likelihood ratio tests model selection non-nested hypotheses. Econometrica, 57, 307-333. doi:10.2307/1912557 Merkle, E. C., , D., & Preacher, K. (2016). Testing non-nested structural equation models. Psychological Methods, 21, 151-163. doi:10.1037/met0000038","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_lmr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lo-Mendell-Rubin Likelihood Ratio Test — lr_lmr","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ df <- iris[c(1:5, 100:105), 1:3] names(df) <- letters[1:3] res <- mx_profiles(df, classes = 1:2) lr_lmr(res) } #> Running mix1 with 6 parameters #> Running mix2 with 10 parameters #> Running mix2 with 10 parameters #> Lo-Mendell-Rubin adjusted Likelihood Ratio Test: #>  #>  null  alt   lr df        p   w2  p_w2 #>  mix1 mix2 3.77  4 8.31e-05 2.44 0.258"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct Likelihood Ratio tests — lr_test","title":"Conduct Likelihood Ratio tests — lr_test","text":"multigroup model class MxModel, conduct overall pairwise likelihood ratio tests. submodels must identical.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct Likelihood Ratio tests — lr_test","text":"","code":"lr_test(x, compare = c(\"All\", \"A\", \"S\", \"F\", \"M\", \"Thresholds\"), ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct Likelihood Ratio tests — lr_test","text":"x object method exists. compare Character vector, indicating matrices constrain equal pairwise comparisons. ... Additional arguments passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct Likelihood Ratio tests — lr_test","text":"object class lr_test list.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lr_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct Likelihood Ratio tests — lr_test","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ df <- iris[c(1:10, 140:150), c(1, 5)] names(df) <- c(\"x\", \"group\") mod <- as_ram(\"x~1\", data = df, group = \"group\") mod <- run_mx(mod) lr_test(mod) } #> Running mg with 4 parameters #> Running mg with 2 parameters #> Running mg with 2 parameters #> BCH test for equality of means across classes #>  #> Overall likelihood ratio test: #>  LL_baseline LL_restricted   LL_dif df            p #>     12.02743      54.15309 42.12566  2 7.120795e-10 #>  #> Pairwise comparisons using likelihood ratio tests: #>  Model1    Model2 LL_baseline LL_restricted   LL_dif df            p #>  setosa virginica    12.02743      54.15309 42.12566  2 7.120795e-10"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lsub.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply pattern replacement over a vector — lsub","title":"Apply pattern replacement over a vector — lsub","text":"lsub returns list length replacement, element result applying gsub x using lapply.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lsub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply pattern replacement over a vector — lsub","text":"","code":"lsub(x, replacement = NULL, pattern = \"{C}\", fixed = TRUE, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lsub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply pattern replacement over a vector — lsub","text":"x character vector matches sought. replacement character vector length 1 . element applied x turn. Default: NULL pattern character string containing regular expression (character string fixed = TRUE). Default: '{C}'. fixed logical. TRUE, pattern string matched . Default: TRUE ... Parameters passed gsub.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lsub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply pattern replacement over a vector — lsub","text":"list results returned gsub.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/lsub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply pattern replacement over a vector — lsub","text":"","code":"lsub(\"a{C}\", 1:3) #> [[1]] #> [1] \"a1\" #>  #> [[2]] #> [1] \"a2\" #>  #> [[3]] #> [1] \"a3\" #>"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/maene_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"National Identity, Discrimination and Depression — maene_identity","title":"National Identity, Discrimination and Depression — maene_identity","text":"synthetic data based study Maene colleagues, conducted LCA ordinal indicators National, Regional, Heritage Identities Flemish (Belgian) high-school students migration background, examined class differences perceived discrimination teachers depressive symptoms.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/maene_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National Identity, Discrimination and Depression — maene_identity","text":"","code":"data(maene_identity)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/maene_identity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"National Identity, Discrimination and Depression — maene_identity","text":"data frame 439 rows 13 variables.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/maene_identity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"National Identity, Discrimination and Depression — maene_identity","text":"Maene, C., D’hondt, F., Van Lissa, C. J., Thijs, J., & Stevens, P. . (2022). Perceived teacher discrimination depressive feelings adolescents: role national, regional, heritage identities Flemish schools. Journal youth adolescence, 51(12), 2281-2293. doi:10.1007/s10964-022-01665-7","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/measurement.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate syntax for a measurement model — measurement","title":"Generate syntax for a measurement model — measurement","text":"Generate syntax measurement model latent variables. function relies add_paths generate syntax.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/measurement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate syntax for a measurement model — measurement","text":"","code":"measurement(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/measurement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate syntax for a measurement model — measurement","text":"x object method exists, including tidy_sem (generated using dictionary, data.frame (dictionary run first). ... Additional parameters passed add_paths.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/measurement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate syntax for a measurement model — measurement","text":"object class tidy_sem.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/measurement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate syntax for a measurement model — measurement","text":"","code":"dict <- tidy_sem(c(\"bfi_1\", \"bfi_2\", \"bfi_3\", \"bfi_4\", \"bfi_5\")) measurement(dict) #> A tidy_sem object #> v    $dictionary #> o    $data #> v    $syntax"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically set starting values for an OpenMx mixture model — mixture_starts","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"Automatically set starting values OpenMx mixture model. function designed work mixture models created using tidySEM functions like mx_mixture, may work mxModels.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"","code":"mixture_starts(model, splits, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"model mixture model class mxModel. splits Optional. numeric vector length equal number rows OpenMx::mxData() used model object. data split vector. See Details default setting possible alternatives. ... Additional arguments, passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"Returns OpenMx::mxModel() starting values.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"Starting values derived following procedure: mixture model converted multi-group model. data split along splits, assigned corresponding groups multi-group model. multi-group model run, final values group assigned corresponding mixture component starting values. mixture model returned starting values. argument splits provided, function call stats::kmeans(x = data, centers = classes)$cluster, data extracted model argument. Sensible ways split data include: Using Hierarchical clustering: cutree(hclust(dist(data)), k = classes)) Using K-means clustering: stats::kmeans(x = data, centers = classes)$cluster Using agglomerative hierarchical clustering: mclust::hclass(data = data), G = classes)[, 1] Using random split: sample.int(n = classes,   size = nrow(data), replace = TRUE)","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"Shireman, E., Steinley, D. & Brusco, M.J. Examining effect initialization strategies performance Gaussian mixture modeling. Behav Res 49, 282–293 (2017). doi:10.3758/s13428-015-0697-6 Van Lissa, C. J., Garnier-Villarreal, M., & Anadria, D. (2023). Recommended Practices Latent Class Analysis using Open-Source R-Package tidySEM. Structural Equation Modeling. doi:10.1080/10705511.2023.2250920","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mixture_starts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically set starting values for an OpenMx mixture model — mixture_starts","text":"","code":"if (FALSE) { # \\dontrun{ df <- iris[, 1, drop = FALSE] names(df) <- \"x\" mod <- mx_mixture(model = \"x ~ m{C}*1                            x ~~ v{C}*x\",                            classes = 2,                            data = df,                            run = FALSE) mod <- mixture_starts(mod) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mplus_expand_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand abbreviated Mplus variable names — mplus_expand_names","title":"Expand abbreviated Mplus variable names — mplus_expand_names","text":"Expand Mplus syntax abbreviating lists variable names.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mplus_expand_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand abbreviated Mplus variable names — mplus_expand_names","text":"","code":"mplus_expand_names(x)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mplus_expand_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand abbreviated Mplus variable names — mplus_expand_names","text":"x Atomic character string containing variable names section Mplus syntax file.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mplus_expand_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand abbreviated Mplus variable names — mplus_expand_names","text":"Character vector names.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mplus_expand_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand abbreviated Mplus variable names — mplus_expand_names","text":"","code":"mplus_expand_names(\"test1-test12\") #>  [1] \"test1\"  \"test2\"  \"test3\"  \"test4\"  \"test5\"  \"test6\"  \"test7\"  \"test8\"  #>  [9] \"test9\"  \"test10\" \"test11\" \"test12\" mplus_expand_names(\"testa-testb\") #> [1] \"testa\" \"testb\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_dummies.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy Code Factor Variables — mx_dummies","title":"Dummy Code Factor Variables — mx_dummies","text":"variable v inherits factor, create number new variables equal levels(v) indicate group membership (1) non-membership (0) level. resulting dummies class mxFactor.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_dummies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy Code Factor Variables — mx_dummies","text":"","code":"mx_dummies(x, classes = c(\"factor\", \"character\"), ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_dummies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dummy Code Factor Variables — mx_dummies","text":"x object method exists. classes Character vector, indicating classes dummy code. Defaults c(\"factor\", \"character\"). ... Arguments","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_dummies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy Code Factor Variables — mx_dummies","text":"data.frame.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_dummies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy Code Factor Variables — mx_dummies","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ mx_dummies(iris[1:5,]) } #> Warning: Some categories have fewer than 5% of cases: Species.csetosa, Species.cversicolor, Species.cvirginica #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1          5.1         3.5          1.4         0.2 #> 2          4.9         3.0          1.4         0.2 #> 3          4.7         3.2          1.3         0.2 #> 4          4.6         3.1          1.5         0.2 #> 5          5.0         3.6          1.4         0.2"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_growth_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate growth mixture models using OpenMx — mx_growth_mixture","title":"Estimate growth mixture models using OpenMx — mx_growth_mixture","text":"function wrapper around mx_mixture, adding default arguments lavaan::growth() simplify specification growth mixture models. function useful latent variables model growth factors.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_growth_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate growth mixture models using OpenMx — mx_growth_mixture","text":"","code":"mx_growth_mixture(model, classes = 1L, data = NULL, run = TRUE, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_growth_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate growth mixture models using OpenMx — mx_growth_mixture","text":"model Syntax model; either character string, list character strings, list mxModel objects. See Details. classes vector integers, indicating class solutions generate. Defaults 1L. E.g., classes = 1:6, classes = c(1:4, 6:8). data data.frame used model fitting. run Logical, whether run model. run = TRUE, function calls mixture_starts run_mx. ... Additional arguments, passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_growth_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate growth mixture models using OpenMx — mx_growth_mixture","text":"Returns OpenMx::mxModel().","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_growth_mixture.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate growth mixture models using OpenMx — mx_growth_mixture","text":"Van Lissa, C. J., Garnier-Villarreal, M., & Anadria, D. (2023). Recommended Practices Latent Class Analysis using Open-Source R-Package tidySEM. Structural Equation Modeling. doi:10.1080/10705511.2023.2250920","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_growth_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate growth mixture models using OpenMx — mx_growth_mixture","text":"","code":"if (FALSE) { # \\dontrun{ data(\"empathy\") df <- empathy[1:6] mx_growth_mixture(model = \"i =~ 1*ec1 + 1*ec2 + 1*ec3 +1*ec4 +1*ec5 +1*ec6                            s =~ 0*ec1 + 1*ec2 + 2*ec3 +3*ec4 +4*ec5 +5*ec6                            ec1 ~~ vec1*ec1                            ec2 ~~ vec2*ec2                            ec3 ~~ vec3*ec3                            ec4 ~~ vec4*ec4                            ec5 ~~ vec5*ec5                            ec6 ~~ vec6*ec6                            i ~~ 0*i                            s ~~ 0*s                            i ~~ 0*s\",                   classes = 2,                   data = df) -> res } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_lca.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate latent class analyses using OpenMx — mx_lca","title":"Estimate latent class analyses using OpenMx — mx_lca","text":"function simplifies specification latent class models: models estimate membership categorical latent variable based binary ordinal indicators.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_lca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate latent class analyses using OpenMx — mx_lca","text":"","code":"mx_lca(data = NULL, classes = 1L, run = TRUE, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_lca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate latent class analyses using OpenMx — mx_lca","text":"data data.frame used model fitting. classes vector integers, indicating class solutions generate. Defaults 1L. E.g., classes = 1:6, run Logical, whether run model. run = TRUE, function calls OpenMx::mxTryHardOrdinal(). ... Additional arguments, passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_lca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate latent class analyses using OpenMx — mx_lca","text":"Returns OpenMx::mxModel().","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_lca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate latent class analyses using OpenMx — mx_lca","text":"Van Lissa, C. J., Garnier-Villarreal, M., & Anadria, D. (2023). Recommended Practices Latent Class Analysis using Open-Source R-Package tidySEM. Structural Equation Modeling. doi:10.1080/10705511.2023.2250920","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_lca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate latent class analyses using OpenMx — mx_lca","text":"","code":"if (FALSE) { # \\dontrun{ df <- data_mix_ordinal df[1:4] <- lapply(df, ordered) mx_lca(data = df,        classes = 2) -> res } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mixture models using OpenMx — mx_mixture","title":"Estimate mixture models using OpenMx — mx_mixture","text":"Dynamically creates batch mixture models, intelligent defaults. See Details information.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mixture models using OpenMx — mx_mixture","text":"","code":"mx_mixture(model, classes = 1L, data = NULL, run = TRUE, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mixture models using OpenMx — mx_mixture","text":"model Syntax model; either character string, list character strings, list mxModel objects. See Details. classes vector integers, indicating class solutions generate. Defaults 1L. E.g., classes = 1:6, classes = c(1:4, 6:8). data data.frame used model fitting. run Logical, whether run model. run = TRUE, function calls mixture_starts run_mx. ... Additional arguments, passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mixture models using OpenMx — mx_mixture","text":"Returns OpenMx::mxModel().","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mixture models using OpenMx — mx_mixture","text":"Model syntax can specified three ways, ease use flexibility: atomic character string lavaan syntax. Within syntax, character string {C} dynamically substituted correct class number using lsub, example set unique parameter labels class, specify equality constraints. E.g., x ~ m{C}*1 expanded x ~ m1*1 x ~ m2*1 classes = 2. resulting syntax class converted mxModel using as_ram. list character strings lavaan syntax. item list converted class-specific mxModel using as_ram. list mxModel objects, specified user.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mixture models using OpenMx — mx_mixture","text":"Van Lissa, C. J., Garnier-Villarreal, M., & Anadria, D. (2023). Recommended Practices Latent Class Analysis using Open-Source R-Package tidySEM. Structural Equation Modeling. doi:10.1080/10705511.2023.2250920","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mixture models using OpenMx — mx_mixture","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Dynamic model generation using {C} df <- iris[, 1, drop = FALSE] names(df) <- \"x\" mx_mixture(model = \"x ~ m{C}*1                     x ~~ v{C}*x\", classes = 1, data = df) # Example 2: Manually specified class-specific models df <- iris[1:2] names(df) <- c(\"x\", \"y\") mx_mixture(model = list(\"y ~ a*x\",                         \"y ~ b*x\"),                         meanstructure = TRUE,                         data = df) -> res  # Example 3: Latent growth model df <- empathy[1:6] mx_mixture(model = \"i =~ 1*ec1 + 1*ec2 + 1*ec3 +1*ec4 +1*ec5 +1*ec6                     s =~ 0*ec1 + 1*ec2 + 2*ec3 +3*ec4 +4*ec5 +5*ec6\",                     classes = 2,                     data = df) -> res } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate latent profile analyses using OpenMx — mx_profiles","title":"Estimate latent profile analyses using OpenMx — mx_profiles","text":"function wrapper around mx_mixture simplify specification latent profile models, also known finite mixture models. default, function estimates free means observed variables across classes.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate latent profile analyses using OpenMx — mx_profiles","text":"","code":"mx_profiles(   data = NULL,   classes = 1L,   variances = \"equal\",   covariances = \"zero\",   run = TRUE,   expand_grid = FALSE,   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate latent profile analyses using OpenMx — mx_profiles","text":"data data.frame used model fitting. classes vector integers, indicating class solutions generate. Defaults 1L. E.g., classes = 1:6, variances Character vector. Specifies variance components estimate. Defaults \"equal\" (constrain variances across classes); option \"varying\" (estimate variances freely across classes). element vector refers one models wish run. covariances Character vector. Specifies covariance components estimate. Defaults \"zero\" (covariances constrained zero; corresponds assumption conditional independence indicators); options \"equal\" (covariances items constrained equal across classes), \"varying\" (free covariances across classes). run Logical, whether run model. run = TRUE, function calls mixture_starts run_mx. expand_grid Logical, whether estimate possible combinations variances covariances arguments. Defaults FALSE. ... Additional arguments, passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_profiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate latent profile analyses using OpenMx — mx_profiles","text":"Returns OpenMx::mxModel().","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_profiles.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate latent profile analyses using OpenMx — mx_profiles","text":"Van Lissa, C. J., Garnier-Villarreal, M., & Anadria, D. (2023). Recommended Practices Latent Class Analysis using Open-Source R-Package tidySEM. Structural Equation Modeling. doi:10.1080/10705511.2023.2250920","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_profiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate latent profile analyses using OpenMx — mx_profiles","text":"","code":"if (FALSE) { # \\dontrun{ data(\"empathy\") df <- empathy[1:6] mx_profiles(data = df,             classes = 2) -> res } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_switch_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch LCA Class Labels — mx_switch_labels","title":"Switch LCA Class Labels — mx_switch_labels","text":"order class labels LCA arbitrary. can result phenomenon called 'label switching', classes change places replications analysis. function attempts re-order classes substantively meaningful way.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_switch_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch LCA Class Labels — mx_switch_labels","text":"","code":"mx_switch_labels(x, param = \"weights\", decreasing = TRUE, order = NULL)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_switch_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch LCA Class Labels — mx_switch_labels","text":"x MxModel estimated mx_mixture one wrappers. param parameter order classes, defaults 'weights', orders classes based sample size. decreasing logical. classes sorted increasing decreasing order? Default: TRUE order Integer, indicating ordering classes. Ignored NULL (default).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_switch_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch LCA Class Labels — mx_switch_labels","text":"MxModel \"tidySEM\" attribute: \"mixture\"","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_switch_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Switch LCA Class Labels — mx_switch_labels","text":"argument param can accept either: default string \"weights\", classes sorted size. OpenMx matrix indicator specific model parameter; e.g., first mean indicated \"M[1,1]\". indicators can viewed running table_results(x, columns = NULL). letter indicating OpenMx model matrix, e.g., \"M\" refers matrix means. account elements matrix, Euclidean distance origin used.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/mx_switch_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch LCA Class Labels — mx_switch_labels","text":"","code":"if (FALSE) { # \\dontrun{ df <- iris[1:4] names(df) <- letters[1:4] res1 <- mx_profiles(data = df, classes = 2) mx_switch_labels(res1, decreasing = FALSE) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes from sem_graph — nodes","title":"Extract nodes from sem_graph — nodes","text":"Provides access nodes element sem_graph object. can used return assign nodes element.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes from sem_graph — nodes","text":"","code":"nodes(x)  nodes(x) <- value"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes from sem_graph — nodes","text":"x Object class sem_graph. value valid value nodes(x).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes from sem_graph — nodes","text":"data.frame","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract nodes from sem_graph — nodes","text":"","code":"edg <- data.frame(from = \"x\", to = \"y\") p <- prepare_graph(edges = edg, layout = get_layout(\"x\", \"y\", rows = 1)) nodes(p) #>   name shape label x y node_xmin node_xmax node_ymin node_ymax show #> 1    x  rect     x 2 2       1.4       2.6       1.6       2.4 TRUE #> 2    y  rect     y 4 2       3.4       4.6       1.6       2.4 TRUE"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/paste2.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate Strings while omitting NA — paste2","title":"Concatenate Strings while omitting NA — paste2","text":"Concatenate vectors converting character removing NA values. See paste.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/paste2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate Strings while omitting NA — paste2","text":"","code":"paste2(..., sep = \" \", collapse = NULL, na.rm = TRUE)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/paste2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate Strings while omitting NA — paste2","text":"... one R objects, converted character vectors. sep character string separate terms. NA_character_. collapse optional character string separate results. NA_character_. na.rm logical, indicating whether NA values stripped concatenation. NA_character_.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/paste2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate Strings while omitting NA — paste2","text":"character vector concatenated values.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/paste2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate Strings while omitting NA — paste2","text":"","code":"paste2(\"word\", NA) #> [1] \"word\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plas_depression.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated depression data — plas_depression","title":"Simulated depression data — plas_depression","text":"simulated dataset, based work progress Plas colleagues, contains six repeated measurements Depression subscale Symptom Checklist-90 (SCL-90).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plas_depression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated depression data — plas_depression","text":"","code":"data(plas_depression)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plas_depression.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated depression data — plas_depression","text":"data frame 978 rows 6 variables.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plas_depression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated depression data — plas_depression","text":"data inspired Prospection Stress-related Military Research (PRISMO) study, examined psychological problems deployment 1,000 Dutch military personnel deployed Afghanistan, 2005-2019.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plas_depression.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated depression data — plas_depression","text":"van der Wal, S. J., Gorter, R., Reijnen, ., Geuze, E., & Vermetten, E. (2019). Cohort profile: Prospective Research Stress-Related Military Operations (PRISMO) study Dutch Armed Forces. BMJ Open, 9(3), e026670. doi:10.1136/bmjopen-2018-026670","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create correlation plots for a mixture model — plot_bivariate","title":"Create correlation plots for a mixture model — plot_bivariate","text":"Creates faceted plot two-dimensional correlation plots unidimensional density plots single mixture model.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create correlation plots for a mixture model — plot_bivariate","text":"","code":"plot_bivariate(   x,   variables = NULL,   sd = TRUE,   cors = TRUE,   rawdata = TRUE,   bw = FALSE,   alpha_range = c(0, 0.1),   return_list = FALSE,   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create correlation plots for a mixture model — plot_bivariate","text":"x object method exists. variables variables plot. NULL, plots variables present model. sd Logical. Whether show estimated standard deviations lines emanating cluster centroid. cors Logical. Whether show estimated correlation (standardized covariance) ellipses surrounding cluster centroid. rawdata Logical. Whether plot raw data, weighted posterior class probability. bw Logical. Whether make black white plot (print) color plot. Defaults FALSE, density plots hard read black white. alpha_range Numeric vector (0-1). Sets transparency geom_density geom_point. return_list Logical. Whether return list ggplot objects, just final plot. Defaults FALSE. ... Additional arguments.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create correlation plots for a mixture model — plot_bivariate","text":"object class 'ggplot'.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_bivariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create correlation plots for a mixture model — plot_bivariate","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create correlation plots for a mixture model — plot_bivariate","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ iris_sample <- iris[c(1:5, 145:150), c(\"Sepal.Length\", \"Sepal.Width\")] names(iris_sample) <- c(\"x\", \"y\") res <- mx_profiles(iris_sample, classes = 2) plot_bivariate(res, rawdata = FALSE) } #> Running mix2 with 7 parameters #> Running mix2 with 7 parameters"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Create density plots for mixture models — plot_density","title":"Create density plots for mixture models — plot_density","text":"Creates mixture density plots. variable, Total density plot shown, along separate density plots latent class, cases weighted posterior probability assigned class.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create density plots for mixture models — plot_density","text":"","code":"plot_density(   x,   variables = NULL,   bw = FALSE,   conditional = FALSE,   alpha = 0.2,   facet_labels = NULL )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create density plots for mixture models — plot_density","text":"x Object method exists. variables variables plot. NULL, plots variables present models. bw Logical. Whether make black white plot (print) color plot. Defaults FALSE, density plots hard read black white. conditional Logical. Whether show conditional density plot (surface area divided among latent classes), classic density plot (surface area total density plot equal one, divided among classes). alpha Numeric (0-1). used bw conditional FALSE. Sets transparency geom_density, classes small number cases remain visible. facet_labels Named character vector, names correspond facet labels one wishes rename, values provide new names facets. example, rename variables, example 'iris' data , one specify: facet_labels = c(\"Pet_leng\" = \"Petal length\").","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create density plots for mixture models — plot_density","text":"object class 'ggplot'.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create density plots for mixture models — plot_density","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create density plots for mixture models — plot_density","text":"","code":"if (FALSE) { # \\dontrun{ dat <-   iris[, c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\")] names(dat) <- paste0(\"x\", 1:4) res <- mx_profiles(dat, 1:3) plot_density(res) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot growth trajectories — plot_growth","title":"Plot growth trajectories — plot_growth","text":"Plots latent observed trajectories latent growth models.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot growth trajectories — plot_growth","text":"","code":"plot_growth(   x,   items = NULL,   growth_variables = NULL,   time_scale = NULL,   bw = FALSE,   rawdata = FALSE,   estimated = TRUE,   alpha_range = c(0, 0.1),   jitter_lines = NULL )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot growth trajectories — plot_growth","text":"x oject method exists. items Character vector. Indicate names observed variables growth trajectory plot. NULL (default), observed variables used. Use option plot one trajectory model contains multiple latent growth trajectories. growth_variables Character vector. Indicate names latent variables growth trajectory plot. NULL (default), latent growth variables used. Use option plot one trajectory model contains multiple latent growth trajectories. time_scale Numeric vector. case loadings growth model freely estimated, provide correct time scale (e.g., c(0, 1, 2)). bw Logical. plot black white (print), color? rawdata Logical. raw data (observed trajectories) plotted background? Setting TRUE might result long plotting times. Requires including Mplus syntax 'SAVEDATA: FILE \"filename\"; SAVE = cprobabilities' Mplus input. estimated Logical. Mplus estimates growth trajectories displayed? Defaults TRUE. alpha_range Numeric vector. minimum maximum values alpha (transparency) raw data. Minimum 0; lower maximum values alpha can help reduce overplotting. jitter_lines Numeric. Indicate amount (expressed fractions standard deviation observed data) observed trajectories vertically jittered. Like alpha_range, parameter helps control overplotting.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot growth trajectories — plot_growth","text":"object class 'ggplot'.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_growth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot growth trajectories — plot_growth","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_growth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot growth trajectories — plot_growth","text":"","code":"if (FALSE) { # \\dontrun{ data(\"empathy\") df <- empathy[1:6] mx_growth_mixture(model = \"i =~ 1*ec1 + 1*ec2 + 1*ec3 +1*ec4 +1*ec5 +1*ec6                            s =~ 0*ec1 + 1*ec2 + 2*ec3 +3*ec4 +4*ec5 +5*ec6                            ec1 ~~ vec1*ec1                            ec2 ~~ vec2*ec2                            ec3 ~~ vec3*ec3                            ec4 ~~ vec4*ec4                            ec5 ~~ vec5*ec5                            ec6 ~~ vec6*ec6                            i ~~ 0*i                            s ~~ 0*s                            i ~~ 0*s\",                   classes = 2,                   data = df) -> res plot_growth(res, rawdata = FALSE) } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot categorical variable probabilities — plot_prob","title":"Plot categorical variable probabilities — plot_prob","text":"Creates bar chart categorical variable probabilities bars reflecting probability category membership category observed variable.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot categorical variable probabilities — plot_prob","text":"","code":"plot_prob(   x,   variables = NULL,   bars = c(\"Variable\", \"group\", \"class\"),   facet = c(\"group\", \"class\", \"Variable\"),   bw = FALSE,   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot categorical variable probabilities — plot_prob","text":"x object method exists variables character vectors names variables plotted (optional). bars Atomic character, indicating separate bars represent. One c(\"Variable\", \"group\", \"class\"). facet Atomic character, indicating separate facets represent. One c(\"group\", \"class\", \"Variable\"). bw Logical. plot black white (print), color? ... Arguments passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot categorical variable probabilities — plot_prob","text":"object class 'ggplot'.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_prob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot categorical variable probabilities — plot_prob","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot categorical variable probabilities — plot_prob","text":"","code":"df_plot <- data.frame(Variable = rep(c(\"u1\", \"u2\"), each = 3), Category = rep(1:3, 2), Probability = c(0.3381302605812, 0.148395173612088, 0.513474565806711, 0.472337708760608, 0.118484201496432, 0.40917808974296)) plot_prob(df_plot)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create latent profile plots — plot_profiles","title":"Create latent profile plots — plot_profiles","text":"Creates profile plot (ribbon plot) according best practices, focusing visualization classification uncertainty showing: Bars reflecting confidence interval class centroids Boxes reflecting standard deviations within class; box encompasses +/- 64 percent observations normal distribution Raw data, whose transparency weighted posterior class probability, observation clearly visible class likely member .","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create latent profile plots — plot_profiles","text":"","code":"plot_profiles(   x,   variables = NULL,   ci = 0.95,   sd = TRUE,   add_line = FALSE,   rawdata = TRUE,   bw = FALSE,   alpha_range = c(0, 0.1),   ... )  # Default S3 method plot_profiles(   x,   variables = NULL,   ci = 0.95,   sd = TRUE,   add_line = FALSE,   rawdata = TRUE,   bw = FALSE,   alpha_range = c(0, 0.1),   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create latent profile plots — plot_profiles","text":"x object containing results mixture model analysis. variables character vectors names variables plotted (optional). ci Numeric. confidence interval error bars span? Defaults 95 percent confidence interval. Set NULL remove error bars. sd Logical. Whether display box encompassing +/- 1SD Defaults TRUE. add_line Logical. Whether display line, connecting cluster centroids belonging latent class. Defaults FALSE, recommended imply connectivity different variables X-axis. rawdata raw data plotted background? Setting TRUE might result long plotting times. bw Logical. plot black white (print), color? alpha_range minimum maximum values alpha (transparency) raw data. Minimum 0; lower maximum values alpha can help reduce overplotting. ... Arguments passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_profiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create latent profile plots — plot_profiles","text":"object class 'ggplot'.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_profiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create latent profile plots — plot_profiles","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/plot_profiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create latent profile plots — plot_profiles","text":"","code":"df_plot <- data.frame(Variable = \"x1\", Class = \"class1\", Classes = 1, Model = \"equal var 1\", Value = 3.48571428571429, se = 0.426092805342181, Value.Variances = 3.81265306156537, se.Variances = 1.17660769119959) plot_profiles(list(df_plot = df_plot, df_raw = NULL), ci = NULL, sd = FALSE, add_line = FALSE, rawdata = FALSE, bw = FALSE)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/poms.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply POMS-coding to data — poms","title":"Apply POMS-coding to data — poms","text":"Takes data.frame, applies POMS (proportion maximum)-coding numeric columns.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/poms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply POMS-coding to data — poms","text":"","code":"poms(data)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/poms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply POMS-coding to data — poms","text":"data data.frame.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/poms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply POMS-coding to data — poms","text":"data.frame.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/poms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply POMS-coding to data — poms","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/poms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply POMS-coding to data — poms","text":"","code":"data <- data.frame(a = c(1, 2, 2, 4, 1, 6),                    b = c(6, 6, 3, 5, 3, 4),                    c = c(\"a\", \"b\", \"b\", \"t\", \"f\", \"g\")) poms(data) #>     a         b c #> 1 0.0 1.0000000 a #> 2 0.2 1.0000000 b #> 3 0.2 0.0000000 b #> 4 0.6 0.6666667 t #> 5 0.0 0.0000000 f #> 6 1.0 0.3333333 g"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/prepare_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare graph data — prepare_graph.dagitty","title":"Prepare graph data — prepare_graph.dagitty","text":"Prepare object class sem_graph, containing data objects can rendered SEM graph. Using function allows users manually change default graph specification plotting . Input consists (least) layout, either nodes edges, model object.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/prepare_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare graph data — prepare_graph.dagitty","text":"","code":"# S3 method for class 'dagitty' prepare_graph(model, rect_height = 0.5, rect_width = 0.5, ...)  prepare_graph(...)  # Default S3 method prepare_graph(   edges = NULL,   layout = NULL,   nodes = NULL,   rect_width = 1.2,   rect_height = 0.8,   ellipses_width = 1,   ellipses_height = 1,   variance_diameter = 0.8,   spacing_x = 2,   spacing_y = 2,   text_size = 4,   curvature = 60,   angle = NULL,   fix_coord = FALSE,   ... )  # S3 method for class 'lavaan' prepare_graph(model, edges = NULL, layout = NULL, nodes = NULL, ...)  # S3 method for class 'MxModel' prepare_graph(model, ...)  # S3 method for class 'character' prepare_graph(...)  # S3 method for class 'mplus.model' prepare_graph(model, edges = NULL, layout = NULL, nodes = NULL, ...)  # S3 method for class 'mplusObject' prepare_graph(model, edges = NULL, layout = NULL, nodes = NULL, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/prepare_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare graph data — prepare_graph.dagitty","text":"model Instead edges argument, also possible use model argument pass object method exists (e.g., mplus.model lavaan). rect_height Height rectangles (used display observed variables), Default: 0.8 rect_width Width rectangles (used display observed variables), Default: 1.2 ... Additional arguments passed functions. edges Object class 'tidy_edges', data.frame  (least) columns c(\"\", \"\"), optionally, c(\"arrow\", \"label\", \"connect_from\", \"connect_to\", \"curvature\"). layout matrix (data.frame) describes layout; see get_layout. nodes Optional, object class 'tidy_nodes', created get_nodes function, data.frame (least) column c(\"name\"), optionally, c(\"shape\", \"label\"). set NULL (default), nodes inferred layout edges arguments. ellipses_width Width ellipses (used display latent variables), Default: 1 ellipses_height Height ellipses (used display latent variables), Default: 1 variance_diameter Diameter variance circles, Default: .8 spacing_x Spacing columns graph, Default: 1 spacing_y Spacing rows graph, Default: 1 text_size Point size text, Default: 4 curvature Curvature curved edges. curve circle segment originating point forms triangle two connected points, angles two connected points equal curvature. flip curved edge, use negative value curvature. Default: 60 angle Angle used connect nodes top bottom. Defaults NULL, means Euclidean distance used determine shortest distance node sides. numeric value 0-180 can provided, 0 means nodes x-coordinates connected top--bottom, 180 means nodes connected top--bottom. fix_coord Whether fix aspect ratio graph. work multi-group multilevel models. Default: FALSE.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/prepare_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare graph data — prepare_graph.dagitty","text":"Object class 'sem_graph'","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/prepare_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare graph data — prepare_graph.dagitty","text":"","code":"library(lavaan) res <- sem(\"dist ~ speed\", cars) prepare_graph(res) #> A tidy_sem object with 3 edges and 2 nodes, and the following elements: #> v  edges             v  nodes #> v  rect_width        v  rect_height #> v  ellipses_width    v  ellipses_height #> v  variance_diameter v  spacing_x #> v  spacing_y         v  text_size #> v  curvature         o  angle #> v  fix_coord"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/pseudo_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","title":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","text":"Estimate auxiliary model based multiple datasets, randomly drawing latent class values based estimated probability belonging class. pseudo class variable treated observed variable within dataset, results pooled across datasets account classification uncertainty.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/pseudo_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","text":"","code":"pseudo_class(x, model, df_complete = NULL, ...)  # S3 method for class 'MxModel' pseudo_class(x, model, df_complete = NULL, data = NULL, m = 20, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/pseudo_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","text":"x object method exists, typically either fitted mx_mixture model class_draws object. model Either expression execute every generated dataset, function performs analysis every generated dataset, character can interpreted structural equation model using as_ram. model can explicitly refer data. df_complete Integer. Degrees freedom complete-data analysis. ... Additional arguments passed functions. data data.frame auxiliary model can evaluated. Note row order must identical data used fit x, data augmented pseudo-class draw specific individual. m Integer. Number datasets generate. Default 20.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/pseudo_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","text":"object class data.frame containing pooled estimates.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/pseudo_class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","text":"Pseudo-class technique: Wang C-P, Brown CH, Bandeen-Roche K (2005). Residual Diagnostics Growth Mixture Models: Examining Impact Preventive Intervention Multiple Trajectories Aggressive Behavior. Journal American Statistical Association 100(3):1054-1076. doi:10.1198/016214505000000501 Pooling results across samples: Van Buuren, S. 2018. Flexible Imputation Missing Data. Second Edition. Boca Raton, FL: Chapman & Hall/CRC. doi:10.1201/9780429492259","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/pseudo_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate an Auxiliary Model using the Pseudo-Class Method — pseudo_class","text":"","code":"if(requireNamespace(\"OpenMx\", quietly = TRUE)){ set.seed(2) dat <- iris[c(1:5, 50:55, 100:105), 1:4] colnames(dat) <- c(\"SL\", \"SW\", \"PL\", \"PW\") fit <- suppressWarnings(mx_profiles(data = dat, classes = 3))  pct_mx <- pseudo_class(x = fit,                        model = \"SL ~ class\",                        data = dat,                        m = 2)  pct_lm <- pseudo_class(x = fit,              model = lm( SL ~ class, data = data),              data = dat,              m = 2)   pcte <- pseudo_class(x = fit,                      model = lm(SL ~ class, data = data),                      data = dat,                      m = 2)  pct_func <- pseudo_class(x = fit,                          model = function(data){lm(SL ~ class, data = data)},                          data = dat,                          m = 2)   } #> Running mix3 with 18 parameters #> Running mix3 with 18 parameters #> The degrees of freedom are assumed to be equal to the total number of observations used in the model ( 17 ) minus the number of parameters estimated ( 5 ). This may not be correct. If necessary, provide a better value via the 'df_complete' argument"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Report formatted number — report","title":"Report formatted number — report","text":"Report number, rounded specific number decimals (defaults two), using formatC. Intended 'R Markdown' reports.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report formatted number — report","text":"","code":"report(x, digits = 2, equals = TRUE)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report formatted number — report","text":"x Numeric. Value reported digits Integer. Number digits round . equals Logical. Whether report equals (: smaller ) sign.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report formatted number — report","text":"atomic character vector.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/report.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Report formatted number — report","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report formatted number — report","text":"","code":"report(.0234) #> [1] \"= 0.02\""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_lavaan.html","id":null,"dir":"Reference","previous_headings":"","what":"Run as lavaan model — run_lavaan","title":"Run as lavaan model — run_lavaan","text":"convenience function runs objects method exists using lavaan. intended use tidySEM, passes $syntax $data elements tidy_sem object lavaan.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_lavaan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run as lavaan model — run_lavaan","text":"","code":"run_lavaan(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_lavaan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run as lavaan model — run_lavaan","text":"x object method exists. ... Parameters passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_lavaan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run as lavaan model — run_lavaan","text":"Returns lavaan object.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_lavaan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run as lavaan model — run_lavaan","text":"","code":"df <- iris[1:3] names(df) <- paste0(\"X_\", 1:3) run_lavaan(measurement(tidy_sem(df), meanstructure = TRUE)) #> Warning: lavaan->lav_object_post_check():   #>    some estimated ov variances are negative #> lavaan 0.6-19 ended normally after 86 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                         9 #>  #>   Number of observations                           150 #>  #> Model Test User Model: #>                                                        #>   Test statistic                                 0.000 #>   Degrees of freedom                                 0"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_mx.html","id":null,"dir":"Reference","previous_headings":"","what":"Run as OpenMx model with sensible defaults — run_mx","title":"Run as OpenMx model with sensible defaults — run_mx","text":"convenience function runs objects method exists using OpenMx, sensible defaults. intended use tidySEM. instance, convert tidySEM object mxModel run , try ensure convergence mixture models created using mx_mixture. Knowledgeable users may want run models manually.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_mx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run as OpenMx model with sensible defaults — run_mx","text":"","code":"run_mx(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_mx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run as OpenMx model with sensible defaults — run_mx","text":"x object method exists. ... Parameters passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_mx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run as OpenMx model with sensible defaults — run_mx","text":"Returns mxModel free parameters updated final values.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/run_mx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run as OpenMx model with sensible defaults — run_mx","text":"","code":"df <- iris[1:3] names(df) <- paste0(\"X_\", 1:3) run_mx(measurement(tidy_sem(df), meanstructure = TRUE)) #> Running model with 9 parameters #> MxModel 'model'  #> type : RAM  #> $matrices : 'A', 'S', 'F', and 'M'  #> $algebras : NULL  #> $penalties : NULL  #> $constraints : NULL  #> $intervals : NULL  #> $latentVars : 'X'  #> $manifestVars : 'X_1', 'X_2', and 'X_3'  #> $data : 150 x 3  #> $data means : NA #> $data type: 'raw'  #> $submodels : NULL  #> $expectation : MxExpectationRAM  #> $fitfunction : MxFitFunctionML  #> $compute : MxComputeSequence  #> $independent : FALSE  #> $options :   #> $output : TRUE"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/skew_kurtosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate skew and kurtosis — skew_kurtosis","title":"Calculate skew and kurtosis — skew_kurtosis","text":"Calculate skew kurtosis, standard errors , estimates divided two times standard error. latter quantity exceeds absolute value 1, skew/kurtosis significant. large sample sizes, significant skew/kurtosis common.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/skew_kurtosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate skew and kurtosis — skew_kurtosis","text":"","code":"skew_kurtosis(x, verbose = FALSE, se = FALSE, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/skew_kurtosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate skew and kurtosis — skew_kurtosis","text":"x object method exists. verbose Logical. Whether print messages console, Default: FALSE se Whether return standard errors, Default: FALSE ... Additional arguments pass functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/skew_kurtosis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate skew and kurtosis — skew_kurtosis","text":"matrix skew kurtosis statistics x.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/skew_kurtosis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate skew and kurtosis — skew_kurtosis","text":"","code":"skew_kurtosis(datasets::anscombe) #>           skew    skew_2se     kurt  kurt_2se #> x1  0.00000000  0.00000000 1.780000 0.6956300 #> x2  0.00000000  0.00000000 1.780000 0.6956300 #> x3  0.00000000  0.00000000 1.780000 0.6956300 #> x4  2.84604989  2.15385490 9.100000 3.5563107 #> y1 -0.05580807 -0.04223484 2.179061 0.8515845 #> y2 -1.12910800 -0.85449479 3.007674 1.1754091 #> y3  1.59223074  1.20498027 5.130453 2.0049984 #> y4  1.29302529  0.97854534 4.390789 1.7159351"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/syntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract syntax from tidy_sem — syntax","title":"Extract syntax from tidy_sem — syntax","text":"Provides access syntax element tidy_sem object. can used return assign syntax element.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/syntax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract syntax from tidy_sem — syntax","text":"","code":"syntax(x)  syntax(x) <- value"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/syntax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract syntax from tidy_sem — syntax","text":"x Object class tidy_sem. value valid value syntax(x).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/syntax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract syntax from tidy_sem — syntax","text":"data.frame","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/syntax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract syntax from tidy_sem — syntax","text":"","code":"dict <- tidy_sem(iris, split = \"\\\\.\") dict <- add_paths(dict, Sepal.Width ~~ Sepal.Length) syntax(dict) #>            lhs op          rhs block group free label ustart plabel #> 1  Sepal.Width ~~ Sepal.Length     1     1    1           NA   .p1. #> 2  Sepal.Width ~~  Sepal.Width     1     1    1           NA   .p2. #> 3 Sepal.Length ~~ Sepal.Length     1     1    1           NA   .p3. #> 4  Sepal.Width ~1                  1     1    1           NA   .p4. #> 5 Sepal.Length ~1                  1     1    1           NA   .p5."},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_cors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract correlation tables — table_cors","title":"Extract correlation tables — table_cors","text":"Extracts publication-ready covariance correlation matrix object method exists.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_cors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract correlation tables — table_cors","text":"","code":"table_cors(x, value_column = \"est_sig_std\", digits = 2, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_cors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract correlation tables — table_cors","text":"x object method exists. value_column Character. Name column use propagate matrix. Defaults \"est_sig_std\", standardized estimate significance asterisks. digits Number digits round formatting values. ... Additional arguments passed methods.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_cors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract correlation tables — table_cors","text":"Matrix list matrices (case /within correlation matrices).","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_cors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract correlation tables — table_cors","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_cors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract correlation tables — table_cors","text":"","code":"library(lavaan) HS.model <- '  visual =~ x1 + x2 + x3                textual =~ x4 + x5 + x6                speed   =~ x7 + x8 + x9 ' fit <- cfa(HS.model,            data = HolzingerSwineford1939,            group = \"school\") table_cors(fit) #> $Pasteur #>         speed    textual   visual    #> speed   \"1.00\"   \"0.33**\"  \"0.30**\"  #> textual \"0.33**\" \"1.00\"    \"0.48***\" #> visual  \"0.30**\" \"0.48***\" \"1.00\"    #>  #> $`Grant-White` #>         speed     textual   visual    #> speed   \"1.00\"    \"0.34***\" \"0.52***\" #> textual \"0.34***\" \"1.00\"    \"0.54***\" #> visual  \"0.52***\" \"0.54***\" \"1.00\"    #>"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Print model fit table formatted for publication — table_fit","title":"Print model fit table formatted for publication — table_fit","text":"Takes model object, extracts model fit information, formats publication-ready table.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print model fit table formatted for publication — table_fit","text":"","code":"table_fit(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print model fit table formatted for publication — table_fit","text":"x model object method exists. ... Arguments passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print model fit table formatted for publication — table_fit","text":"data.frame formatted results.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print model fit table formatted for publication — table_fit","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print model fit table formatted for publication — table_fit","text":"","code":"library(lavaan) HS.model <- '  visual =~ x1 + x2 + x3                textual =~ x4 + x5 + x6                speed   =~ x7 + x8 + x9 ' fit <- cfa(HS.model,            data = HolzingerSwineford1939,            group = \"school\") table_fit(fit) #>   Name Parameters      fmin    chisq df       pvalue baseline.chisq baseline.df #> 1  fit         60 0.1924441 115.8513 48 1.545283e-07       957.7691          72 #>   baseline.pvalue       cfi       tli      nnfi       rfi       nfi      pnfi #> 1               0 0.9233984 0.8850976 0.8850976 0.8185606 0.8790404 0.5860269 #>         ifi       rni        LL unrestricted.logl      aic      bic   n #> 1 0.9254192 0.9233984 -3682.198         -3624.272 7484.395 7706.822 301 #>       bic2      rmsea rmsea.ci.lower rmsea.ci.upper rmsea.ci.level rmsea.pvalue #> 1 7516.536 0.09691486     0.07450529      0.1195828            0.9 0.0005925388 #>   rmsea.close.h0 rmsea.notclose.pvalue rmsea.notclose.h0       rmr rmr_nomean #> 1           0.05             0.8965993              0.08 0.0834983 0.09146781 #>         srmr srmr_bentler srmr_bentler_nomean       crmr crmr_nomean srmr_mplus #> 1 0.06786401   0.06786401           0.0743413 0.07434131  0.08311611 0.06786402 #>   srmr_mplus_nomean    cn_05    cn_01       gfi      agfi      pgfi       mfi #> 1        0.07434131 170.3239 192.4391 0.9950447 0.9888506 0.4422421 0.8934098 #>        ecvi #> 1 0.7835593"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Results table in probability scale — table_prob","title":"Results table in probability scale — table_prob","text":"Returns thresholds ordinal dependent variables probability scale.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results table in probability scale — table_prob","text":"","code":"table_prob(x, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Results table in probability scale — table_prob","text":"x object method exists. ... Arguments passed functions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Results table in probability scale — table_prob","text":"data.frame results probability scale.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Results table in probability scale — table_prob","text":"","code":"if (FALSE) { # \\dontrun{ df <- data_mix_ordinal df[1:4] <- lapply(df, ordered) mx_lca(data = df,        classes = 2) -> res } # }"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Print results table formatted for publication — table_results","title":"Print results table formatted for publication — table_results","text":"Takes model object, formats publication-ready table.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print results table formatted for publication — table_results","text":"","code":"table_results(   x,   columns = c(\"label\", \"est_sig\", \"se\", \"pval\", \"confint\", \"group\", \"level\"),   digits = 2,   format_numeric = TRUE,   ... )"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print results table formatted for publication — table_results","text":"x model object method exists. columns character vector columns retain results section. set NULL, available columns returned. Defaults c(\"label\", \"est_sig\", \"se\", \"pval\", \"confint\", \"group\", \"level\"). correspond 1) parameter label, 2) estimate column significance asterisks appended (* <.05, ** < .01, *** < .001); 3) standard error, 4) p-value, 5) formatted confidence interval, 6) grouping variable (available), 7) level variable multilevel models, available. digits Number digits round formatting numeric columns. format_numeric Logical, indicating whether format numeric columns. Defaults TRUE. ... Logical expressions used filter rows results returned.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print results table formatted for publication — table_results","text":"data.frame formatted results.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_results.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print results table formatted for publication — table_results","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/table_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print results table formatted for publication — table_results","text":"","code":"library(lavaan) HS.model <- '  visual =~ x1 + x2 + x3                textual =~ x4 + x5 + x6                speed   =~ x7 + x8 + x9 ' fit <- cfa(HS.model,            data = HolzingerSwineford1939,            group = \"school\") table_results(fit) #>                              label est_sig   se pval       confint       group #> 1             visual.BY.x1.Pasteur    1.00 0.00 <NA>  [1.00, 1.00]     Pasteur #> 2             visual.BY.x2.Pasteur  0.39** 0.12 0.00  [0.15, 0.63]     Pasteur #> 3             visual.BY.x3.Pasteur 0.57*** 0.14 0.00  [0.30, 0.84]     Pasteur #> 4            textual.BY.x4.Pasteur    1.00 0.00 <NA>  [1.00, 1.00]     Pasteur #> 5            textual.BY.x5.Pasteur 1.18*** 0.10 0.00  [0.98, 1.38]     Pasteur #> 6            textual.BY.x6.Pasteur 0.87*** 0.08 0.00  [0.72, 1.03]     Pasteur #> 7              speed.BY.x7.Pasteur    1.00 0.00 <NA>  [1.00, 1.00]     Pasteur #> 8              speed.BY.x8.Pasteur 1.12*** 0.28 0.00  [0.58, 1.67]     Pasteur #> 9              speed.BY.x9.Pasteur 0.92*** 0.22 0.00  [0.48, 1.36]     Pasteur #> 10            Variances.x1.Pasteur    0.30 0.23 0.20 [-0.16, 0.75]     Pasteur #> 11            Variances.x2.Pasteur 1.33*** 0.16 0.00  [1.02, 1.64]     Pasteur #> 12            Variances.x3.Pasteur 0.99*** 0.14 0.00  [0.72, 1.26]     Pasteur #> 13            Variances.x4.Pasteur 0.43*** 0.07 0.00  [0.29, 0.56]     Pasteur #> 14            Variances.x5.Pasteur 0.46*** 0.09 0.00  [0.29, 0.62]     Pasteur #> 15            Variances.x6.Pasteur 0.29*** 0.05 0.00  [0.19, 0.39]     Pasteur #> 16            Variances.x7.Pasteur 0.82*** 0.12 0.00  [0.58, 1.06]     Pasteur #> 17            Variances.x8.Pasteur 0.51*** 0.12 0.00  [0.28, 0.74]     Pasteur #> 18            Variances.x9.Pasteur 0.68*** 0.10 0.00  [0.48, 0.88]     Pasteur #> 19        Variances.visual.Pasteur 1.10*** 0.28 0.00  [0.55, 1.64]     Pasteur #> 20       Variances.textual.Pasteur 0.89*** 0.15 0.00  [0.60, 1.19]     Pasteur #> 21         Variances.speed.Pasteur  0.35** 0.13 0.01  [0.10, 0.60]     Pasteur #> 22     visual.WITH.textual.Pasteur 0.48*** 0.11 0.00  [0.27, 0.69]     Pasteur #> 23       visual.WITH.speed.Pasteur   0.19* 0.08 0.02  [0.03, 0.34]     Pasteur #> 24      textual.WITH.speed.Pasteur  0.18** 0.07 0.01  [0.05, 0.32]     Pasteur #> 25                Means.x1.Pasteur 4.94*** 0.09 0.00  [4.76, 5.13]     Pasteur #> 26                Means.x2.Pasteur 5.98*** 0.10 0.00  [5.79, 6.18]     Pasteur #> 27                Means.x3.Pasteur 2.49*** 0.09 0.00  [2.31, 2.67]     Pasteur #> 28                Means.x4.Pasteur 2.82*** 0.09 0.00  [2.64, 3.00]     Pasteur #> 29                Means.x5.Pasteur 4.00*** 0.10 0.00  [3.79, 4.20]     Pasteur #> 30                Means.x6.Pasteur 1.92*** 0.08 0.00  [1.77, 2.08]     Pasteur #> 31                Means.x7.Pasteur 4.43*** 0.09 0.00  [4.26, 4.60]     Pasteur #> 32                Means.x8.Pasteur 5.56*** 0.08 0.00  [5.41, 5.72]     Pasteur #> 33                Means.x9.Pasteur 5.42*** 0.08 0.00  [5.26, 5.57]     Pasteur #> 34            Means.visual.Pasteur    0.00 0.00 <NA>  [0.00, 0.00]     Pasteur #> 35           Means.textual.Pasteur    0.00 0.00 <NA>  [0.00, 0.00]     Pasteur #> 36             Means.speed.Pasteur    0.00 0.00 <NA>  [0.00, 0.00]     Pasteur #> 37        visual.BY.x1.Grant-White    1.00 0.00 <NA>  [1.00, 1.00] Grant-White #> 38        visual.BY.x2.Grant-White 0.74*** 0.15 0.00  [0.43, 1.04] Grant-White #> 39        visual.BY.x3.Grant-White 0.92*** 0.17 0.00  [0.60, 1.25] Grant-White #> 40       textual.BY.x4.Grant-White    1.00 0.00 <NA>  [1.00, 1.00] Grant-White #> 41       textual.BY.x5.Grant-White 0.99*** 0.09 0.00  [0.82, 1.16] Grant-White #> 42       textual.BY.x6.Grant-White 0.96*** 0.08 0.00  [0.80, 1.13] Grant-White #> 43         speed.BY.x7.Grant-White    1.00 0.00 <NA>  [1.00, 1.00] Grant-White #> 44         speed.BY.x8.Grant-White 1.23*** 0.19 0.00  [0.86, 1.59] Grant-White #> 45         speed.BY.x9.Grant-White 1.06*** 0.16 0.00  [0.74, 1.38] Grant-White #> 46        Variances.x1.Grant-White 0.71*** 0.13 0.00  [0.47, 0.96] Grant-White #> 47        Variances.x2.Grant-White 0.90*** 0.12 0.00  [0.66, 1.14] Grant-White #> 48        Variances.x3.Grant-White 0.56*** 0.10 0.00  [0.36, 0.76] Grant-White #> 49        Variances.x4.Grant-White 0.32*** 0.06 0.00  [0.19, 0.44] Grant-White #> 50        Variances.x5.Grant-White 0.42*** 0.07 0.00  [0.28, 0.56] Grant-White #> 51        Variances.x6.Grant-White 0.41*** 0.07 0.00  [0.27, 0.54] Grant-White #> 52        Variances.x7.Grant-White 0.60*** 0.09 0.00  [0.42, 0.78] Grant-White #> 53        Variances.x8.Grant-White 0.40*** 0.09 0.00  [0.22, 0.59] Grant-White #> 54        Variances.x9.Grant-White 0.53*** 0.09 0.00  [0.36, 0.71] Grant-White #> 55    Variances.visual.Grant-White 0.60*** 0.16 0.00  [0.29, 0.92] Grant-White #> 56   Variances.textual.Grant-White 0.94*** 0.15 0.00  [0.64, 1.24] Grant-White #> 57     Variances.speed.Grant-White 0.46*** 0.12 0.00  [0.23, 0.69] Grant-White #> 58 visual.WITH.textual.Grant-White 0.41*** 0.10 0.00  [0.22, 0.60] Grant-White #> 59   visual.WITH.speed.Grant-White 0.28*** 0.08 0.00  [0.13, 0.42] Grant-White #> 60  textual.WITH.speed.Grant-White  0.22** 0.07 0.00  [0.08, 0.37] Grant-White #> 61            Means.x1.Grant-White 4.93*** 0.10 0.00  [4.74, 5.12] Grant-White #> 62            Means.x2.Grant-White 6.20*** 0.09 0.00  [6.02, 6.38] Grant-White #> 63            Means.x3.Grant-White 2.00*** 0.09 0.00  [1.83, 2.16] Grant-White #> 64            Means.x4.Grant-White 3.32*** 0.09 0.00  [3.13, 3.50] Grant-White #> 65            Means.x5.Grant-White 4.71*** 0.10 0.00  [4.52, 4.90] Grant-White #> 66            Means.x6.Grant-White 2.47*** 0.09 0.00  [2.28, 2.65] Grant-White #> 67            Means.x7.Grant-White 3.92*** 0.09 0.00  [3.75, 4.09] Grant-White #> 68            Means.x8.Grant-White 5.49*** 0.09 0.00  [5.32, 5.66] Grant-White #> 69            Means.x9.Grant-White 5.33*** 0.09 0.00  [5.16, 5.49] Grant-White #> 70        Means.visual.Grant-White    0.00 0.00 <NA>  [0.00, 0.00] Grant-White #> 71       Means.textual.Grant-White    0.00 0.00 <NA>  [0.00, 0.00] Grant-White #> 72         Means.speed.Grant-White    0.00 0.00 <NA>  [0.00, 0.00] Grant-White"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tidy_sem object — tidy_sem","title":"Create a tidy_sem object — tidy_sem","text":"Create object class tidy_sem, following elements: dictionary overview variables tidy_sem object, assignment scale/latent variables. data Optionally, data.frame containing data referenced $dictionary. syntax Optionally, syntax defining SEM-model reference variables contained $data.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tidy_sem object — tidy_sem","text":"","code":"tidy_sem(x, split = \"_\")"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tidy_sem object — tidy_sem","text":"x object method exists, e.g., vector variable names, data.frame. split Character. Defining regular expression used strsplit separate variable names 1) name scale/construct 2) number (name) item.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tidy_sem object — tidy_sem","text":"object class \"tidy_sem\"","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a tidy_sem object — tidy_sem","text":"tidy_sem called character string data.frame, attempts assign variables superordinate scale/latent variables based variable name splitting character defined split argument. Thus, function assign variable \"scale_01\" scale/latent variable called \"scale\" split = \"_\".  Alternatively, variable name \"construct.1\", split character \"\\.\" separates \"construct\" name item number \"1\". character \".\" escaped double backslash, special character regular expressions.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a tidy_sem object — tidy_sem","text":"Caspar J. van Lissa","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/tidy_sem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tidy_sem object — tidy_sem","text":"","code":"tidy_sem(c(\"bfi_1\", \"bfi_2\", \"bfi_3\", \"bfi_4\", \"bfi_5\", \"macqj_1\", \"macqj_2\", \"macqj_3\", \"macqj_4\", \"macqj_5\", \"macqj_6\", \"macqj_7\", \"macqj_8\", \"macqj_9\", \"macqj_10\", \"macqj_11\", \"macqj_12\", \"macqj_13\", \"macqj_14\", \"macqj_15\", \"macqj_16\", \"macqj_17\", \"macqj_18\", \"macqj_19\", \"macqj_20\", \"macqj_21\", \"macqr_1\", \"macqr_2\", \"macqr_3\", \"macqr_4\", \"macqr_5\", \"macqr_6\", \"macqr_7\", \"macqr_8\", \"macqr_9\", \"macqr_10\", \"macqr_11\", \"macqr_12\", \"macqr_13\", \"macqr_14\", \"macqr_15\", \"macqr_16\", \"macqr_17\", \"macqr_18\", \"macqr_19\", \"macqr_20\", \"macqr_21\", \"sex\")) #> A tidy_sem object #> v    $dictionary #> o    $data #> o    $syntax suppressMessages(tidy_sem(c(\"bfi_1\", \"bfi_2\", \"bfi_3\", \"bfi_4\", \"bfi_5\", \"mac_q_j_1\", \"mac_q_j_2\", \"mac_q_j_3\", \"mac_q_j_4\", \"mac_q_j_5\", \"mac_q_j_6\", \"mac_q_j_7\", \"mac_q_j_8\", \"mac_q_j_9\", \"mac_q_j_10\", \"mac_q_j_11\", \"mac_q_j_12\", \"mac_q_j_13\", \"mac_q_j_14\", \"mac_q_j_15\", \"mac_q_j_16\", \"mac_q_j_17\", \"mac_q_j_18\", \"mac_q_j_19\", \"mac_q_j_20\", \"mac_q_j_21\", \"mac_q_r_1\", \"mac_q_r_2\", \"mac_q_r_3\", \"mac_q_r_4\", \"mac_q_r_5\", \"mac_q_r_6\", \"mac_q_r_7\", \"mac_q_r_8\", \"mac_q_r_9\", \"mac_q_r_10\", \"mac_q_r_11\", \"mac_q_r_12\", \"mac_q_r_13\", \"mac_q_r_14\", \"mac_q_r_15\", \"mac_q_r_16\", \"mac_q_r_17\", \"mac_q_r_18\", \"mac_q_r_19\", \"mac_q_r_20\", \"mac_q_r_21\"))) #> A tidy_sem object #> v    $dictionary #> o    $data #> o    $syntax"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/wald_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Wald Test for Linear Hypotheses — wald_test","title":"Wald Test for Linear Hypotheses — wald_test","text":"function wrapper function car::linearHypothesis(), uses bain::bain() syntax parse equality constrained hypotheses.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/wald_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wald Test for Linear Hypotheses — wald_test","text":"","code":"wald_test(x, hypothesis, ...)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/wald_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wald Test for Linear Hypotheses — wald_test","text":"x object method exists. hypothesis character string equality constrained hypotheses, specified according bain::bain() syntax. ... Additional arguments passed car::linearHypothesis().","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/wald_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wald Test for Linear Hypotheses — wald_test","text":"data.frame class wald_test.","code":""},{"path":[]},{"path":"https://cjvanlissa.github.io/tidySEM/reference/wald_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wald Test for Linear Hypotheses — wald_test","text":"","code":"mod <- lm(Sepal.Length ~ Sepal.Width, data = iris) coef(mod) #> (Intercept) Sepal.Width  #>   6.5262226  -0.2233611  wald_test(mod, \"Sepal.Width = 0\") #> Wald chi-square tests for linear hypotheses: #>     Hypothesis  df    chisq p      NA.    NA..1     NA..2 #>  Sepal.Width=0 148 100.7561 1 1.412238 2.074427 0.1518983"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/zegwaard_carecompass.html","id":null,"dir":"Reference","previous_headings":"","what":"Caregiver Compass Data — zegwaard_carecompass","title":"Caregiver Compass Data — zegwaard_carecompass","text":"simulated data based study Dijenborgh, Swildens, Zegwaard different types caregivers among providing informal care outpatients receiving mental healthcare.","code":""},{"path":"https://cjvanlissa.github.io/tidySEM/reference/zegwaard_carecompass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Caregiver Compass Data — zegwaard_carecompass","text":"","code":"data(zegwaard_carecompass)"},{"path":"https://cjvanlissa.github.io/tidySEM/reference/zegwaard_carecompass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Caregiver Compass Data — zegwaard_carecompass","text":"data frame 513 rows 10 variables.","code":""},{"path":[]}]
